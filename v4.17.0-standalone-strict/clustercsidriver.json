{
  "description": "ClusterCSIDriver object allows management and configuration of a CSI driver operator installed by default in OpenShift. Name of the object must be name of the CSI driver it operates. See CSIDriverName type for list of allowed values. \n Compatibility level 1: Stable within a major release for a minimum of 12 months or 3 minor releases (whichever is longer).",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "ClusterCSIDriver"
      ]
    },
    "metadata": {
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations",
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "creationTimestamp": {
          "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
          "type": [
            "string",
            "null"
          ],
          "format": "date-time"
        },
        "deletionGracePeriodSeconds": {
          "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "deletionTimestamp": {
          "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
          "type": [
            "string",
            "null"
          ],
          "format": "date-time"
        },
        "finalizers": {
          "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "string",
              "null"
            ]
          },
          "x-kubernetes-list-type": "set",
          "x-kubernetes-patch-strategy": "merge"
        },
        "generateName": {
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
          "type": [
            "string",
            "null"
          ]
        },
        "generation": {
          "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels",
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "managedFields": {
          "description": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "fieldsType": {
                "description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
                "type": [
                  "string",
                  "null"
                ]
              },
              "fieldsV1": {
                "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff",
                "type": [
                  "object",
                  "null"
                ]
              },
              "manager": {
                "description": "Manager is an identifier of the workflow managing these fields.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "operation": {
                "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "subresource": {
                "description": "Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "time": {
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-type": "atomic"
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
          "type": [
            "string",
            "null"
          ]
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces",
          "type": [
            "string",
            "null"
          ]
        },
        "ownerReferences": {
          "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "apiVersion",
              "kind",
              "name",
              "uid"
            ],
            "properties": {
              "apiVersion": {
                "description": "API version of the referent.",
                "type": "string"
              },
              "blockOwnerDeletion": {
                "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "controller": {
                "description": "If true, this reference points to the managing controller.",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "kind": {
                "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "name": {
                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
                "type": "string"
              },
              "uid": {
                "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
                "type": "string"
              }
            },
            "x-kubernetes-map-type": "atomic",
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "uid"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "uid",
          "x-kubernetes-patch-strategy": "merge"
        },
        "resourceVersion": {
          "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type": [
            "string",
            "null"
          ]
        },
        "selfLink": {
          "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
          "type": [
            "string",
            "null"
          ]
        },
        "uid": {
          "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    "spec": {
      "description": "spec holds user settable values for configuration",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "driverConfig": {
          "description": "driverConfig can be used to specify platform specific driver configuration. When omitted, this means no opinion and the platform is left to choose reasonable defaults. These defaults are subject to change over time.",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "driverType"
          ],
          "properties": {
            "aws": {
              "description": "aws is used to configure the AWS CSI driver.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "efsVolumeMetrics": {
                  "description": "efsVolumeMetrics sets the configuration for collecting metrics from EFS volumes used by the EFS CSI Driver.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "state"
                  ],
                  "properties": {
                    "recursiveWalk": {
                      "description": "recursiveWalk provides additional configuration for collecting volume metrics in the AWS EFS CSI Driver when the state is set to RecursiveWalk.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "fsRateLimit": {
                          "description": "fsRateLimit defines the rate limit, in goroutines per file system, for processing volume metrics. When omitted, this means no opinion and the platform is left to choose a reasonable default, which is subject to change over time. The current default is 5. The valid range is from 1 to 100 goroutines.",
                          "type": [
                            "integer",
                            "null"
                          ],
                          "format": "int32",
                          "maximum": 100,
                          "minimum": 1
                        },
                        "refreshPeriodMinutes": {
                          "description": "refreshPeriodMinutes specifies the frequency, in minutes, at which volume metrics are refreshed. When omitted, this means no opinion and the platform is left to choose a reasonable default, which is subject to change over time. The current default is 240. The valid range is from 1 to 43200 minutes (30 days).",
                          "type": [
                            "integer",
                            "null"
                          ],
                          "format": "int32",
                          "maximum": 43200,
                          "minimum": 1
                        }
                      },
                      "additionalProperties": false
                    },
                    "state": {
                      "description": "state defines the state of metric collection in the AWS EFS CSI Driver. This field is required and must be set to one of the following values: Disabled or RecursiveWalk. Disabled means no metrics collection will be performed. This is the default value. RecursiveWalk means the AWS EFS CSI Driver will recursively scan volumes to collect metrics. This process may result in high CPU and memory usage, depending on the volume size.",
                      "type": "string",
                      "enum": [
                        "RecursiveWalk",
                        "Disabled"
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                "kmsKeyARN": {
                  "description": "kmsKeyARN sets the cluster default storage class to encrypt volumes with a user-defined KMS key, rather than the default KMS key used by AWS. The value may be either the ARN or Alias ARN of a KMS key.",
                  "type": [
                    "string",
                    "null"
                  ],
                  "pattern": "^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b|aws-iso-e|aws-iso-f):kms:[a-z0-9-]+:[0-9]{12}:(key|alias)\\/.*$"
                }
              },
              "additionalProperties": false
            },
            "azure": {
              "description": "azure is used to configure the Azure CSI driver.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "diskEncryptionSet": {
                  "description": "diskEncryptionSet sets the cluster default storage class to encrypt volumes with a customer-managed encryption set, rather than the default platform-managed keys.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "name",
                    "resourceGroup",
                    "subscriptionID"
                  ],
                  "properties": {
                    "name": {
                      "description": "name is the name of the disk encryption set that will be set on the default storage class. The value should consist of only alphanumberic characters, underscores (_), hyphens, and be at most 80 characters in length.",
                      "type": "string",
                      "maxLength": 80,
                      "pattern": "^[a-zA-Z0-9\\_-]+$"
                    },
                    "resourceGroup": {
                      "description": "resourceGroup defines the Azure resource group that contains the disk encryption set. The value should consist of only alphanumberic characters, underscores (_), parentheses, hyphens and periods. The value should not end in a period and be at most 90 characters in length.",
                      "type": "string",
                      "maxLength": 90,
                      "pattern": "^[\\w\\.\\-\\(\\)]*[\\w\\-\\(\\)]$"
                    },
                    "subscriptionID": {
                      "description": "subscriptionID defines the Azure subscription that contains the disk encryption set. The value should meet the following conditions: 1. It should be a 128-bit number. 2. It should be 36 characters (32 hexadecimal characters and 4 hyphens) long. 3. It should be displayed in five groups separated by hyphens (-). 4. The first group should be 8 characters long. 5. The second, third, and fourth groups should be 4 characters long. 6. The fifth group should be 12 characters long. An Example SubscrionID: f2007bbf-f802-4a47-9336-cf7c6b89b378",
                      "type": "string",
                      "maxLength": 36,
                      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "driverType": {
              "description": "driverType indicates type of CSI driver for which the driverConfig is being applied to. Valid values are: AWS, Azure, GCP, IBMCloud, vSphere and omitted. Consumers should treat unknown values as a NO-OP.",
              "type": "string",
              "enum": [
                "",
                "AWS",
                "Azure",
                "GCP",
                "IBMCloud",
                "vSphere"
              ]
            },
            "gcp": {
              "description": "gcp is used to configure the GCP CSI driver.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "kmsKey": {
                  "description": "kmsKey sets the cluster default storage class to encrypt volumes with customer-supplied encryption keys, rather than the default keys managed by GCP.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "keyRing",
                    "name",
                    "projectID"
                  ],
                  "properties": {
                    "keyRing": {
                      "description": "keyRing is the name of the KMS Key Ring which the KMS Key belongs to. The value should correspond to an existing KMS key ring and should consist of only alphanumeric characters, hyphens (-) and underscores (_), and be at most 63 characters in length.",
                      "type": "string",
                      "maxLength": 63,
                      "minLength": 1,
                      "pattern": "^[a-zA-Z0-9\\_-]+$"
                    },
                    "location": {
                      "description": "location is the GCP location in which the Key Ring exists. The value must match an existing GCP location, or \"global\". Defaults to global, if not set.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "pattern": "^[a-zA-Z0-9\\_-]+$"
                    },
                    "name": {
                      "description": "name is the name of the customer-managed encryption key to be used for disk encryption. The value should correspond to an existing KMS key and should consist of only alphanumeric characters, hyphens (-) and underscores (_), and be at most 63 characters in length.",
                      "type": "string",
                      "maxLength": 63,
                      "minLength": 1,
                      "pattern": "^[a-zA-Z0-9\\_-]+$"
                    },
                    "projectID": {
                      "description": "projectID is the ID of the Project in which the KMS Key Ring exists. It must be 6 to 30 lowercase letters, digits, or hyphens. It must start with a letter. Trailing hyphens are prohibited.",
                      "type": "string",
                      "maxLength": 30,
                      "minLength": 6,
                      "pattern": "^[a-z][a-z0-9-]+[a-z0-9]$"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "ibmcloud": {
              "description": "ibmcloud is used to configure the IBM Cloud CSI driver.",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "encryptionKeyCRN"
              ],
              "properties": {
                "encryptionKeyCRN": {
                  "description": "encryptionKeyCRN is the IBM Cloud CRN of the customer-managed root key to use for disk encryption of volumes for the default storage classes.",
                  "type": "string",
                  "maxLength": 154,
                  "minLength": 144,
                  "pattern": "^crn:v[0-9]+:bluemix:(public|private):(kms|hs-crypto):[a-z-]+:a/[0-9a-f]+:[0-9a-f-]{36}:key:[0-9a-f-]{36}$"
                }
              },
              "additionalProperties": false
            },
            "vSphere": {
              "description": "vsphere is used to configure the vsphere CSI driver.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "globalMaxSnapshotsPerBlockVolume": {
                  "description": "globalMaxSnapshotsPerBlockVolume is a global configuration parameter that applies to volumes on all kinds of datastores. If omitted, the platform chooses a default, which is subject to change over time, currently that default is 3. Snapshots can not be disabled using this parameter. Increasing number of snapshots above 3 can have negative impact on performance, for more details see: https://kb.vmware.com/s/article/1025279 Volume snapshot documentation: https://docs.vmware.com/en/VMware-vSphere-Container-Storage-Plug-in/3.0/vmware-vsphere-csp-getting-started/GUID-E0B41C69-7EEB-450F-A73D-5FD2FF39E891.html",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "int32",
                  "maximum": 32,
                  "minimum": 1
                },
                "granularMaxSnapshotsPerBlockVolumeInVSAN": {
                  "description": "granularMaxSnapshotsPerBlockVolumeInVSAN is a granular configuration parameter on vSAN datastore only. It overrides GlobalMaxSnapshotsPerBlockVolume if set, while it falls back to the global constraint if unset. Snapshots for VSAN can not be disabled using this parameter.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "int32",
                  "maximum": 32,
                  "minimum": 1
                },
                "granularMaxSnapshotsPerBlockVolumeInVVOL": {
                  "description": "granularMaxSnapshotsPerBlockVolumeInVVOL is a granular configuration parameter on Virtual Volumes datastore only. It overrides GlobalMaxSnapshotsPerBlockVolume if set, while it falls back to the global constraint if unset. Snapshots for VVOL can not be disabled using this parameter.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "int32",
                  "maximum": 32,
                  "minimum": 1
                },
                "topologyCategories": {
                  "description": "topologyCategories indicates tag categories with which vcenter resources such as hostcluster or datacenter were tagged with. If cluster Infrastructure object has a topology, values specified in Infrastructure object will be used and modifications to topologyCategories will be rejected.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "x-kubernetes-list-type": "atomic"
                }
              },
              "additionalProperties": false
            }
          },
          "x-kubernetes-validations": [
            {
              "message": "ibmcloud must be set if driverType is 'IBMCloud', but remain unset otherwise",
              "rule": "has(self.driverType) && self.driverType == 'IBMCloud' ? has(self.ibmcloud) : !has(self.ibmcloud)"
            }
          ],
          "additionalProperties": false
        },
        "logLevel": {
          "description": "logLevel is an intent based logging for an overall component.  It does not give fine grained control, but it is a simple way to manage coarse grained logging choices that operators have to interpret for their operands. \n Valid values are: \"Normal\", \"Debug\", \"Trace\", \"TraceAll\". Defaults to \"Normal\".",
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "",
            "Normal",
            "Debug",
            "Trace",
            "TraceAll"
          ]
        },
        "managementState": {
          "description": "managementState indicates whether and how the operator should manage the component",
          "type": [
            "string",
            "null"
          ],
          "pattern": "^(Managed|Unmanaged|Force|Removed)$"
        },
        "observedConfig": {
          "description": "observedConfig holds a sparse config that controller has observed from the cluster state.  It exists in spec because it is an input to the level for the operator",
          "x-kubernetes-preserve-unknown-fields": true
        },
        "operatorLogLevel": {
          "description": "operatorLogLevel is an intent based logging for the operator itself.  It does not give fine grained control, but it is a simple way to manage coarse grained logging choices that operators have to interpret for themselves. \n Valid values are: \"Normal\", \"Debug\", \"Trace\", \"TraceAll\". Defaults to \"Normal\".",
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "",
            "Normal",
            "Debug",
            "Trace",
            "TraceAll"
          ]
        },
        "storageClassState": {
          "description": "StorageClassState determines if CSI operator should create and manage storage classes. If this field value is empty or Managed - CSI operator will continuously reconcile storage class and create if necessary. If this field value is Unmanaged - CSI operator will not reconcile any previously created storage class. If this field value is Removed - CSI operator will delete the storage class it created previously. When omitted, this means the user has no opinion and the platform chooses a reasonable default, which is subject to change over time. The current default behaviour is Managed.",
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "",
            "Managed",
            "Unmanaged",
            "Removed"
          ]
        },
        "unsupportedConfigOverrides": {
          "description": "unsupportedConfigOverrides overrides the final configuration that was computed by the operator. Red Hat does not support the use of this field. Misuse of this field could lead to unexpected behavior or conflict with other configuration options. Seek guidance from the Red Hat support before using this field. Use of this property blocks cluster upgrades, it must be removed before upgrading your cluster.",
          "x-kubernetes-preserve-unknown-fields": true
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "status holds observed values from the cluster. They may not be overridden.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "conditions": {
          "description": "conditions is a list of conditions and their status",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "OperatorCondition is just the standard condition fields.",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "message": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "reason": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "status": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "type": {
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "generations": {
          "description": "generations are used to determine when an item needs to be reconciled or has changed in a way that needs a reaction.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "GenerationStatus keeps track of the generation for a given resource so that decisions about forced updates can be made.",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "group": {
                "description": "group is the group of the thing you're tracking",
                "type": [
                  "string",
                  "null"
                ]
              },
              "hash": {
                "description": "hash is an optional field set for resources without generation that are content sensitive like secrets and configmaps",
                "type": [
                  "string",
                  "null"
                ]
              },
              "lastGeneration": {
                "description": "lastGeneration is the last generation of the workload controller involved",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "name": {
                "description": "name is the name of the thing you're tracking",
                "type": [
                  "string",
                  "null"
                ]
              },
              "namespace": {
                "description": "namespace is where the thing you're tracking is",
                "type": [
                  "string",
                  "null"
                ]
              },
              "resource": {
                "description": "resource is the resource type of the thing you're tracking",
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-type": "atomic"
        },
        "observedGeneration": {
          "description": "observedGeneration is the last generation change you've dealt with",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "readyReplicas": {
          "description": "readyReplicas indicates how many replicas are ready and at the desired state",
          "type": [
            "integer",
            "null"
          ],
          "format": "int32"
        },
        "version": {
          "description": "version is the level this availability applies to",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "operator.openshift.io",
      "kind": "ClusterCSIDriver",
      "version": "v1"
    }
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}
