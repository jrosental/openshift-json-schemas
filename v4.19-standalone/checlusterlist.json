{
  "description": "CheClusterList is a list of CheCluster",
  "type": "object",
  "required": [
    "items"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "items": {
      "description": "List of checlusters. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
      "type": "array",
      "items": {
        "description": "The `CheCluster` custom resource allows defining and managing Eclipse Che server installation.\nBased on these settings, the  Operator automatically creates and maintains several ConfigMaps:\n`che`, `plugin-registry` that will contain the appropriate environment variables\nof the various components of the installation. These generated ConfigMaps must NOT be updated manually.",
        "type": "object",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
            "type": "object",
            "properties": {
              "annotations": {
                "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "creationTimestamp": {
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                "type": "string",
                "format": "date-time"
              },
              "deletionGracePeriodSeconds": {
                "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
                "type": "integer",
                "format": "int64"
              },
              "deletionTimestamp": {
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                "type": "string",
                "format": "date-time"
              },
              "finalizers": {
                "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "x-kubernetes-list-type": "set",
                "x-kubernetes-patch-strategy": "merge"
              },
              "generateName": {
                "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                "type": "string"
              },
              "generation": {
                "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
                "type": "integer",
                "format": "int64"
              },
              "labels": {
                "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "managedFields": {
                "description": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
                "type": "array",
                "items": {
                  "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
                  "type": "object",
                  "properties": {
                    "apiVersion": {
                      "description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
                      "type": "string"
                    },
                    "fieldsType": {
                      "description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
                      "type": "string"
                    },
                    "fieldsV1": {
                      "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff",
                      "type": "object"
                    },
                    "manager": {
                      "description": "Manager is an identifier of the workflow managing these fields.",
                      "type": "string"
                    },
                    "operation": {
                      "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
                      "type": "string"
                    },
                    "subresource": {
                      "description": "Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.",
                      "type": "string"
                    },
                    "time": {
                      "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "x-kubernetes-list-type": "atomic"
              },
              "name": {
                "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
                "type": "string"
              },
              "namespace": {
                "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces",
                "type": "string"
              },
              "ownerReferences": {
                "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
                "type": "array",
                "items": {
                  "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
                  "type": "object",
                  "required": [
                    "apiVersion",
                    "kind",
                    "name",
                    "uid"
                  ],
                  "properties": {
                    "apiVersion": {
                      "description": "API version of the referent.",
                      "type": "string"
                    },
                    "blockOwnerDeletion": {
                      "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
                      "type": "boolean"
                    },
                    "controller": {
                      "description": "If true, this reference points to the managing controller.",
                      "type": "boolean"
                    },
                    "kind": {
                      "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
                      "type": "string"
                    },
                    "uid": {
                      "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
                      "type": "string"
                    }
                  },
                  "x-kubernetes-map-type": "atomic"
                },
                "x-kubernetes-list-map-keys": [
                  "uid"
                ],
                "x-kubernetes-list-type": "map",
                "x-kubernetes-patch-merge-key": "uid",
                "x-kubernetes-patch-strategy": "merge"
              },
              "resourceVersion": {
                "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                "type": "string"
              },
              "selfLink": {
                "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
                "type": "string"
              },
              "uid": {
                "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
                "type": "string"
              }
            }
          },
          "spec": {
            "description": "Desired configuration of Eclipse Che installation.",
            "type": "object",
            "properties": {
              "components": {
                "description": "Che components configuration.",
                "type": "object",
                "properties": {
                  "cheServer": {
                    "description": "General configuration settings related to the Che server.",
                    "type": "object",
                    "properties": {
                      "clusterRoles": {
                        "description": "Additional ClusterRoles assigned to Che ServiceAccount.\nEach role must have a `app.kubernetes.io/part-of=che.eclipse.org` label.\nThe defaults roles are:\n- `<che-namespace>-cheworkspaces-clusterrole`\n- `<che-namespace>-cheworkspaces-namespaces-clusterrole`\n- `<che-namespace>-cheworkspaces-devworkspace-clusterrole`\nwhere the <che-namespace> is the namespace where the CheCluster CR is created.\nThe Che Operator must already have all permissions in these ClusterRoles to grant them.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "debug": {
                        "description": "Enables the debug mode for Che server.",
                        "type": "boolean"
                      },
                      "deployment": {
                        "description": "Deployment override options.",
                        "type": "object",
                        "properties": {
                          "containers": {
                            "description": "List of containers belonging to the pod.",
                            "type": "array",
                            "items": {
                              "description": "Container custom settings.",
                              "type": "object",
                              "properties": {
                                "env": {
                                  "description": "List of environment variables to set in the container.",
                                  "type": "array",
                                  "items": {
                                    "description": "EnvVar represents an environment variable present in a Container.",
                                    "type": "object",
                                    "required": [
                                      "name"
                                    ],
                                    "properties": {
                                      "name": {
                                        "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                                        "type": "string"
                                      },
                                      "valueFrom": {
                                        "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                                        "type": "object",
                                        "properties": {
                                          "configMapKeyRef": {
                                            "description": "Selects a key of a ConfigMap.",
                                            "type": "object",
                                            "required": [
                                              "key"
                                            ],
                                            "properties": {
                                              "key": {
                                                "description": "The key to select.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string"
                                              },
                                              "optional": {
                                                "description": "Specify whether the ConfigMap or its key must be defined",
                                                "type": "boolean"
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          },
                                          "fieldRef": {
                                            "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                            "type": "object",
                                            "required": [
                                              "fieldPath"
                                            ],
                                            "properties": {
                                              "apiVersion": {
                                                "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                "type": "string"
                                              },
                                              "fieldPath": {
                                                "description": "Path of the field to select in the specified API version.",
                                                "type": "string"
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          },
                                          "resourceFieldRef": {
                                            "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                            "type": "object",
                                            "required": [
                                              "resource"
                                            ],
                                            "properties": {
                                              "containerName": {
                                                "description": "Container name: required for volumes, optional for env vars",
                                                "type": "string"
                                              },
                                              "divisor": {
                                                "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                "x-kubernetes-int-or-string": true
                                              },
                                              "resource": {
                                                "description": "Required: resource to select",
                                                "type": "string"
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          },
                                          "secretKeyRef": {
                                            "description": "Selects a key of a secret in the pod's namespace",
                                            "type": "object",
                                            "required": [
                                              "key"
                                            ],
                                            "properties": {
                                              "key": {
                                                "description": "The key of the secret to select from.  Must be a valid secret key.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string"
                                              },
                                              "optional": {
                                                "description": "Specify whether the Secret or its key must be defined",
                                                "type": "boolean"
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "image": {
                                  "description": "Container image. Omit it or leave it empty to use the default container image provided by the Operator.",
                                  "type": "string"
                                },
                                "imagePullPolicy": {
                                  "description": "Image pull policy. Default value is `Always` for `nightly`, `next` or `latest` images, and `IfNotPresent` in other cases.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent",
                                    "Never"
                                  ]
                                },
                                "name": {
                                  "description": "Container name.",
                                  "type": "string"
                                },
                                "resources": {
                                  "description": "Compute resources required by this container.",
                                  "type": "object",
                                  "properties": {
                                    "limits": {
                                      "description": "Describes the maximum amount of compute resources allowed.",
                                      "type": "object",
                                      "properties": {
                                        "cpu": {
                                          "description": "CPU, in cores. (500m = .5 cores)\nIf the value is not specified, then the default value is set depending on the component.\nIf value is `0`, then no value is set for the component.",
                                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                          "x-kubernetes-int-or-string": true
                                        },
                                        "memory": {
                                          "description": "Memory, in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024)\nIf the value is not specified, then the default value is set depending on the component.\nIf value is `0`, then no value is set for the component.",
                                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                          "x-kubernetes-int-or-string": true
                                        }
                                      }
                                    },
                                    "request": {
                                      "description": "Describes the minimum amount of compute resources required.",
                                      "type": "object",
                                      "properties": {
                                        "cpu": {
                                          "description": "CPU, in cores. (500m = .5 cores)\nIf the value is not specified, then the default value is set depending on the component.\nIf value is `0`, then no value is set for the component.",
                                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                          "x-kubernetes-int-or-string": true
                                        },
                                        "memory": {
                                          "description": "Memory, in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024)\nIf the value is not specified, then the default value is set depending on the component.\nIf value is `0`, then no value is set for the component.",
                                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                          "x-kubernetes-int-or-string": true
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "nodeSelector": {
                            "description": "The node selector limits the nodes that can run the pod.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "securityContext": {
                            "description": "Security options the pod should run with.",
                            "type": "object",
                            "properties": {
                              "fsGroup": {
                                "description": "A special supplemental group that applies to all containers in a pod. The default value is `1724`.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "runAsUser": {
                                "description": "The UID to run the entrypoint of the container process. The default value is `1724`.",
                                "type": "integer",
                                "format": "int64"
                              }
                            }
                          },
                          "tolerations": {
                            "description": "The pod tolerations of the component pod limit where the pod can run.",
                            "type": "array",
                            "items": {
                              "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>.",
                              "type": "object",
                              "properties": {
                                "effect": {
                                  "description": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                                  "type": "string"
                                },
                                "key": {
                                  "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.",
                                  "type": "string"
                                },
                                "tolerationSeconds": {
                                  "description": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.",
                                  "type": "integer",
                                  "format": "int64"
                                },
                                "value": {
                                  "description": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "extraProperties": {
                        "description": "A map of additional environment variables applied in the generated `che` ConfigMap to be used by the Che server\nin addition to the values already generated from other fields of the `CheCluster` custom resource (CR).\nIf the `extraProperties` field contains a property normally generated in `che` ConfigMap from other CR fields,\nthe value defined in the `extraProperties` is used instead.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "logLevel": {
                        "description": "The log level for the Che server: `INFO` or `DEBUG`.",
                        "type": "string"
                      },
                      "proxy": {
                        "description": "Proxy server settings for Kubernetes cluster. No additional configuration is required for OpenShift cluster.\nBy specifying these settings for the OpenShift cluster, you override the OpenShift proxy configuration.",
                        "type": "object",
                        "properties": {
                          "credentialsSecretName": {
                            "description": "The secret name that contains `user` and `password` for a proxy server.\nThe secret must have a `app.kubernetes.io/part-of=che.eclipse.org` label.",
                            "type": "string"
                          },
                          "nonProxyHosts": {
                            "description": "A list of hosts that can be reached directly, bypassing the proxy.\nSpecify wild card domain use the following form `.<DOMAIN>`, for example:\n   - localhost\n   - 127.0.0.1\n   - my.host.com\n   - 123.42.12.32\nUse only when a proxy configuration is required. The Operator respects OpenShift cluster-wide proxy configuration,\ndefining `nonProxyHosts` in a custom resource leads to merging non-proxy hosts lists from the cluster proxy configuration, and the ones defined in the custom resources.\nSee the following page: https://docs.openshift.com/container-platform/latest/networking/enable-cluster-wide-proxy.html.\nIn some proxy configurations, localhost may not translate to 127.0.0.1. Both localhost and 127.0.0.1 should be specified in this situation.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "port": {
                            "description": "Proxy server port.",
                            "type": "string"
                          },
                          "url": {
                            "description": "URL (protocol+hostname) of the proxy server.\nUse only when a proxy configuration is required. The Operator respects OpenShift cluster-wide proxy configuration,\ndefining `url` in a custom resource leads to overriding the cluster proxy configuration.\nSee the following page: https://docs.openshift.com/container-platform/latest/networking/enable-cluster-wide-proxy.html.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "dashboard": {
                    "description": "Configuration settings related to the dashboard used by the Che installation.",
                    "type": "object",
                    "properties": {
                      "branding": {
                        "description": "Dashboard branding resources.",
                        "type": "object",
                        "properties": {
                          "logo": {
                            "description": "Dashboard logo.",
                            "type": "object",
                            "required": [
                              "base64data",
                              "mediatype"
                            ],
                            "properties": {
                              "base64data": {
                                "type": "string"
                              },
                              "mediatype": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "deployment": {
                        "description": "Deployment override options.",
                        "type": "object",
                        "properties": {
                          "containers": {
                            "description": "List of containers belonging to the pod.",
                            "type": "array",
                            "items": {
                              "description": "Container custom settings.",
                              "type": "object",
                              "properties": {
                                "env": {
                                  "description": "List of environment variables to set in the container.",
                                  "type": "array",
                                  "items": {
                                    "description": "EnvVar represents an environment variable present in a Container.",
                                    "type": "object",
                                    "required": [
                                      "name"
                                    ],
                                    "properties": {
                                      "name": {
                                        "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                                        "type": "string"
                                      },
                                      "valueFrom": {
                                        "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                                        "type": "object",
                                        "properties": {
                                          "configMapKeyRef": {
                                            "description": "Selects a key of a ConfigMap.",
                                            "type": "object",
                                            "required": [
                                              "key"
                                            ],
                                            "properties": {
                                              "key": {
                                                "description": "The key to select.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string"
                                              },
                                              "optional": {
                                                "description": "Specify whether the ConfigMap or its key must be defined",
                                                "type": "boolean"
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          },
                                          "fieldRef": {
                                            "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                            "type": "object",
                                            "required": [
                                              "fieldPath"
                                            ],
                                            "properties": {
                                              "apiVersion": {
                                                "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                "type": "string"
                                              },
                                              "fieldPath": {
                                                "description": "Path of the field to select in the specified API version.",
                                                "type": "string"
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          },
                                          "resourceFieldRef": {
                                            "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                            "type": "object",
                                            "required": [
                                              "resource"
                                            ],
                                            "properties": {
                                              "containerName": {
                                                "description": "Container name: required for volumes, optional for env vars",
                                                "type": "string"
                                              },
                                              "divisor": {
                                                "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                "x-kubernetes-int-or-string": true
                                              },
                                              "resource": {
                                                "description": "Required: resource to select",
                                                "type": "string"
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          },
                                          "secretKeyRef": {
                                            "description": "Selects a key of a secret in the pod's namespace",
                                            "type": "object",
                                            "required": [
                                              "key"
                                            ],
                                            "properties": {
                                              "key": {
                                                "description": "The key of the secret to select from.  Must be a valid secret key.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string"
                                              },
                                              "optional": {
                                                "description": "Specify whether the Secret or its key must be defined",
                                                "type": "boolean"
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "image": {
                                  "description": "Container image. Omit it or leave it empty to use the default container image provided by the Operator.",
                                  "type": "string"
                                },
                                "imagePullPolicy": {
                                  "description": "Image pull policy. Default value is `Always` for `nightly`, `next` or `latest` images, and `IfNotPresent` in other cases.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent",
                                    "Never"
                                  ]
                                },
                                "name": {
                                  "description": "Container name.",
                                  "type": "string"
                                },
                                "resources": {
                                  "description": "Compute resources required by this container.",
                                  "type": "object",
                                  "properties": {
                                    "limits": {
                                      "description": "Describes the maximum amount of compute resources allowed.",
                                      "type": "object",
                                      "properties": {
                                        "cpu": {
                                          "description": "CPU, in cores. (500m = .5 cores)\nIf the value is not specified, then the default value is set depending on the component.\nIf value is `0`, then no value is set for the component.",
                                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                          "x-kubernetes-int-or-string": true
                                        },
                                        "memory": {
                                          "description": "Memory, in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024)\nIf the value is not specified, then the default value is set depending on the component.\nIf value is `0`, then no value is set for the component.",
                                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                          "x-kubernetes-int-or-string": true
                                        }
                                      }
                                    },
                                    "request": {
                                      "description": "Describes the minimum amount of compute resources required.",
                                      "type": "object",
                                      "properties": {
                                        "cpu": {
                                          "description": "CPU, in cores. (500m = .5 cores)\nIf the value is not specified, then the default value is set depending on the component.\nIf value is `0`, then no value is set for the component.",
                                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                          "x-kubernetes-int-or-string": true
                                        },
                                        "memory": {
                                          "description": "Memory, in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024)\nIf the value is not specified, then the default value is set depending on the component.\nIf value is `0`, then no value is set for the component.",
                                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                          "x-kubernetes-int-or-string": true
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "nodeSelector": {
                            "description": "The node selector limits the nodes that can run the pod.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "securityContext": {
                            "description": "Security options the pod should run with.",
                            "type": "object",
                            "properties": {
                              "fsGroup": {
                                "description": "A special supplemental group that applies to all containers in a pod. The default value is `1724`.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "runAsUser": {
                                "description": "The UID to run the entrypoint of the container process. The default value is `1724`.",
                                "type": "integer",
                                "format": "int64"
                              }
                            }
                          },
                          "tolerations": {
                            "description": "The pod tolerations of the component pod limit where the pod can run.",
                            "type": "array",
                            "items": {
                              "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>.",
                              "type": "object",
                              "properties": {
                                "effect": {
                                  "description": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                                  "type": "string"
                                },
                                "key": {
                                  "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.",
                                  "type": "string"
                                },
                                "tolerationSeconds": {
                                  "description": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.",
                                  "type": "integer",
                                  "format": "int64"
                                },
                                "value": {
                                  "description": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "headerMessage": {
                        "description": "Dashboard header message.",
                        "type": "object",
                        "properties": {
                          "show": {
                            "description": "Instructs dashboard to show the message.",
                            "type": "boolean"
                          },
                          "text": {
                            "description": "Warning message displayed on the user dashboard.",
                            "type": "string"
                          }
                        }
                      },
                      "logLevel": {
                        "description": "The log level for the Dashboard.",
                        "type": "string",
                        "enum": [
                          "DEBUG",
                          "INFO",
                          "WARN",
                          "ERROR",
                          "FATAL",
                          "TRACE",
                          "SILENT"
                        ]
                      }
                    }
                  },
                  "devWorkspace": {
                    "description": "DevWorkspace Operator configuration.",
                    "type": "object",
                    "properties": {
                      "runningLimit": {
                        "description": "Deprecated in favor of `MaxNumberOfRunningWorkspacesPerUser`\nThe maximum number of running workspaces per user.",
                        "type": "string"
                      }
                    }
                  },
                  "devfileRegistry": {
                    "description": "Configuration settings related to the devfile registry used by the Che installation.",
                    "type": "object",
                    "properties": {
                      "deployment": {
                        "description": "Deprecated deployment override options.",
                        "type": "object",
                        "properties": {
                          "containers": {
                            "description": "List of containers belonging to the pod.",
                            "type": "array",
                            "items": {
                              "description": "Container custom settings.",
                              "type": "object",
                              "properties": {
                                "env": {
                                  "description": "List of environment variables to set in the container.",
                                  "type": "array",
                                  "items": {
                                    "description": "EnvVar represents an environment variable present in a Container.",
                                    "type": "object",
                                    "required": [
                                      "name"
                                    ],
                                    "properties": {
                                      "name": {
                                        "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                                        "type": "string"
                                      },
                                      "valueFrom": {
                                        "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                                        "type": "object",
                                        "properties": {
                                          "configMapKeyRef": {
                                            "description": "Selects a key of a ConfigMap.",
                                            "type": "object",
                                            "required": [
                                              "key"
                                            ],
                                            "properties": {
                                              "key": {
                                                "description": "The key to select.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string"
                                              },
                                              "optional": {
                                                "description": "Specify whether the ConfigMap or its key must be defined",
                                                "type": "boolean"
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          },
                                          "fieldRef": {
                                            "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                            "type": "object",
                                            "required": [
                                              "fieldPath"
                                            ],
                                            "properties": {
                                              "apiVersion": {
                                                "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                "type": "string"
                                              },
                                              "fieldPath": {
                                                "description": "Path of the field to select in the specified API version.",
                                                "type": "string"
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          },
                                          "resourceFieldRef": {
                                            "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                            "type": "object",
                                            "required": [
                                              "resource"
                                            ],
                                            "properties": {
                                              "containerName": {
                                                "description": "Container name: required for volumes, optional for env vars",
                                                "type": "string"
                                              },
                                              "divisor": {
                                                "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                "x-kubernetes-int-or-string": true
                                              },
                                              "resource": {
                                                "description": "Required: resource to select",
                                                "type": "string"
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          },
                                          "secretKeyRef": {
                                            "description": "Selects a key of a secret in the pod's namespace",
                                            "type": "object",
                                            "required": [
                                              "key"
                                            ],
                                            "properties": {
                                              "key": {
                                                "description": "The key of the secret to select from.  Must be a valid secret key.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string"
                                              },
                                              "optional": {
                                                "description": "Specify whether the Secret or its key must be defined",
                                                "type": "boolean"
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "image": {
                                  "description": "Container image. Omit it or leave it empty to use the default container image provided by the Operator.",
                                  "type": "string"
                                },
                                "imagePullPolicy": {
                                  "description": "Image pull policy. Default value is `Always` for `nightly`, `next` or `latest` images, and `IfNotPresent` in other cases.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent",
                                    "Never"
                                  ]
                                },
                                "name": {
                                  "description": "Container name.",
                                  "type": "string"
                                },
                                "resources": {
                                  "description": "Compute resources required by this container.",
                                  "type": "object",
                                  "properties": {
                                    "limits": {
                                      "description": "Describes the maximum amount of compute resources allowed.",
                                      "type": "object",
                                      "properties": {
                                        "cpu": {
                                          "description": "CPU, in cores. (500m = .5 cores)\nIf the value is not specified, then the default value is set depending on the component.\nIf value is `0`, then no value is set for the component.",
                                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                          "x-kubernetes-int-or-string": true
                                        },
                                        "memory": {
                                          "description": "Memory, in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024)\nIf the value is not specified, then the default value is set depending on the component.\nIf value is `0`, then no value is set for the component.",
                                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                          "x-kubernetes-int-or-string": true
                                        }
                                      }
                                    },
                                    "request": {
                                      "description": "Describes the minimum amount of compute resources required.",
                                      "type": "object",
                                      "properties": {
                                        "cpu": {
                                          "description": "CPU, in cores. (500m = .5 cores)\nIf the value is not specified, then the default value is set depending on the component.\nIf value is `0`, then no value is set for the component.",
                                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                          "x-kubernetes-int-or-string": true
                                        },
                                        "memory": {
                                          "description": "Memory, in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024)\nIf the value is not specified, then the default value is set depending on the component.\nIf value is `0`, then no value is set for the component.",
                                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                          "x-kubernetes-int-or-string": true
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "nodeSelector": {
                            "description": "The node selector limits the nodes that can run the pod.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "securityContext": {
                            "description": "Security options the pod should run with.",
                            "type": "object",
                            "properties": {
                              "fsGroup": {
                                "description": "A special supplemental group that applies to all containers in a pod. The default value is `1724`.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "runAsUser": {
                                "description": "The UID to run the entrypoint of the container process. The default value is `1724`.",
                                "type": "integer",
                                "format": "int64"
                              }
                            }
                          },
                          "tolerations": {
                            "description": "The pod tolerations of the component pod limit where the pod can run.",
                            "type": "array",
                            "items": {
                              "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>.",
                              "type": "object",
                              "properties": {
                                "effect": {
                                  "description": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                                  "type": "string"
                                },
                                "key": {
                                  "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.",
                                  "type": "string"
                                },
                                "tolerationSeconds": {
                                  "description": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.",
                                  "type": "integer",
                                  "format": "int64"
                                },
                                "value": {
                                  "description": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "disableInternalRegistry": {
                        "description": "Disables internal devfile registry.",
                        "type": "boolean"
                      },
                      "externalDevfileRegistries": {
                        "description": "External devfile registries serving sample ready-to-use devfiles.",
                        "type": "array",
                        "items": {
                          "description": "External devfile registries configuration.",
                          "type": "object",
                          "properties": {
                            "url": {
                              "description": "The public URL of the devfile registry that serves sample ready-to-use devfiles.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "imagePuller": {
                    "description": "Kubernetes Image Puller configuration.",
                    "type": "object",
                    "properties": {
                      "enable": {
                        "description": "Install and configure the community supported Kubernetes Image Puller Operator. When you set the value to `true` without providing any specs,\nit creates a default Kubernetes Image Puller object managed by the Operator.\nWhen you set the value to `false`, the Kubernetes Image Puller object is deleted, and the Operator uninstalled,\nregardless of whether a spec is provided.\nIf you leave the `spec.images` field empty, a set of recommended workspace-related images is automatically detected and\npre-pulled after installation.\nNote that while this Operator and its behavior is community-supported, its payload may be commercially-supported\nfor pulling commercially-supported images.",
                        "type": "boolean"
                      },
                      "spec": {
                        "description": "A Kubernetes Image Puller spec to configure the image puller in the CheCluster.",
                        "type": "object",
                        "properties": {
                          "affinity": {
                            "type": "string"
                          },
                          "cachingCPULimit": {
                            "type": "string"
                          },
                          "cachingCPURequest": {
                            "type": "string"
                          },
                          "cachingIntervalHours": {
                            "type": "string"
                          },
                          "cachingMemoryLimit": {
                            "type": "string"
                          },
                          "cachingMemoryRequest": {
                            "type": "string"
                          },
                          "configMapName": {
                            "type": "string"
                          },
                          "daemonsetName": {
                            "type": "string"
                          },
                          "deploymentName": {
                            "type": "string"
                          },
                          "imagePullSecrets": {
                            "type": "string"
                          },
                          "imagePullerImage": {
                            "type": "string"
                          },
                          "images": {
                            "type": "string"
                          },
                          "nodeSelector": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "metrics": {
                    "description": "Che server metrics configuration.",
                    "type": "object",
                    "properties": {
                      "enable": {
                        "description": "Enables `metrics` for the Che server endpoint.",
                        "type": "boolean"
                      }
                    }
                  },
                  "pluginRegistry": {
                    "description": "Configuration settings related to the plug-in registry used by the Che installation.",
                    "type": "object",
                    "properties": {
                      "deployment": {
                        "description": "Deployment override options.",
                        "type": "object",
                        "properties": {
                          "containers": {
                            "description": "List of containers belonging to the pod.",
                            "type": "array",
                            "items": {
                              "description": "Container custom settings.",
                              "type": "object",
                              "properties": {
                                "env": {
                                  "description": "List of environment variables to set in the container.",
                                  "type": "array",
                                  "items": {
                                    "description": "EnvVar represents an environment variable present in a Container.",
                                    "type": "object",
                                    "required": [
                                      "name"
                                    ],
                                    "properties": {
                                      "name": {
                                        "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                                        "type": "string"
                                      },
                                      "valueFrom": {
                                        "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                                        "type": "object",
                                        "properties": {
                                          "configMapKeyRef": {
                                            "description": "Selects a key of a ConfigMap.",
                                            "type": "object",
                                            "required": [
                                              "key"
                                            ],
                                            "properties": {
                                              "key": {
                                                "description": "The key to select.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string"
                                              },
                                              "optional": {
                                                "description": "Specify whether the ConfigMap or its key must be defined",
                                                "type": "boolean"
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          },
                                          "fieldRef": {
                                            "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                            "type": "object",
                                            "required": [
                                              "fieldPath"
                                            ],
                                            "properties": {
                                              "apiVersion": {
                                                "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                "type": "string"
                                              },
                                              "fieldPath": {
                                                "description": "Path of the field to select in the specified API version.",
                                                "type": "string"
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          },
                                          "resourceFieldRef": {
                                            "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                            "type": "object",
                                            "required": [
                                              "resource"
                                            ],
                                            "properties": {
                                              "containerName": {
                                                "description": "Container name: required for volumes, optional for env vars",
                                                "type": "string"
                                              },
                                              "divisor": {
                                                "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                "x-kubernetes-int-or-string": true
                                              },
                                              "resource": {
                                                "description": "Required: resource to select",
                                                "type": "string"
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          },
                                          "secretKeyRef": {
                                            "description": "Selects a key of a secret in the pod's namespace",
                                            "type": "object",
                                            "required": [
                                              "key"
                                            ],
                                            "properties": {
                                              "key": {
                                                "description": "The key of the secret to select from.  Must be a valid secret key.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string"
                                              },
                                              "optional": {
                                                "description": "Specify whether the Secret or its key must be defined",
                                                "type": "boolean"
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "image": {
                                  "description": "Container image. Omit it or leave it empty to use the default container image provided by the Operator.",
                                  "type": "string"
                                },
                                "imagePullPolicy": {
                                  "description": "Image pull policy. Default value is `Always` for `nightly`, `next` or `latest` images, and `IfNotPresent` in other cases.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent",
                                    "Never"
                                  ]
                                },
                                "name": {
                                  "description": "Container name.",
                                  "type": "string"
                                },
                                "resources": {
                                  "description": "Compute resources required by this container.",
                                  "type": "object",
                                  "properties": {
                                    "limits": {
                                      "description": "Describes the maximum amount of compute resources allowed.",
                                      "type": "object",
                                      "properties": {
                                        "cpu": {
                                          "description": "CPU, in cores. (500m = .5 cores)\nIf the value is not specified, then the default value is set depending on the component.\nIf value is `0`, then no value is set for the component.",
                                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                          "x-kubernetes-int-or-string": true
                                        },
                                        "memory": {
                                          "description": "Memory, in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024)\nIf the value is not specified, then the default value is set depending on the component.\nIf value is `0`, then no value is set for the component.",
                                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                          "x-kubernetes-int-or-string": true
                                        }
                                      }
                                    },
                                    "request": {
                                      "description": "Describes the minimum amount of compute resources required.",
                                      "type": "object",
                                      "properties": {
                                        "cpu": {
                                          "description": "CPU, in cores. (500m = .5 cores)\nIf the value is not specified, then the default value is set depending on the component.\nIf value is `0`, then no value is set for the component.",
                                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                          "x-kubernetes-int-or-string": true
                                        },
                                        "memory": {
                                          "description": "Memory, in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024)\nIf the value is not specified, then the default value is set depending on the component.\nIf value is `0`, then no value is set for the component.",
                                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                          "x-kubernetes-int-or-string": true
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "nodeSelector": {
                            "description": "The node selector limits the nodes that can run the pod.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "securityContext": {
                            "description": "Security options the pod should run with.",
                            "type": "object",
                            "properties": {
                              "fsGroup": {
                                "description": "A special supplemental group that applies to all containers in a pod. The default value is `1724`.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "runAsUser": {
                                "description": "The UID to run the entrypoint of the container process. The default value is `1724`.",
                                "type": "integer",
                                "format": "int64"
                              }
                            }
                          },
                          "tolerations": {
                            "description": "The pod tolerations of the component pod limit where the pod can run.",
                            "type": "array",
                            "items": {
                              "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>.",
                              "type": "object",
                              "properties": {
                                "effect": {
                                  "description": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                                  "type": "string"
                                },
                                "key": {
                                  "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.",
                                  "type": "string"
                                },
                                "tolerationSeconds": {
                                  "description": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.",
                                  "type": "integer",
                                  "format": "int64"
                                },
                                "value": {
                                  "description": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "disableInternalRegistry": {
                        "description": "Disables internal plug-in registry.",
                        "type": "boolean"
                      },
                      "externalPluginRegistries": {
                        "description": "External plugin registries.",
                        "type": "array",
                        "items": {
                          "description": "External plug-in registries configuration.",
                          "type": "object",
                          "properties": {
                            "url": {
                              "description": "Public URL of the plug-in registry.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "openVSXURL": {
                        "description": "Open VSX registry URL. If omitted an embedded instance will be used.",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "containerRegistry": {
                "description": "Configuration of an alternative registry that stores Che images.",
                "type": "object",
                "properties": {
                  "hostname": {
                    "description": "An optional hostname or URL of an alternative container registry to pull images from.\nThis value overrides the container registry hostname defined in all the default container images involved in a Che deployment.\nThis is particularly useful for installing Che in a restricted environment.",
                    "type": "string"
                  },
                  "organization": {
                    "description": "An optional repository name of an alternative registry to pull images from.\nThis value overrides the container registry organization defined in all the default container images involved in a Che deployment.\nThis is particularly useful for installing Eclipse Che in a restricted environment.",
                    "type": "string"
                  }
                }
              },
              "devEnvironments": {
                "description": "Development environment default configuration options.",
                "type": "object",
                "properties": {
                  "allowedSources": {
                    "description": "AllowedSources defines the allowed sources on which workspaces can be started.",
                    "type": "object",
                    "properties": {
                      "urls": {
                        "description": "The list of approved URLs for starting Cloud Development Environments (CDEs). CDEs can only be\ninitiated from these URLs. Wildcards `*` are supported in URLs, allowing flexible matching for\nspecific URL patterns. For instance, `https://example.com/*` would allow CDEs to be initiated\nfrom any path within 'example.com'.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "containerBuildConfiguration": {
                    "description": "Container build configuration.",
                    "type": "object",
                    "required": [
                      "openShiftSecurityContextConstraint"
                    ],
                    "properties": {
                      "openShiftSecurityContextConstraint": {
                        "description": "OpenShift security context constraint to build containers.",
                        "type": "string"
                      }
                    }
                  },
                  "defaultComponents": {
                    "description": "Default components applied to DevWorkspaces.\nThese default components are meant to be used when a Devfile, that does not contain any components.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "attributes": {
                          "description": "Map of implementation-dependant free-form YAML attributes.",
                          "x-kubernetes-preserve-unknown-fields": true
                        },
                        "componentType": {
                          "description": "Type of component",
                          "type": "string",
                          "enum": [
                            "Container",
                            "Kubernetes",
                            "Openshift",
                            "Volume",
                            "Image",
                            "Plugin",
                            "Custom"
                          ]
                        },
                        "container": {
                          "description": "Allows adding and configuring devworkspace-related containers",
                          "type": "object",
                          "required": [
                            "image"
                          ],
                          "properties": {
                            "annotation": {
                              "description": "Annotations that should be added to specific resources for this container",
                              "type": "object",
                              "properties": {
                                "deployment": {
                                  "description": "Annotations to be added to deployment",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "service": {
                                  "description": "Annotations to be added to service",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "args": {
                              "description": "The arguments to supply to the command running the dockerimage component. The arguments are supplied either to the default command provided in the image or to the overridden command.\n\nDefaults to an empty array, meaning use whatever is defined in the image.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "command": {
                              "description": "The command to run in the dockerimage component instead of the default one provided in the image.\n\nDefaults to an empty array, meaning use whatever is defined in the image.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "cpuLimit": {
                              "type": "string"
                            },
                            "cpuRequest": {
                              "type": "string"
                            },
                            "dedicatedPod": {
                              "description": "Specify if a container should run in its own separated pod,\ninstead of running as part of the main development environment pod.\n\nDefault value is `false`",
                              "type": "boolean"
                            },
                            "endpoints": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "name",
                                  "targetPort"
                                ],
                                "properties": {
                                  "annotation": {
                                    "description": "Annotations to be added to Kubernetes Ingress or Openshift Route",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "attributes": {
                                    "description": "Map of implementation-dependant string-based free-form attributes.\n\nExamples of Che-specific attributes:\n\n- cookiesAuthEnabled: \"true\" / \"false\",\n\n- type: \"terminal\" / \"ide\" / \"ide-dev\",",
                                    "x-kubernetes-preserve-unknown-fields": true
                                  },
                                  "exposure": {
                                    "description": "Describes how the endpoint should be exposed on the network.\n\n- `public` means that the endpoint will be exposed on the public network, typically through\na K8S ingress or an OpenShift route.\n\n- `internal` means that the endpoint will be exposed internally outside of the main devworkspace POD,\ntypically by K8S services, to be consumed by other elements running\non the same cloud internal network.\n\n- `none` means that the endpoint will not be exposed and will only be accessible\ninside the main devworkspace POD, on a local address.\n\nDefault value is `public`",
                                    "type": "string",
                                    "enum": [
                                      "public",
                                      "internal",
                                      "none"
                                    ]
                                  },
                                  "name": {
                                    "type": "string",
                                    "maxLength": 63,
                                    "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                                  },
                                  "path": {
                                    "description": "Path of the endpoint URL",
                                    "type": "string"
                                  },
                                  "protocol": {
                                    "description": "Describes the application and transport protocols of the traffic that will go through this endpoint.\n\n- `http`: Endpoint will have `http` traffic, typically on a TCP connection.\nIt will be automaticaly promoted to `https` when the `secure` field is set to `true`.\n\n- `https`: Endpoint will have `https` traffic, typically on a TCP connection.\n\n- `ws`: Endpoint will have `ws` traffic, typically on a TCP connection.\nIt will be automaticaly promoted to `wss` when the `secure` field is set to `true`.\n\n- `wss`: Endpoint will have `wss` traffic, typically on a TCP connection.\n\n- `tcp`: Endpoint will have traffic on a TCP connection, without specifying an application protocol.\n\n- `udp`: Endpoint will have traffic on an UDP connection, without specifying an application protocol.\n\nDefault value is `http`",
                                    "type": "string",
                                    "enum": [
                                      "http",
                                      "https",
                                      "ws",
                                      "wss",
                                      "tcp",
                                      "udp"
                                    ]
                                  },
                                  "secure": {
                                    "description": "Describes whether the endpoint should be secured and protected by some\nauthentication process. This requires a protocol of `https` or `wss`.",
                                    "type": "boolean"
                                  },
                                  "targetPort": {
                                    "description": "Port number to be used within the container component. The same port cannot\nbe used by two different container components.",
                                    "type": "integer"
                                  }
                                }
                              }
                            },
                            "env": {
                              "description": "Environment variables used in this container.\n\nThe following variables are reserved and cannot be overridden via env:\n\n - `$PROJECTS_ROOT`\n\n - `$PROJECT_SOURCE`",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "image": {
                              "type": "string"
                            },
                            "memoryLimit": {
                              "type": "string"
                            },
                            "memoryRequest": {
                              "type": "string"
                            },
                            "mountSources": {
                              "description": "Toggles whether or not the project source code should\nbe mounted in the component.\n\nDefaults to true for all component types except plugins and components that set `dedicatedPod` to true.",
                              "type": "boolean"
                            },
                            "sourceMapping": {
                              "description": "Optional specification of the path in the container where\nproject sources should be transferred/mounted when `mountSources` is `true`.\nWhen omitted, the default value of /projects is used.",
                              "type": "string"
                            },
                            "volumeMounts": {
                              "description": "List of volumes mounts that should be mounted is this container.",
                              "type": "array",
                              "items": {
                                "description": "Volume that should be mounted to a component container",
                                "type": "object",
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "The volume mount name is the name of an existing `Volume` component.\nIf several containers mount the same volume name\nthen they will reuse the same volume and will be able to access to the same files.",
                                    "type": "string",
                                    "maxLength": 63,
                                    "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                                  },
                                  "path": {
                                    "description": "The path in the component container where the volume should be mounted.\nIf not path is mentioned, default path is the is `/<name>`.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "custom": {
                          "description": "Custom component whose logic is implementation-dependant\nand should be provided by the user\npossibly through some dedicated controller",
                          "type": "object",
                          "required": [
                            "componentClass",
                            "embeddedResource"
                          ],
                          "properties": {
                            "componentClass": {
                              "description": "Class of component that the associated implementation controller\nshould use to process this command with the appropriate logic",
                              "type": "string"
                            },
                            "embeddedResource": {
                              "description": "Additional free-form configuration for this custom component\nthat the implementation controller will know how to use",
                              "x-kubernetes-embedded-resource": true,
                              "x-kubernetes-preserve-unknown-fields": true
                            }
                          }
                        },
                        "image": {
                          "description": "Allows specifying the definition of an image for outer loop builds",
                          "type": "object",
                          "required": [
                            "imageName"
                          ],
                          "properties": {
                            "autoBuild": {
                              "description": "Defines if the image should be built during startup.\n\nDefault value is `false`",
                              "type": "boolean"
                            },
                            "dockerfile": {
                              "description": "Allows specifying dockerfile type build",
                              "type": "object",
                              "properties": {
                                "args": {
                                  "description": "The arguments to supply to the dockerfile build.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "buildContext": {
                                  "description": "Path of source directory to establish build context. Defaults to ${PROJECT_SOURCE} in the container",
                                  "type": "string"
                                },
                                "devfileRegistry": {
                                  "description": "Dockerfile's Devfile Registry source",
                                  "type": "object",
                                  "required": [
                                    "id"
                                  ],
                                  "properties": {
                                    "id": {
                                      "description": "Id in a devfile registry that contains a Dockerfile. The src in the OCI registry\nrequired for the Dockerfile build will be downloaded for building the image.",
                                      "type": "string"
                                    },
                                    "registryUrl": {
                                      "description": "Devfile Registry URL to pull the Dockerfile from when using the Devfile Registry as Dockerfile src.\nTo ensure the Dockerfile gets resolved consistently in different environments,\nit is recommended to always specify the `devfileRegistryUrl` when `Id` is used.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "git": {
                                  "description": "Dockerfile's Git source",
                                  "type": "object",
                                  "required": [
                                    "remotes"
                                  ],
                                  "properties": {
                                    "checkoutFrom": {
                                      "description": "Defines from what the project should be checked out. Required if there are more than one remote configured",
                                      "type": "object",
                                      "properties": {
                                        "remote": {
                                          "description": "The remote name should be used as init. Required if there are more than one remote configured",
                                          "type": "string"
                                        },
                                        "revision": {
                                          "description": "The revision to checkout from. Should be branch name, tag or commit id.\nDefault branch is used if missing or specified revision is not found.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "fileLocation": {
                                      "description": "Location of the Dockerfile in the Git repository when using git as Dockerfile src.\nDefaults to Dockerfile.",
                                      "type": "string"
                                    },
                                    "remotes": {
                                      "description": "The remotes map which should be initialized in the git project.\nProjects must have at least one remote configured while StarterProjects & Image Component's Git source can only have at most one remote configured.",
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "rootRequired": {
                                  "description": "Specify if a privileged builder pod is required.\n\nDefault value is `false`",
                                  "type": "boolean"
                                },
                                "srcType": {
                                  "description": "Type of Dockerfile src",
                                  "type": "string",
                                  "enum": [
                                    "Uri",
                                    "DevfileRegistry",
                                    "Git"
                                  ]
                                },
                                "uri": {
                                  "description": "URI Reference of a Dockerfile.\nIt can be a full URL or a relative URI from the current devfile as the base URI.",
                                  "type": "string"
                                }
                              }
                            },
                            "imageName": {
                              "description": "Name of the image for the resulting outerloop build",
                              "type": "string"
                            },
                            "imageType": {
                              "description": "Type of image",
                              "type": "string",
                              "enum": [
                                "Dockerfile"
                              ]
                            }
                          }
                        },
                        "kubernetes": {
                          "description": "Allows importing into the devworkspace the Kubernetes resources\ndefined in a given manifest. For example this allows reusing the Kubernetes\ndefinitions used to deploy some runtime components in production.",
                          "type": "object",
                          "properties": {
                            "deployByDefault": {
                              "description": "Defines if the component should be deployed during startup.\n\nDefault value is `false`",
                              "type": "boolean"
                            },
                            "endpoints": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "name",
                                  "targetPort"
                                ],
                                "properties": {
                                  "annotation": {
                                    "description": "Annotations to be added to Kubernetes Ingress or Openshift Route",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "attributes": {
                                    "description": "Map of implementation-dependant string-based free-form attributes.\n\nExamples of Che-specific attributes:\n\n- cookiesAuthEnabled: \"true\" / \"false\",\n\n- type: \"terminal\" / \"ide\" / \"ide-dev\",",
                                    "x-kubernetes-preserve-unknown-fields": true
                                  },
                                  "exposure": {
                                    "description": "Describes how the endpoint should be exposed on the network.\n\n- `public` means that the endpoint will be exposed on the public network, typically through\na K8S ingress or an OpenShift route.\n\n- `internal` means that the endpoint will be exposed internally outside of the main devworkspace POD,\ntypically by K8S services, to be consumed by other elements running\non the same cloud internal network.\n\n- `none` means that the endpoint will not be exposed and will only be accessible\ninside the main devworkspace POD, on a local address.\n\nDefault value is `public`",
                                    "type": "string",
                                    "enum": [
                                      "public",
                                      "internal",
                                      "none"
                                    ]
                                  },
                                  "name": {
                                    "type": "string",
                                    "maxLength": 63,
                                    "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                                  },
                                  "path": {
                                    "description": "Path of the endpoint URL",
                                    "type": "string"
                                  },
                                  "protocol": {
                                    "description": "Describes the application and transport protocols of the traffic that will go through this endpoint.\n\n- `http`: Endpoint will have `http` traffic, typically on a TCP connection.\nIt will be automaticaly promoted to `https` when the `secure` field is set to `true`.\n\n- `https`: Endpoint will have `https` traffic, typically on a TCP connection.\n\n- `ws`: Endpoint will have `ws` traffic, typically on a TCP connection.\nIt will be automaticaly promoted to `wss` when the `secure` field is set to `true`.\n\n- `wss`: Endpoint will have `wss` traffic, typically on a TCP connection.\n\n- `tcp`: Endpoint will have traffic on a TCP connection, without specifying an application protocol.\n\n- `udp`: Endpoint will have traffic on an UDP connection, without specifying an application protocol.\n\nDefault value is `http`",
                                    "type": "string",
                                    "enum": [
                                      "http",
                                      "https",
                                      "ws",
                                      "wss",
                                      "tcp",
                                      "udp"
                                    ]
                                  },
                                  "secure": {
                                    "description": "Describes whether the endpoint should be secured and protected by some\nauthentication process. This requires a protocol of `https` or `wss`.",
                                    "type": "boolean"
                                  },
                                  "targetPort": {
                                    "description": "Port number to be used within the container component. The same port cannot\nbe used by two different container components.",
                                    "type": "integer"
                                  }
                                }
                              }
                            },
                            "inlined": {
                              "description": "Inlined manifest",
                              "type": "string"
                            },
                            "locationType": {
                              "description": "Type of Kubernetes-like location",
                              "type": "string",
                              "enum": [
                                "Uri",
                                "Inlined"
                              ]
                            },
                            "uri": {
                              "description": "Location in a file fetched from a uri.",
                              "type": "string"
                            }
                          }
                        },
                        "name": {
                          "description": "Mandatory name that allows referencing the component\nfrom other elements (such as commands) or from an external\ndevfile that may reference this component through a parent or a plugin.",
                          "type": "string",
                          "maxLength": 63,
                          "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                        },
                        "openshift": {
                          "description": "Allows importing into the devworkspace the OpenShift resources\ndefined in a given manifest. For example this allows reusing the OpenShift\ndefinitions used to deploy some runtime components in production.",
                          "type": "object",
                          "properties": {
                            "deployByDefault": {
                              "description": "Defines if the component should be deployed during startup.\n\nDefault value is `false`",
                              "type": "boolean"
                            },
                            "endpoints": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "name",
                                  "targetPort"
                                ],
                                "properties": {
                                  "annotation": {
                                    "description": "Annotations to be added to Kubernetes Ingress or Openshift Route",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "attributes": {
                                    "description": "Map of implementation-dependant string-based free-form attributes.\n\nExamples of Che-specific attributes:\n\n- cookiesAuthEnabled: \"true\" / \"false\",\n\n- type: \"terminal\" / \"ide\" / \"ide-dev\",",
                                    "x-kubernetes-preserve-unknown-fields": true
                                  },
                                  "exposure": {
                                    "description": "Describes how the endpoint should be exposed on the network.\n\n- `public` means that the endpoint will be exposed on the public network, typically through\na K8S ingress or an OpenShift route.\n\n- `internal` means that the endpoint will be exposed internally outside of the main devworkspace POD,\ntypically by K8S services, to be consumed by other elements running\non the same cloud internal network.\n\n- `none` means that the endpoint will not be exposed and will only be accessible\ninside the main devworkspace POD, on a local address.\n\nDefault value is `public`",
                                    "type": "string",
                                    "enum": [
                                      "public",
                                      "internal",
                                      "none"
                                    ]
                                  },
                                  "name": {
                                    "type": "string",
                                    "maxLength": 63,
                                    "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                                  },
                                  "path": {
                                    "description": "Path of the endpoint URL",
                                    "type": "string"
                                  },
                                  "protocol": {
                                    "description": "Describes the application and transport protocols of the traffic that will go through this endpoint.\n\n- `http`: Endpoint will have `http` traffic, typically on a TCP connection.\nIt will be automaticaly promoted to `https` when the `secure` field is set to `true`.\n\n- `https`: Endpoint will have `https` traffic, typically on a TCP connection.\n\n- `ws`: Endpoint will have `ws` traffic, typically on a TCP connection.\nIt will be automaticaly promoted to `wss` when the `secure` field is set to `true`.\n\n- `wss`: Endpoint will have `wss` traffic, typically on a TCP connection.\n\n- `tcp`: Endpoint will have traffic on a TCP connection, without specifying an application protocol.\n\n- `udp`: Endpoint will have traffic on an UDP connection, without specifying an application protocol.\n\nDefault value is `http`",
                                    "type": "string",
                                    "enum": [
                                      "http",
                                      "https",
                                      "ws",
                                      "wss",
                                      "tcp",
                                      "udp"
                                    ]
                                  },
                                  "secure": {
                                    "description": "Describes whether the endpoint should be secured and protected by some\nauthentication process. This requires a protocol of `https` or `wss`.",
                                    "type": "boolean"
                                  },
                                  "targetPort": {
                                    "description": "Port number to be used within the container component. The same port cannot\nbe used by two different container components.",
                                    "type": "integer"
                                  }
                                }
                              }
                            },
                            "inlined": {
                              "description": "Inlined manifest",
                              "type": "string"
                            },
                            "locationType": {
                              "description": "Type of Kubernetes-like location",
                              "type": "string",
                              "enum": [
                                "Uri",
                                "Inlined"
                              ]
                            },
                            "uri": {
                              "description": "Location in a file fetched from a uri.",
                              "type": "string"
                            }
                          }
                        },
                        "plugin": {
                          "description": "Allows importing a plugin.\n\nPlugins are mainly imported devfiles that contribute components, commands\nand events as a consistent single unit. They are defined in either YAML files\nfollowing the devfile syntax,\nor as `DevWorkspaceTemplate` Kubernetes Custom Resources",
                          "type": "object",
                          "properties": {
                            "commands": {
                              "description": "Overrides of commands encapsulated in a parent devfile or a plugin.\nOverriding is done according to K8S strategic merge patch standard rules.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "id"
                                ],
                                "properties": {
                                  "apply": {
                                    "description": "Command that consists in applying a given component definition,\ntypically bound to a devworkspace event.\n\nFor example, when an `apply` command is bound to a `preStart` event,\nand references a `container` component, it will start the container as a\nK8S initContainer in the devworkspace POD, unless the component has its\n`dedicatedPod` field set to `true`.\n\nWhen no `apply` command exist for a given component,\nit is assumed the component will be applied at devworkspace start\nby default, unless `deployByDefault` for that component is set to false.",
                                    "type": "object",
                                    "properties": {
                                      "component": {
                                        "description": "Describes component that will be applied",
                                        "type": "string"
                                      },
                                      "group": {
                                        "description": "Defines the group this command is part of",
                                        "type": "object",
                                        "properties": {
                                          "isDefault": {
                                            "description": "Identifies the default command for a given group kind",
                                            "type": "boolean"
                                          },
                                          "kind": {
                                            "description": "Kind of group the command is part of",
                                            "type": "string",
                                            "enum": [
                                              "build",
                                              "run",
                                              "test",
                                              "debug",
                                              "deploy"
                                            ]
                                          }
                                        }
                                      },
                                      "label": {
                                        "description": "Optional label that provides a label for this command\nto be used in Editor UI menus for example",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "attributes": {
                                    "description": "Map of implementation-dependant free-form YAML attributes.",
                                    "x-kubernetes-preserve-unknown-fields": true
                                  },
                                  "commandType": {
                                    "description": "Type of devworkspace command",
                                    "type": "string",
                                    "enum": [
                                      "Exec",
                                      "Apply",
                                      "Composite"
                                    ]
                                  },
                                  "composite": {
                                    "description": "Composite command that allows executing several sub-commands\neither sequentially or concurrently",
                                    "type": "object",
                                    "properties": {
                                      "commands": {
                                        "description": "The commands that comprise this composite command",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "group": {
                                        "description": "Defines the group this command is part of",
                                        "type": "object",
                                        "properties": {
                                          "isDefault": {
                                            "description": "Identifies the default command for a given group kind",
                                            "type": "boolean"
                                          },
                                          "kind": {
                                            "description": "Kind of group the command is part of",
                                            "type": "string",
                                            "enum": [
                                              "build",
                                              "run",
                                              "test",
                                              "debug",
                                              "deploy"
                                            ]
                                          }
                                        }
                                      },
                                      "label": {
                                        "description": "Optional label that provides a label for this command\nto be used in Editor UI menus for example",
                                        "type": "string"
                                      },
                                      "parallel": {
                                        "description": "Indicates if the sub-commands should be executed concurrently",
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "exec": {
                                    "description": "CLI Command executed in an existing component container",
                                    "type": "object",
                                    "properties": {
                                      "commandLine": {
                                        "description": "The actual command-line string\n\nSpecial variables that can be used:\n\n - `$PROJECTS_ROOT`: A path where projects sources are mounted as defined by container component's sourceMapping.\n\n - `$PROJECT_SOURCE`: A path to a project source ($PROJECTS_ROOT/<project-name>). If there are multiple projects, this will point to the directory of the first one.",
                                        "type": "string"
                                      },
                                      "component": {
                                        "description": "Describes component to which given action relates",
                                        "type": "string"
                                      },
                                      "env": {
                                        "description": "Optional list of environment variables that have to be set\nbefore running the command",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "name"
                                          ],
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "group": {
                                        "description": "Defines the group this command is part of",
                                        "type": "object",
                                        "properties": {
                                          "isDefault": {
                                            "description": "Identifies the default command for a given group kind",
                                            "type": "boolean"
                                          },
                                          "kind": {
                                            "description": "Kind of group the command is part of",
                                            "type": "string",
                                            "enum": [
                                              "build",
                                              "run",
                                              "test",
                                              "debug",
                                              "deploy"
                                            ]
                                          }
                                        }
                                      },
                                      "hotReloadCapable": {
                                        "description": "Specify whether the command is restarted or not when the source code changes.\nIf set to `true` the command won't be restarted.\nA *hotReloadCapable* `run` or `debug` command is expected to handle file changes on its own and won't be restarted.\nA *hotReloadCapable* `build` command is expected to be executed only once and won't be executed again.\nThis field is taken into account only for commands `build`, `run` and `debug` with `isDefault` set to `true`.\n\nDefault value is `false`",
                                        "type": "boolean"
                                      },
                                      "label": {
                                        "description": "Optional label that provides a label for this command\nto be used in Editor UI menus for example",
                                        "type": "string"
                                      },
                                      "workingDir": {
                                        "description": "Working directory where the command should be executed\n\nSpecial variables that can be used:\n\n - `$PROJECTS_ROOT`: A path where projects sources are mounted as defined by container component's sourceMapping.\n\n - `$PROJECT_SOURCE`: A path to a project source ($PROJECTS_ROOT/<project-name>). If there are multiple projects, this will point to the directory of the first one.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "id": {
                                    "description": "Mandatory identifier that allows referencing\nthis command in composite commands, from\na parent, or in events.",
                                    "type": "string",
                                    "maxLength": 63,
                                    "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                                  }
                                }
                              }
                            },
                            "components": {
                              "description": "Overrides of components encapsulated in a parent devfile or a plugin.\nOverriding is done according to K8S strategic merge patch standard rules.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "attributes": {
                                    "description": "Map of implementation-dependant free-form YAML attributes.",
                                    "x-kubernetes-preserve-unknown-fields": true
                                  },
                                  "componentType": {
                                    "description": "Type of component",
                                    "type": "string",
                                    "enum": [
                                      "Container",
                                      "Kubernetes",
                                      "Openshift",
                                      "Volume",
                                      "Image"
                                    ]
                                  },
                                  "container": {
                                    "description": "Allows adding and configuring devworkspace-related containers",
                                    "type": "object",
                                    "properties": {
                                      "annotation": {
                                        "description": "Annotations that should be added to specific resources for this container",
                                        "type": "object",
                                        "properties": {
                                          "deployment": {
                                            "description": "Annotations to be added to deployment",
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "service": {
                                            "description": "Annotations to be added to service",
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "args": {
                                        "description": "The arguments to supply to the command running the dockerimage component. The arguments are supplied either to the default command provided in the image or to the overridden command.\n\nDefaults to an empty array, meaning use whatever is defined in the image.",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "command": {
                                        "description": "The command to run in the dockerimage component instead of the default one provided in the image.\n\nDefaults to an empty array, meaning use whatever is defined in the image.",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "cpuLimit": {
                                        "type": "string"
                                      },
                                      "cpuRequest": {
                                        "type": "string"
                                      },
                                      "dedicatedPod": {
                                        "description": "Specify if a container should run in its own separated pod,\ninstead of running as part of the main development environment pod.\n\nDefault value is `false`",
                                        "type": "boolean"
                                      },
                                      "endpoints": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "name"
                                          ],
                                          "properties": {
                                            "annotation": {
                                              "description": "Annotations to be added to Kubernetes Ingress or Openshift Route",
                                              "type": "object",
                                              "additionalProperties": {
                                                "type": "string"
                                              }
                                            },
                                            "attributes": {
                                              "description": "Map of implementation-dependant string-based free-form attributes.\n\nExamples of Che-specific attributes:\n\n- cookiesAuthEnabled: \"true\" / \"false\",\n\n- type: \"terminal\" / \"ide\" / \"ide-dev\",",
                                              "x-kubernetes-preserve-unknown-fields": true
                                            },
                                            "exposure": {
                                              "description": "Describes how the endpoint should be exposed on the network.\n\n- `public` means that the endpoint will be exposed on the public network, typically through\na K8S ingress or an OpenShift route.\n\n- `internal` means that the endpoint will be exposed internally outside of the main devworkspace POD,\ntypically by K8S services, to be consumed by other elements running\non the same cloud internal network.\n\n- `none` means that the endpoint will not be exposed and will only be accessible\ninside the main devworkspace POD, on a local address.\n\nDefault value is `public`",
                                              "type": "string",
                                              "enum": [
                                                "public",
                                                "internal",
                                                "none"
                                              ]
                                            },
                                            "name": {
                                              "type": "string",
                                              "maxLength": 63,
                                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                                            },
                                            "path": {
                                              "description": "Path of the endpoint URL",
                                              "type": "string"
                                            },
                                            "protocol": {
                                              "description": "Describes the application and transport protocols of the traffic that will go through this endpoint.\n\n- `http`: Endpoint will have `http` traffic, typically on a TCP connection.\nIt will be automaticaly promoted to `https` when the `secure` field is set to `true`.\n\n- `https`: Endpoint will have `https` traffic, typically on a TCP connection.\n\n- `ws`: Endpoint will have `ws` traffic, typically on a TCP connection.\nIt will be automaticaly promoted to `wss` when the `secure` field is set to `true`.\n\n- `wss`: Endpoint will have `wss` traffic, typically on a TCP connection.\n\n- `tcp`: Endpoint will have traffic on a TCP connection, without specifying an application protocol.\n\n- `udp`: Endpoint will have traffic on an UDP connection, without specifying an application protocol.\n\nDefault value is `http`",
                                              "type": "string",
                                              "enum": [
                                                "http",
                                                "https",
                                                "ws",
                                                "wss",
                                                "tcp",
                                                "udp"
                                              ]
                                            },
                                            "secure": {
                                              "description": "Describes whether the endpoint should be secured and protected by some\nauthentication process. This requires a protocol of `https` or `wss`.",
                                              "type": "boolean"
                                            },
                                            "targetPort": {
                                              "description": "Port number to be used within the container component. The same port cannot\nbe used by two different container components.",
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      "env": {
                                        "description": "Environment variables used in this container.\n\nThe following variables are reserved and cannot be overridden via env:\n\n - `$PROJECTS_ROOT`\n\n - `$PROJECT_SOURCE`",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "name"
                                          ],
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "image": {
                                        "type": "string"
                                      },
                                      "memoryLimit": {
                                        "type": "string"
                                      },
                                      "memoryRequest": {
                                        "type": "string"
                                      },
                                      "mountSources": {
                                        "description": "Toggles whether or not the project source code should\nbe mounted in the component.\n\nDefaults to true for all component types except plugins and components that set `dedicatedPod` to true.",
                                        "type": "boolean"
                                      },
                                      "sourceMapping": {
                                        "description": "Optional specification of the path in the container where\nproject sources should be transferred/mounted when `mountSources` is `true`.\nWhen omitted, the default value of /projects is used.",
                                        "type": "string"
                                      },
                                      "volumeMounts": {
                                        "description": "List of volumes mounts that should be mounted is this container.",
                                        "type": "array",
                                        "items": {
                                          "description": "Volume that should be mounted to a component container",
                                          "type": "object",
                                          "required": [
                                            "name"
                                          ],
                                          "properties": {
                                            "name": {
                                              "description": "The volume mount name is the name of an existing `Volume` component.\nIf several containers mount the same volume name\nthen they will reuse the same volume and will be able to access to the same files.",
                                              "type": "string",
                                              "maxLength": 63,
                                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                                            },
                                            "path": {
                                              "description": "The path in the component container where the volume should be mounted.\nIf not path is mentioned, default path is the is `/<name>`.",
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "image": {
                                    "description": "Allows specifying the definition of an image for outer loop builds",
                                    "type": "object",
                                    "properties": {
                                      "autoBuild": {
                                        "description": "Defines if the image should be built during startup.\n\nDefault value is `false`",
                                        "type": "boolean"
                                      },
                                      "dockerfile": {
                                        "description": "Allows specifying dockerfile type build",
                                        "type": "object",
                                        "properties": {
                                          "args": {
                                            "description": "The arguments to supply to the dockerfile build.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "buildContext": {
                                            "description": "Path of source directory to establish build context. Defaults to ${PROJECT_SOURCE} in the container",
                                            "type": "string"
                                          },
                                          "devfileRegistry": {
                                            "description": "Dockerfile's Devfile Registry source",
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "description": "Id in a devfile registry that contains a Dockerfile. The src in the OCI registry\nrequired for the Dockerfile build will be downloaded for building the image.",
                                                "type": "string"
                                              },
                                              "registryUrl": {
                                                "description": "Devfile Registry URL to pull the Dockerfile from when using the Devfile Registry as Dockerfile src.\nTo ensure the Dockerfile gets resolved consistently in different environments,\nit is recommended to always specify the `devfileRegistryUrl` when `Id` is used.",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "git": {
                                            "description": "Dockerfile's Git source",
                                            "type": "object",
                                            "properties": {
                                              "checkoutFrom": {
                                                "description": "Defines from what the project should be checked out. Required if there are more than one remote configured",
                                                "type": "object",
                                                "properties": {
                                                  "remote": {
                                                    "description": "The remote name should be used as init. Required if there are more than one remote configured",
                                                    "type": "string"
                                                  },
                                                  "revision": {
                                                    "description": "The revision to checkout from. Should be branch name, tag or commit id.\nDefault branch is used if missing or specified revision is not found.",
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "fileLocation": {
                                                "description": "Location of the Dockerfile in the Git repository when using git as Dockerfile src.\nDefaults to Dockerfile.",
                                                "type": "string"
                                              },
                                              "remotes": {
                                                "description": "The remotes map which should be initialized in the git project.\nProjects must have at least one remote configured while StarterProjects & Image Component's Git source can only have at most one remote configured.",
                                                "type": "object",
                                                "additionalProperties": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "rootRequired": {
                                            "description": "Specify if a privileged builder pod is required.\n\nDefault value is `false`",
                                            "type": "boolean"
                                          },
                                          "srcType": {
                                            "description": "Type of Dockerfile src",
                                            "type": "string",
                                            "enum": [
                                              "Uri",
                                              "DevfileRegistry",
                                              "Git"
                                            ]
                                          },
                                          "uri": {
                                            "description": "URI Reference of a Dockerfile.\nIt can be a full URL or a relative URI from the current devfile as the base URI.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "imageName": {
                                        "description": "Name of the image for the resulting outerloop build",
                                        "type": "string"
                                      },
                                      "imageType": {
                                        "description": "Type of image",
                                        "type": "string",
                                        "enum": [
                                          "Dockerfile",
                                          "AutoBuild"
                                        ]
                                      }
                                    }
                                  },
                                  "kubernetes": {
                                    "description": "Allows importing into the devworkspace the Kubernetes resources\ndefined in a given manifest. For example this allows reusing the Kubernetes\ndefinitions used to deploy some runtime components in production.",
                                    "type": "object",
                                    "properties": {
                                      "deployByDefault": {
                                        "description": "Defines if the component should be deployed during startup.\n\nDefault value is `false`",
                                        "type": "boolean"
                                      },
                                      "endpoints": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "name"
                                          ],
                                          "properties": {
                                            "annotation": {
                                              "description": "Annotations to be added to Kubernetes Ingress or Openshift Route",
                                              "type": "object",
                                              "additionalProperties": {
                                                "type": "string"
                                              }
                                            },
                                            "attributes": {
                                              "description": "Map of implementation-dependant string-based free-form attributes.\n\nExamples of Che-specific attributes:\n\n- cookiesAuthEnabled: \"true\" / \"false\",\n\n- type: \"terminal\" / \"ide\" / \"ide-dev\",",
                                              "x-kubernetes-preserve-unknown-fields": true
                                            },
                                            "exposure": {
                                              "description": "Describes how the endpoint should be exposed on the network.\n\n- `public` means that the endpoint will be exposed on the public network, typically through\na K8S ingress or an OpenShift route.\n\n- `internal` means that the endpoint will be exposed internally outside of the main devworkspace POD,\ntypically by K8S services, to be consumed by other elements running\non the same cloud internal network.\n\n- `none` means that the endpoint will not be exposed and will only be accessible\ninside the main devworkspace POD, on a local address.\n\nDefault value is `public`",
                                              "type": "string",
                                              "enum": [
                                                "public",
                                                "internal",
                                                "none"
                                              ]
                                            },
                                            "name": {
                                              "type": "string",
                                              "maxLength": 63,
                                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                                            },
                                            "path": {
                                              "description": "Path of the endpoint URL",
                                              "type": "string"
                                            },
                                            "protocol": {
                                              "description": "Describes the application and transport protocols of the traffic that will go through this endpoint.\n\n- `http`: Endpoint will have `http` traffic, typically on a TCP connection.\nIt will be automaticaly promoted to `https` when the `secure` field is set to `true`.\n\n- `https`: Endpoint will have `https` traffic, typically on a TCP connection.\n\n- `ws`: Endpoint will have `ws` traffic, typically on a TCP connection.\nIt will be automaticaly promoted to `wss` when the `secure` field is set to `true`.\n\n- `wss`: Endpoint will have `wss` traffic, typically on a TCP connection.\n\n- `tcp`: Endpoint will have traffic on a TCP connection, without specifying an application protocol.\n\n- `udp`: Endpoint will have traffic on an UDP connection, without specifying an application protocol.\n\nDefault value is `http`",
                                              "type": "string",
                                              "enum": [
                                                "http",
                                                "https",
                                                "ws",
                                                "wss",
                                                "tcp",
                                                "udp"
                                              ]
                                            },
                                            "secure": {
                                              "description": "Describes whether the endpoint should be secured and protected by some\nauthentication process. This requires a protocol of `https` or `wss`.",
                                              "type": "boolean"
                                            },
                                            "targetPort": {
                                              "description": "Port number to be used within the container component. The same port cannot\nbe used by two different container components.",
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      "inlined": {
                                        "description": "Inlined manifest",
                                        "type": "string"
                                      },
                                      "locationType": {
                                        "description": "Type of Kubernetes-like location",
                                        "type": "string",
                                        "enum": [
                                          "Uri",
                                          "Inlined"
                                        ]
                                      },
                                      "uri": {
                                        "description": "Location in a file fetched from a uri.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "name": {
                                    "description": "Mandatory name that allows referencing the component\nfrom other elements (such as commands) or from an external\ndevfile that may reference this component through a parent or a plugin.",
                                    "type": "string",
                                    "maxLength": 63,
                                    "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                                  },
                                  "openshift": {
                                    "description": "Allows importing into the devworkspace the OpenShift resources\ndefined in a given manifest. For example this allows reusing the OpenShift\ndefinitions used to deploy some runtime components in production.",
                                    "type": "object",
                                    "properties": {
                                      "deployByDefault": {
                                        "description": "Defines if the component should be deployed during startup.\n\nDefault value is `false`",
                                        "type": "boolean"
                                      },
                                      "endpoints": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "name"
                                          ],
                                          "properties": {
                                            "annotation": {
                                              "description": "Annotations to be added to Kubernetes Ingress or Openshift Route",
                                              "type": "object",
                                              "additionalProperties": {
                                                "type": "string"
                                              }
                                            },
                                            "attributes": {
                                              "description": "Map of implementation-dependant string-based free-form attributes.\n\nExamples of Che-specific attributes:\n\n- cookiesAuthEnabled: \"true\" / \"false\",\n\n- type: \"terminal\" / \"ide\" / \"ide-dev\",",
                                              "x-kubernetes-preserve-unknown-fields": true
                                            },
                                            "exposure": {
                                              "description": "Describes how the endpoint should be exposed on the network.\n\n- `public` means that the endpoint will be exposed on the public network, typically through\na K8S ingress or an OpenShift route.\n\n- `internal` means that the endpoint will be exposed internally outside of the main devworkspace POD,\ntypically by K8S services, to be consumed by other elements running\non the same cloud internal network.\n\n- `none` means that the endpoint will not be exposed and will only be accessible\ninside the main devworkspace POD, on a local address.\n\nDefault value is `public`",
                                              "type": "string",
                                              "enum": [
                                                "public",
                                                "internal",
                                                "none"
                                              ]
                                            },
                                            "name": {
                                              "type": "string",
                                              "maxLength": 63,
                                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                                            },
                                            "path": {
                                              "description": "Path of the endpoint URL",
                                              "type": "string"
                                            },
                                            "protocol": {
                                              "description": "Describes the application and transport protocols of the traffic that will go through this endpoint.\n\n- `http`: Endpoint will have `http` traffic, typically on a TCP connection.\nIt will be automaticaly promoted to `https` when the `secure` field is set to `true`.\n\n- `https`: Endpoint will have `https` traffic, typically on a TCP connection.\n\n- `ws`: Endpoint will have `ws` traffic, typically on a TCP connection.\nIt will be automaticaly promoted to `wss` when the `secure` field is set to `true`.\n\n- `wss`: Endpoint will have `wss` traffic, typically on a TCP connection.\n\n- `tcp`: Endpoint will have traffic on a TCP connection, without specifying an application protocol.\n\n- `udp`: Endpoint will have traffic on an UDP connection, without specifying an application protocol.\n\nDefault value is `http`",
                                              "type": "string",
                                              "enum": [
                                                "http",
                                                "https",
                                                "ws",
                                                "wss",
                                                "tcp",
                                                "udp"
                                              ]
                                            },
                                            "secure": {
                                              "description": "Describes whether the endpoint should be secured and protected by some\nauthentication process. This requires a protocol of `https` or `wss`.",
                                              "type": "boolean"
                                            },
                                            "targetPort": {
                                              "description": "Port number to be used within the container component. The same port cannot\nbe used by two different container components.",
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      "inlined": {
                                        "description": "Inlined manifest",
                                        "type": "string"
                                      },
                                      "locationType": {
                                        "description": "Type of Kubernetes-like location",
                                        "type": "string",
                                        "enum": [
                                          "Uri",
                                          "Inlined"
                                        ]
                                      },
                                      "uri": {
                                        "description": "Location in a file fetched from a uri.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "volume": {
                                    "description": "Allows specifying the definition of a volume\nshared by several other components",
                                    "type": "object",
                                    "properties": {
                                      "ephemeral": {
                                        "description": "Ephemeral volumes are not stored persistently across restarts. Defaults\nto false",
                                        "type": "boolean"
                                      },
                                      "size": {
                                        "description": "Size of the volume",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "id": {
                              "description": "Id in a registry that contains a Devfile yaml file",
                              "type": "string"
                            },
                            "importReferenceType": {
                              "description": "type of location from where the referenced template structure should be retrieved",
                              "type": "string",
                              "enum": [
                                "Uri",
                                "Id",
                                "Kubernetes"
                              ]
                            },
                            "kubernetes": {
                              "description": "Reference to a Kubernetes CRD of type DevWorkspaceTemplate",
                              "type": "object",
                              "required": [
                                "name"
                              ],
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "namespace": {
                                  "type": "string"
                                }
                              }
                            },
                            "registryUrl": {
                              "description": "Registry URL to pull the parent devfile from when using id in the parent reference.\nTo ensure the parent devfile gets resolved consistently in different environments,\nit is recommended to always specify the `registryUrl` when `id` is used.",
                              "type": "string"
                            },
                            "uri": {
                              "description": "URI Reference of a parent devfile YAML file.\nIt can be a full URL or a relative URI with the current devfile as the base URI.",
                              "type": "string"
                            },
                            "version": {
                              "description": "Specific stack/sample version to pull the parent devfile from, when using id in the parent reference.\nTo specify `version`, `id` must be defined and used as the import reference source.\n`version` can be either a specific stack version, or `latest`.\nIf no `version` specified, default version will be used.",
                              "type": "string",
                              "pattern": "^(latest)|(([1-9])\\.([0-9]+)\\.([0-9]+)(\\-[0-9a-z-]+(\\.[0-9a-z-]+)*)?(\\+[0-9A-Za-z-]+(\\.[0-9A-Za-z-]+)*)?)$"
                            }
                          }
                        },
                        "volume": {
                          "description": "Allows specifying the definition of a volume\nshared by several other components",
                          "type": "object",
                          "properties": {
                            "ephemeral": {
                              "description": "Ephemeral volumes are not stored persistently across restarts. Defaults\nto false",
                              "type": "boolean"
                            },
                            "size": {
                              "description": "Size of the volume",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "defaultEditor": {
                    "description": "The default editor to workspace create with. It could be a plugin ID or a URI.\nThe plugin ID must have `publisher/name/version` format.\nThe URI must start from `http://` or `https://`.",
                    "type": "string"
                  },
                  "defaultNamespace": {
                    "description": "User's default namespace.",
                    "type": "object",
                    "properties": {
                      "autoProvision": {
                        "description": "Indicates if is allowed to automatically create a user namespace.\nIf it set to false, then user namespace must be pre-created by a cluster administrator.",
                        "type": "boolean"
                      },
                      "template": {
                        "description": "If you don't create the user namespaces in advance, this field defines the Kubernetes namespace created when you start your first workspace.\nYou can use `<username>` and `<userid>` placeholders, such as che-workspace-<username>.",
                        "type": "string",
                        "pattern": "<username>|<userid>"
                      }
                    }
                  },
                  "defaultPlugins": {
                    "description": "Default plug-ins applied to DevWorkspaces.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "editor": {
                          "description": "The editor ID to specify default plug-ins for.\nThe plugin ID must have `publisher/name/version` format.",
                          "type": "string"
                        },
                        "plugins": {
                          "description": "Default plug-in URIs for the specified editor.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "deploymentStrategy": {
                    "description": "DeploymentStrategy defines the deployment strategy to use to replace existing workspace pods\nwith new ones. The available deployment stragies are `Recreate` and `RollingUpdate`.\nWith the `Recreate` deployment strategy, the existing workspace pod is killed before the new one is created.\nWith the `RollingUpdate` deployment strategy, a new workspace pod is created and the existing workspace pod is deleted\nonly when the new workspace pod is in a ready state.\nIf not specified, the default `Recreate` deployment strategy is used.",
                    "type": "string",
                    "enum": [
                      "Recreate",
                      "RollingUpdate"
                    ]
                  },
                  "disableContainerBuildCapabilities": {
                    "description": "Disables the container build capabilities.\nWhen set to `false` (the default value), the devEnvironments.security.containerSecurityContext\nfield is ignored, and the following container SecurityContext is applied:\n\n containerSecurityContext:\n   allowPrivilegeEscalation: true\n   capabilities:\n     add:\n     - SETGID\n     - SETUID",
                    "type": "boolean"
                  },
                  "editorsDownloadUrls": {
                    "description": "EditorsDownloadUrls provides a list of custom download URLs for JetBrains editors\nin a local-to-remote flow.\nIt is particularly useful in disconnected or air-gapped environments,\nwhere editors cannot be downloaded from the public internet.\nEach entry contains an editor identifier in the `publisher/name/version` format\nand the corresponding download URL.\nCurrently, this field is intended only for JetBrains editors and should not be used for other editor types.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "editor",
                        "url"
                      ],
                      "properties": {
                        "editor": {
                          "description": "The editor ID must have `publisher/name/version` format.",
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "gatewayContainer": {
                    "description": "GatewayContainer configuration.",
                    "type": "object",
                    "properties": {
                      "env": {
                        "description": "List of environment variables to set in the container.",
                        "type": "array",
                        "items": {
                          "description": "EnvVar represents an environment variable present in a Container.",
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                              "type": "string"
                            },
                            "valueFrom": {
                              "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                              "type": "object",
                              "properties": {
                                "configMapKeyRef": {
                                  "description": "Selects a key of a ConfigMap.",
                                  "type": "object",
                                  "required": [
                                    "key"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "The key to select.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string"
                                    },
                                    "optional": {
                                      "description": "Specify whether the ConfigMap or its key must be defined",
                                      "type": "boolean"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "fieldRef": {
                                  "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                  "type": "object",
                                  "required": [
                                    "fieldPath"
                                  ],
                                  "properties": {
                                    "apiVersion": {
                                      "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                      "type": "string"
                                    },
                                    "fieldPath": {
                                      "description": "Path of the field to select in the specified API version.",
                                      "type": "string"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "resourceFieldRef": {
                                  "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                  "type": "object",
                                  "required": [
                                    "resource"
                                  ],
                                  "properties": {
                                    "containerName": {
                                      "description": "Container name: required for volumes, optional for env vars",
                                      "type": "string"
                                    },
                                    "divisor": {
                                      "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "x-kubernetes-int-or-string": true
                                    },
                                    "resource": {
                                      "description": "Required: resource to select",
                                      "type": "string"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "secretKeyRef": {
                                  "description": "Selects a key of a secret in the pod's namespace",
                                  "type": "object",
                                  "required": [
                                    "key"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string"
                                    },
                                    "optional": {
                                      "description": "Specify whether the Secret or its key must be defined",
                                      "type": "boolean"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                }
                              }
                            }
                          }
                        }
                      },
                      "image": {
                        "description": "Container image. Omit it or leave it empty to use the default container image provided by the Operator.",
                        "type": "string"
                      },
                      "imagePullPolicy": {
                        "description": "Image pull policy. Default value is `Always` for `nightly`, `next` or `latest` images, and `IfNotPresent` in other cases.",
                        "type": "string",
                        "enum": [
                          "Always",
                          "IfNotPresent",
                          "Never"
                        ]
                      },
                      "name": {
                        "description": "Container name.",
                        "type": "string"
                      },
                      "resources": {
                        "description": "Compute resources required by this container.",
                        "type": "object",
                        "properties": {
                          "limits": {
                            "description": "Describes the maximum amount of compute resources allowed.",
                            "type": "object",
                            "properties": {
                              "cpu": {
                                "description": "CPU, in cores. (500m = .5 cores)\nIf the value is not specified, then the default value is set depending on the component.\nIf value is `0`, then no value is set for the component.",
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "x-kubernetes-int-or-string": true
                              },
                              "memory": {
                                "description": "Memory, in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024)\nIf the value is not specified, then the default value is set depending on the component.\nIf value is `0`, then no value is set for the component.",
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "x-kubernetes-int-or-string": true
                              }
                            }
                          },
                          "request": {
                            "description": "Describes the minimum amount of compute resources required.",
                            "type": "object",
                            "properties": {
                              "cpu": {
                                "description": "CPU, in cores. (500m = .5 cores)\nIf the value is not specified, then the default value is set depending on the component.\nIf value is `0`, then no value is set for the component.",
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "x-kubernetes-int-or-string": true
                              },
                              "memory": {
                                "description": "Memory, in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024)\nIf the value is not specified, then the default value is set depending on the component.\nIf value is `0`, then no value is set for the component.",
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "x-kubernetes-int-or-string": true
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "ignoredUnrecoverableEvents": {
                    "description": "IgnoredUnrecoverableEvents defines a list of Kubernetes event names that should\nbe ignored when deciding to fail a workspace that is starting. This option should be used\nif a transient cluster issue is triggering false-positives (for example, if\nthe cluster occasionally encounters FailedScheduling events). Events listed\nhere will not trigger workspace failures.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "imagePullPolicy": {
                    "description": "ImagePullPolicy defines the imagePullPolicy used for containers in a DevWorkspace.",
                    "type": "string",
                    "enum": [
                      "Always",
                      "IfNotPresent",
                      "Never"
                    ]
                  },
                  "maxNumberOfRunningWorkspacesPerCluster": {
                    "description": "The maximum number of concurrently running workspaces across the entire Kubernetes cluster.\nThis applies to all users in the system. If the value is set to -1, it means there is\nno limit on the number of running workspaces.",
                    "type": "integer",
                    "format": "int64",
                    "minimum": -1
                  },
                  "maxNumberOfRunningWorkspacesPerUser": {
                    "description": "The maximum number of running workspaces per user.\nThe value, -1, allows users to run an unlimited number of workspaces.",
                    "type": "integer",
                    "format": "int64",
                    "minimum": -1
                  },
                  "maxNumberOfWorkspacesPerUser": {
                    "description": "Total number of workspaces, both stopped and running, that a user can keep.\nThe value, -1, allows users to keep an unlimited number of workspaces.",
                    "type": "integer",
                    "format": "int64",
                    "minimum": -1
                  },
                  "nodeSelector": {
                    "description": "The node selector limits the nodes that can run the workspace pods.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "persistUserHome": {
                    "description": "PersistUserHome defines configuration options for persisting the\nuser home directory in workspaces.",
                    "type": "object",
                    "properties": {
                      "disableInitContainer": {
                        "description": "Determines whether the init container that initializes the persistent home directory should be disabled.\nWhen the `/home/user` directory is persisted, the init container is used to initialize the directory before\nthe workspace starts. If set to true, the init container will not be created.\nDisabling the init container allows home persistence to be initialized by the entrypoint present in the workspace's first container component.\nThis field is not used if the `devEnvironments.persistUserHome.enabled` field is set to false.\nThe init container is enabled by default.",
                        "type": "boolean"
                      },
                      "enabled": {
                        "description": "Determines whether the user home directory in workspaces should persist between\nworkspace shutdown and startup.\nMust be used with the 'per-user' or 'per-workspace' PVC strategy in order to take effect.\nDisabled by default.",
                        "type": "boolean"
                      }
                    }
                  },
                  "podSchedulerName": {
                    "description": "Pod scheduler for the workspace pods.\nIf not specified, the pod scheduler is set to the default scheduler on the cluster.",
                    "type": "string"
                  },
                  "projectCloneContainer": {
                    "description": "Project clone container configuration.",
                    "type": "object",
                    "properties": {
                      "env": {
                        "description": "List of environment variables to set in the container.",
                        "type": "array",
                        "items": {
                          "description": "EnvVar represents an environment variable present in a Container.",
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                              "type": "string"
                            },
                            "valueFrom": {
                              "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                              "type": "object",
                              "properties": {
                                "configMapKeyRef": {
                                  "description": "Selects a key of a ConfigMap.",
                                  "type": "object",
                                  "required": [
                                    "key"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "The key to select.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string"
                                    },
                                    "optional": {
                                      "description": "Specify whether the ConfigMap or its key must be defined",
                                      "type": "boolean"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "fieldRef": {
                                  "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                  "type": "object",
                                  "required": [
                                    "fieldPath"
                                  ],
                                  "properties": {
                                    "apiVersion": {
                                      "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                      "type": "string"
                                    },
                                    "fieldPath": {
                                      "description": "Path of the field to select in the specified API version.",
                                      "type": "string"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "resourceFieldRef": {
                                  "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                  "type": "object",
                                  "required": [
                                    "resource"
                                  ],
                                  "properties": {
                                    "containerName": {
                                      "description": "Container name: required for volumes, optional for env vars",
                                      "type": "string"
                                    },
                                    "divisor": {
                                      "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "x-kubernetes-int-or-string": true
                                    },
                                    "resource": {
                                      "description": "Required: resource to select",
                                      "type": "string"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "secretKeyRef": {
                                  "description": "Selects a key of a secret in the pod's namespace",
                                  "type": "object",
                                  "required": [
                                    "key"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string"
                                    },
                                    "optional": {
                                      "description": "Specify whether the Secret or its key must be defined",
                                      "type": "boolean"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                }
                              }
                            }
                          }
                        }
                      },
                      "image": {
                        "description": "Container image. Omit it or leave it empty to use the default container image provided by the Operator.",
                        "type": "string"
                      },
                      "imagePullPolicy": {
                        "description": "Image pull policy. Default value is `Always` for `nightly`, `next` or `latest` images, and `IfNotPresent` in other cases.",
                        "type": "string",
                        "enum": [
                          "Always",
                          "IfNotPresent",
                          "Never"
                        ]
                      },
                      "name": {
                        "description": "Container name.",
                        "type": "string"
                      },
                      "resources": {
                        "description": "Compute resources required by this container.",
                        "type": "object",
                        "properties": {
                          "limits": {
                            "description": "Describes the maximum amount of compute resources allowed.",
                            "type": "object",
                            "properties": {
                              "cpu": {
                                "description": "CPU, in cores. (500m = .5 cores)\nIf the value is not specified, then the default value is set depending on the component.\nIf value is `0`, then no value is set for the component.",
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "x-kubernetes-int-or-string": true
                              },
                              "memory": {
                                "description": "Memory, in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024)\nIf the value is not specified, then the default value is set depending on the component.\nIf value is `0`, then no value is set for the component.",
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "x-kubernetes-int-or-string": true
                              }
                            }
                          },
                          "request": {
                            "description": "Describes the minimum amount of compute resources required.",
                            "type": "object",
                            "properties": {
                              "cpu": {
                                "description": "CPU, in cores. (500m = .5 cores)\nIf the value is not specified, then the default value is set depending on the component.\nIf value is `0`, then no value is set for the component.",
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "x-kubernetes-int-or-string": true
                              },
                              "memory": {
                                "description": "Memory, in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024)\nIf the value is not specified, then the default value is set depending on the component.\nIf value is `0`, then no value is set for the component.",
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "x-kubernetes-int-or-string": true
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "runtimeClassName": {
                    "description": "RuntimeClassName specifies the spec.runtimeClassName for workspace pods.",
                    "type": "string"
                  },
                  "secondsOfInactivityBeforeIdling": {
                    "description": "Idle timeout for workspaces in seconds.\nThis timeout is the duration after which a workspace will be idled if there is no activity.\nTo disable workspace idling due to inactivity, set this value to -1.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "secondsOfRunBeforeIdling": {
                    "description": "Run timeout for workspaces in seconds.\nThis timeout is the maximum duration a workspace runs.\nTo disable workspace run timeout, set this value to -1.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "security": {
                    "description": "Workspace security configuration.",
                    "type": "object",
                    "properties": {
                      "containerSecurityContext": {
                        "description": "Container SecurityContext used by all workspace-related containers.\nIf set, defined values are merged into the default Container SecurityContext configuration.\nRequires devEnvironments.disableContainerBuildCapabilities to be set to `true` in order to take effect.",
                        "type": "object",
                        "properties": {
                          "allowPrivilegeEscalation": {
                            "description": "AllowPrivilegeEscalation controls whether a process can gain more\nprivileges than its parent process. This bool directly controls if\nthe no_new_privs flag will be set on the container process.\nAllowPrivilegeEscalation is true always when the container is:\n1) run as Privileged\n2) has CAP_SYS_ADMIN\nNote that this field cannot be set when spec.os.name is windows.",
                            "type": "boolean"
                          },
                          "appArmorProfile": {
                            "description": "appArmorProfile is the AppArmor options to use by this container. If set, this profile\noverrides the pod's appArmorProfile.\nNote that this field cannot be set when spec.os.name is windows.",
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "localhostProfile": {
                                "description": "localhostProfile indicates a profile loaded on the node that should be used.\nThe profile must be preconfigured on the node to work.\nMust match the loaded name of the profile.\nMust be set if and only if type is \"Localhost\".",
                                "type": "string"
                              },
                              "type": {
                                "description": "type indicates which kind of AppArmor profile will be applied.\nValid options are:\n  Localhost - a profile pre-loaded on the node.\n  RuntimeDefault - the container runtime's default profile.\n  Unconfined - no AppArmor enforcement.",
                                "type": "string"
                              }
                            }
                          },
                          "capabilities": {
                            "description": "The capabilities to add/drop when running containers.\nDefaults to the default set of capabilities granted by the container runtime.\nNote that this field cannot be set when spec.os.name is windows.",
                            "type": "object",
                            "properties": {
                              "add": {
                                "description": "Added capabilities",
                                "type": "array",
                                "items": {
                                  "description": "Capability represent POSIX capabilities type",
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "atomic"
                              },
                              "drop": {
                                "description": "Removed capabilities",
                                "type": "array",
                                "items": {
                                  "description": "Capability represent POSIX capabilities type",
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "atomic"
                              }
                            }
                          },
                          "privileged": {
                            "description": "Run container in privileged mode.\nProcesses in privileged containers are essentially equivalent to root on the host.\nDefaults to false.\nNote that this field cannot be set when spec.os.name is windows.",
                            "type": "boolean"
                          },
                          "procMount": {
                            "description": "procMount denotes the type of proc mount to use for the containers.\nThe default value is Default which uses the container runtime defaults for\nreadonly paths and masked paths.\nThis requires the ProcMountType feature flag to be enabled.\nNote that this field cannot be set when spec.os.name is windows.",
                            "type": "string"
                          },
                          "readOnlyRootFilesystem": {
                            "description": "Whether this container has a read-only root filesystem.\nDefault is false.\nNote that this field cannot be set when spec.os.name is windows.",
                            "type": "boolean"
                          },
                          "runAsGroup": {
                            "description": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                            "type": "integer",
                            "format": "int64"
                          },
                          "runAsNonRoot": {
                            "description": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                            "type": "boolean"
                          },
                          "runAsUser": {
                            "description": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                            "type": "integer",
                            "format": "int64"
                          },
                          "seLinuxOptions": {
                            "description": "The SELinux context to be applied to the container.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                            "type": "object",
                            "properties": {
                              "level": {
                                "description": "Level is SELinux level label that applies to the container.",
                                "type": "string"
                              },
                              "role": {
                                "description": "Role is a SELinux role label that applies to the container.",
                                "type": "string"
                              },
                              "type": {
                                "description": "Type is a SELinux type label that applies to the container.",
                                "type": "string"
                              },
                              "user": {
                                "description": "User is a SELinux user label that applies to the container.",
                                "type": "string"
                              }
                            }
                          },
                          "seccompProfile": {
                            "description": "The seccomp options to use by this container. If seccomp options are\nprovided at both the pod & container level, the container options\noverride the pod options.\nNote that this field cannot be set when spec.os.name is windows.",
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "localhostProfile": {
                                "description": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.",
                                "type": "string"
                              },
                              "type": {
                                "description": "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.",
                                "type": "string"
                              }
                            }
                          },
                          "windowsOptions": {
                            "description": "The Windows specific settings applied to all containers.\nIf unspecified, the options from the PodSecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux.",
                            "type": "object",
                            "properties": {
                              "gmsaCredentialSpec": {
                                "description": "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field.",
                                "type": "string"
                              },
                              "gmsaCredentialSpecName": {
                                "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
                                "type": "string"
                              },
                              "hostProcess": {
                                "description": "HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true.",
                                "type": "boolean"
                              },
                              "runAsUserName": {
                                "description": "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "podSecurityContext": {
                        "description": "PodSecurityContext used by all workspace-related pods.\nIf set, defined values are merged into the default PodSecurityContext configuration.",
                        "type": "object",
                        "properties": {
                          "appArmorProfile": {
                            "description": "appArmorProfile is the AppArmor options to use by the containers in this pod.\nNote that this field cannot be set when spec.os.name is windows.",
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "localhostProfile": {
                                "description": "localhostProfile indicates a profile loaded on the node that should be used.\nThe profile must be preconfigured on the node to work.\nMust match the loaded name of the profile.\nMust be set if and only if type is \"Localhost\".",
                                "type": "string"
                              },
                              "type": {
                                "description": "type indicates which kind of AppArmor profile will be applied.\nValid options are:\n  Localhost - a profile pre-loaded on the node.\n  RuntimeDefault - the container runtime's default profile.\n  Unconfined - no AppArmor enforcement.",
                                "type": "string"
                              }
                            }
                          },
                          "fsGroup": {
                            "description": "A special supplemental group that applies to all containers in a pod.\nSome volume types allow the Kubelet to change the ownership of that volume\nto be owned by the pod:\n\n1. The owning GID will be the FSGroup\n2. The setgid bit is set (new files created in the volume will be owned by FSGroup)\n\nIf unset, the Kubelet will not modify the ownership and permissions of any volume.\nNote that this field cannot be set when spec.os.name is windows.",
                            "type": "integer",
                            "format": "int64"
                          },
                          "fsGroupChangePolicy": {
                            "description": "fsGroupChangePolicy defines behavior of changing ownership and permission of the volume\nbefore being exposed inside Pod. This field will only apply to\nvolume types which support fsGroup based ownership(and permissions).\nIt will have no effect on ephemeral volume types such as: secret, configmaps\nand emptydir.\nValid values are \"OnRootMismatch\" and \"Always\". If not specified, \"Always\" is used.\nNote that this field cannot be set when spec.os.name is windows.",
                            "type": "string"
                          },
                          "runAsGroup": {
                            "description": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence\nfor that container.\nNote that this field cannot be set when spec.os.name is windows.",
                            "type": "integer",
                            "format": "int64"
                          },
                          "runAsNonRoot": {
                            "description": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                            "type": "boolean"
                          },
                          "runAsUser": {
                            "description": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence\nfor that container.\nNote that this field cannot be set when spec.os.name is windows.",
                            "type": "integer",
                            "format": "int64"
                          },
                          "seLinuxChangePolicy": {
                            "description": "seLinuxChangePolicy defines how the container's SELinux label is applied to all volumes used by the Pod.\nIt has no effect on nodes that do not support SELinux or to volumes does not support SELinux.\nValid values are \"MountOption\" and \"Recursive\".\n\n\"Recursive\" means relabeling of all files on all Pod volumes by the container runtime.\nThis may be slow for large volumes, but allows mixing privileged and unprivileged Pods sharing the same volume on the same node.\n\n\"MountOption\" mounts all eligible Pod volumes with `-o context` mount option.\nThis requires all Pods that share the same volume to use the same SELinux label.\nIt is not possible to share the same volume among privileged and unprivileged Pods.\nEligible volumes are in-tree FibreChannel and iSCSI volumes, and all CSI volumes\nwhose CSI driver announces SELinux support by setting spec.seLinuxMount: true in their\nCSIDriver instance. Other volumes are always re-labelled recursively.\n\"MountOption\" value is allowed only when SELinuxMount feature gate is enabled.\n\nIf not specified and SELinuxMount feature gate is enabled, \"MountOption\" is used.\nIf not specified and SELinuxMount feature gate is disabled, \"MountOption\" is used for ReadWriteOncePod volumes\nand \"Recursive\" for all other volumes.\n\nThis field affects only Pods that have SELinux label set, either in PodSecurityContext or in SecurityContext of all containers.\n\nAll Pods that use the same volume should use the same seLinuxChangePolicy, otherwise some pods can get stuck in ContainerCreating state.\nNote that this field cannot be set when spec.os.name is windows.",
                            "type": "string"
                          },
                          "seLinuxOptions": {
                            "description": "The SELinux context to be applied to all containers.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in SecurityContext.  If set in\nboth SecurityContext and PodSecurityContext, the value specified in SecurityContext\ntakes precedence for that container.\nNote that this field cannot be set when spec.os.name is windows.",
                            "type": "object",
                            "properties": {
                              "level": {
                                "description": "Level is SELinux level label that applies to the container.",
                                "type": "string"
                              },
                              "role": {
                                "description": "Role is a SELinux role label that applies to the container.",
                                "type": "string"
                              },
                              "type": {
                                "description": "Type is a SELinux type label that applies to the container.",
                                "type": "string"
                              },
                              "user": {
                                "description": "User is a SELinux user label that applies to the container.",
                                "type": "string"
                              }
                            }
                          },
                          "seccompProfile": {
                            "description": "The seccomp options to use by the containers in this pod.\nNote that this field cannot be set when spec.os.name is windows.",
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "localhostProfile": {
                                "description": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.",
                                "type": "string"
                              },
                              "type": {
                                "description": "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.",
                                "type": "string"
                              }
                            }
                          },
                          "supplementalGroups": {
                            "description": "A list of groups applied to the first process run in each container, in\naddition to the container's primary GID and fsGroup (if specified).  If\nthe SupplementalGroupsPolicy feature is enabled, the\nsupplementalGroupsPolicy field determines whether these are in addition\nto or instead of any group memberships defined in the container image.\nIf unspecified, no additional groups are added, though group memberships\ndefined in the container image may still be used, depending on the\nsupplementalGroupsPolicy field.\nNote that this field cannot be set when spec.os.name is windows.",
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "format": "int64"
                            },
                            "x-kubernetes-list-type": "atomic"
                          },
                          "supplementalGroupsPolicy": {
                            "description": "Defines how supplemental groups of the first container processes are calculated.\nValid values are \"Merge\" and \"Strict\". If not specified, \"Merge\" is used.\n(Alpha) Using the field requires the SupplementalGroupsPolicy feature gate to be enabled\nand the container runtime must implement support for this feature.\nNote that this field cannot be set when spec.os.name is windows.",
                            "type": "string"
                          },
                          "sysctls": {
                            "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported\nsysctls (by the container runtime) might fail to launch.\nNote that this field cannot be set when spec.os.name is windows.",
                            "type": "array",
                            "items": {
                              "description": "Sysctl defines a kernel parameter to be set",
                              "type": "object",
                              "required": [
                                "name",
                                "value"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Name of a property to set",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "Value of a property to set",
                                  "type": "string"
                                }
                              }
                            },
                            "x-kubernetes-list-type": "atomic"
                          },
                          "windowsOptions": {
                            "description": "The Windows specific settings applied to all containers.\nIf unspecified, the options within a container's SecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux.",
                            "type": "object",
                            "properties": {
                              "gmsaCredentialSpec": {
                                "description": "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field.",
                                "type": "string"
                              },
                              "gmsaCredentialSpecName": {
                                "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
                                "type": "string"
                              },
                              "hostProcess": {
                                "description": "HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true.",
                                "type": "boolean"
                              },
                              "runAsUserName": {
                                "description": "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "serviceAccount": {
                    "description": "ServiceAccount to use by the DevWorkspace operator when starting the workspaces.",
                    "type": "string",
                    "maxLength": 63,
                    "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                  },
                  "serviceAccountTokens": {
                    "description": "List of ServiceAccount tokens that will be mounted into workspace pods as projected volumes.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "mountPath",
                        "name",
                        "path"
                      ],
                      "properties": {
                        "audience": {
                          "description": "Audience is the intended audience of the token. A recipient of a token\nmust identify itself with an identifier specified in the audience of the\ntoken, and otherwise should reject the token. The audience defaults to the\nidentifier of the apiserver.",
                          "type": "string"
                        },
                        "expirationSeconds": {
                          "description": "ExpirationSeconds is the requested duration of validity of the service\naccount token. As the token approaches expiration, the kubelet volume\nplugin will proactively rotate the service account token. The kubelet will\nstart trying to rotate the token if the token is older than 80 percent of\nits time to live or if the token is older than 24 hours. Defaults to 1 hour\nand must be at least 10 minutes.",
                          "type": "integer",
                          "format": "int64",
                          "minimum": 600
                        },
                        "mountPath": {
                          "description": "Path within the workspace container at which the token should be mounted.  Must\nnot contain ':'.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Identifiable name of the ServiceAccount token.\nIf multiple ServiceAccount tokens use the same mount path, a generic name will be used\nfor the projected volume instead.",
                          "type": "string"
                        },
                        "path": {
                          "description": "Path is the path relative to the mount point of the file to project the\ntoken into.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "startTimeoutSeconds": {
                    "description": "StartTimeoutSeconds determines the maximum duration (in seconds) that a workspace can take to start\nbefore it is automatically failed.\nIf not specified, the default value of 300 seconds (5 minutes) is used.",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1
                  },
                  "storage": {
                    "description": "Workspaces persistent storage.",
                    "type": "object",
                    "properties": {
                      "perUserStrategyPvcConfig": {
                        "description": "PVC settings when using the `per-user` PVC strategy.",
                        "type": "object",
                        "properties": {
                          "claimSize": {
                            "description": "Persistent Volume Claim size. To update the claim size, the storage class that provisions it must support resizing.",
                            "type": "string"
                          },
                          "storageAccessMode": {
                            "description": "StorageAccessMode are the desired access modes the volume should have.\nIt is used to specify PersistentVolume access mode type to RWO/RWX when using per-user strategy, allowing\nuser to re-use volume across multiple workspaces.\n\nIt defaults to ReadWriteOnce if not specified",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "storageClass": {
                            "description": "Storage class for the Persistent Volume Claim. When omitted or left blank, a default storage class is used.",
                            "type": "string"
                          }
                        }
                      },
                      "perWorkspaceStrategyPvcConfig": {
                        "description": "PVC settings when using the `per-workspace` PVC strategy.",
                        "type": "object",
                        "properties": {
                          "claimSize": {
                            "description": "Persistent Volume Claim size. To update the claim size, the storage class that provisions it must support resizing.",
                            "type": "string"
                          },
                          "storageAccessMode": {
                            "description": "StorageAccessMode are the desired access modes the volume should have.\nIt is used to specify PersistentVolume access mode type to RWO/RWX when using per-user strategy, allowing\nuser to re-use volume across multiple workspaces.\n\nIt defaults to ReadWriteOnce if not specified",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "storageClass": {
                            "description": "Storage class for the Persistent Volume Claim. When omitted or left blank, a default storage class is used.",
                            "type": "string"
                          }
                        }
                      },
                      "pvcStrategy": {
                        "description": "Persistent volume claim strategy for the Che server.\nThe supported strategies are: `per-user` (all workspaces PVCs in one volume),\n`per-workspace` (each workspace is given its own individual PVC)\nand `ephemeral` (non-persistent storage where local changes will be lost when\nthe workspace is stopped.)",
                        "type": "string",
                        "enum": [
                          "common",
                          "per-user",
                          "per-workspace",
                          "ephemeral"
                        ]
                      }
                    }
                  },
                  "tolerations": {
                    "description": "The pod tolerations of the workspace pods limit where the workspace pods can run.",
                    "type": "array",
                    "items": {
                      "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>.",
                      "type": "object",
                      "properties": {
                        "effect": {
                          "description": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                          "type": "string"
                        },
                        "key": {
                          "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                          "type": "string"
                        },
                        "operator": {
                          "description": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.",
                          "type": "string"
                        },
                        "tolerationSeconds": {
                          "description": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "value": {
                          "description": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "trustedCerts": {
                    "description": "Trusted certificate settings.",
                    "type": "object",
                    "properties": {
                      "disableWorkspaceCaBundleMount": {
                        "description": "By default, the Operator creates and mounts the 'ca-certs-merged' ConfigMap\ncontaining the CA certificate bundle in users' workspaces at two locations:\n'/public-certs' and '/etc/pki/ca-trust/extracted/pem'.\nThe '/etc/pki/ca-trust/extracted/pem' directory is where the system stores extracted CA certificates\nfor trusted certificate authorities on Red Hat (e.g., CentOS, Fedora).\nThis option disables mounting the CA bundle to the '/etc/pki/ca-trust/extracted/pem' directory\nwhile still mounting it to '/public-certs'.",
                        "type": "boolean"
                      },
                      "gitTrustedCertsConfigMapName": {
                        "description": "The ConfigMap contains certificates to propagate to the Che components and to provide a particular configuration for Git.\nSee the following page: https://www.eclipse.org/che/docs/stable/administration-guide/deploying-che-with-support-for-git-repositories-with-self-signed-certificates/\nThe ConfigMap must have a `app.kubernetes.io/part-of=che.eclipse.org` label.",
                        "type": "string"
                      }
                    }
                  },
                  "user": {
                    "description": "User configuration.",
                    "type": "object",
                    "properties": {
                      "clusterRoles": {
                        "description": "Additional ClusterRoles assigned to the user.\nThe role must have `app.kubernetes.io/part-of=che.eclipse.org` label.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "workspacesPodAnnotations": {
                    "description": "WorkspacesPodAnnotations defines additional annotations for workspace pods.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              },
              "gitServices": {
                "description": "A configuration that allows users to work with remote Git repositories.",
                "type": "object",
                "properties": {
                  "azure": {
                    "description": "Enables users to work with repositories hosted on Azure DevOps Service (dev.azure.com).",
                    "type": "array",
                    "items": {
                      "description": "AzureDevOpsService enables users to work with repositories hosted on Azure DevOps Service (dev.azure.com).",
                      "type": "object",
                      "required": [
                        "secretName"
                      ],
                      "properties": {
                        "secretName": {
                          "description": "Kubernetes secret, that contains Base64-encoded Azure DevOps Service Application ID and Client Secret.\nSee the following page: https://www.eclipse.org/che/docs/stable/administration-guide/configuring-oauth-2-for-microsoft-azure-devops-services",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "bitbucket": {
                    "description": "Enables users to work with repositories hosted on Bitbucket (bitbucket.org or self-hosted).",
                    "type": "array",
                    "items": {
                      "description": "BitBucketService enables users to work with repositories hosted on Bitbucket (bitbucket.org or self-hosted).",
                      "type": "object",
                      "required": [
                        "secretName"
                      ],
                      "properties": {
                        "endpoint": {
                          "description": "Bitbucket server endpoint URL.\nDeprecated in favor of `che.eclipse.org/scm-server-endpoint` annotation.\nSee the following page: https://www.eclipse.org/che/docs/stable/administration-guide/configuring-oauth-1-for-a-bitbucket-server/.",
                          "type": "string"
                        },
                        "secretName": {
                          "description": "Kubernetes secret, that contains Base64-encoded Bitbucket OAuth 1.0 or OAuth 2.0 data.\nSee the following pages for details: https://www.eclipse.org/che/docs/stable/administration-guide/configuring-oauth-1-for-a-bitbucket-server/\nand https://www.eclipse.org/che/docs/stable/administration-guide/configuring-oauth-2-for-the-bitbucket-cloud/.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "github": {
                    "description": "Enables users to work with repositories hosted on GitHub (github.com or GitHub Enterprise).",
                    "type": "array",
                    "items": {
                      "description": "GitHubService enables users to work with repositories hosted on GitHub (GitHub.com or GitHub Enterprise).",
                      "type": "object",
                      "required": [
                        "secretName"
                      ],
                      "properties": {
                        "disableSubdomainIsolation": {
                          "description": "Disables subdomain isolation.\nDeprecated in favor of `che.eclipse.org/scm-github-disable-subdomain-isolation` annotation.\nSee the following page for details: https://www.eclipse.org/che/docs/stable/administration-guide/configuring-oauth-2-for-github/.",
                          "type": "boolean"
                        },
                        "endpoint": {
                          "description": "GitHub server endpoint URL.\nDeprecated in favor of `che.eclipse.org/scm-server-endpoint` annotation.\nSee the following page for details: https://www.eclipse.org/che/docs/stable/administration-guide/configuring-oauth-2-for-github/.",
                          "type": "string"
                        },
                        "secretName": {
                          "description": "Kubernetes secret, that contains Base64-encoded GitHub OAuth Client id and GitHub OAuth Client secret.\nSee the following page for details: https://www.eclipse.org/che/docs/stable/administration-guide/configuring-oauth-2-for-github/.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "gitlab": {
                    "description": "Enables users to work with repositories hosted on GitLab (gitlab.com or self-hosted).",
                    "type": "array",
                    "items": {
                      "description": "GitLabService enables users to work with repositories hosted on GitLab (gitlab.com or self-hosted).",
                      "type": "object",
                      "required": [
                        "secretName"
                      ],
                      "properties": {
                        "endpoint": {
                          "description": "GitLab server endpoint URL.\nDeprecated in favor of `che.eclipse.org/scm-server-endpoint` annotation.\nSee the following page: https://www.eclipse.org/che/docs/stable/administration-guide/configuring-oauth-2-for-gitlab/.",
                          "type": "string"
                        },
                        "secretName": {
                          "description": "Kubernetes secret, that contains Base64-encoded GitHub Application id and GitLab Application Client secret.\nSee the following page: https://www.eclipse.org/che/docs/stable/administration-guide/configuring-oauth-2-for-gitlab/.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "networking": {
                "description": "Networking, Che authentication, and TLS configuration.",
                "type": "object",
                "properties": {
                  "annotations": {
                    "description": "Defines annotations which will be set for an Ingress (a route for OpenShift platform).\nThe defaults for kubernetes platforms are:\n    kubernetes.io/ingress.class:                       \"nginx\"\n    nginx.ingress.kubernetes.io/proxy-read-timeout:    \"3600\",\n    nginx.ingress.kubernetes.io/proxy-connect-timeout: \"3600\",\n    nginx.ingress.kubernetes.io/ssl-redirect:          \"true\"",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "auth": {
                    "description": "Authentication settings.",
                    "type": "object",
                    "properties": {
                      "advancedAuthorization": {
                        "description": "Advance authorization settings. Determines which users and groups are allowed to access Che.\nUser is allowed to access Che if he/she is either in the `allowUsers` list or is member of group from `allowGroups` list\nand not in neither the `denyUsers` list nor is member of group from `denyGroups` list.\nIf `allowUsers` and `allowGroups` are empty, then all users are allowed to access Che.\nif `denyUsers` and `denyGroups` are empty, then no users are denied to access Che.",
                        "type": "object",
                        "properties": {
                          "allowGroups": {
                            "description": "List of groups allowed to access Che (currently supported in OpenShift only).",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "allowUsers": {
                            "description": "List of users allowed to access Che.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "denyGroups": {
                            "description": "List of groups denied to access Che (currently supported in OpenShift only).",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "denyUsers": {
                            "description": "List of users denied to access Che.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "gateway": {
                        "description": "Gateway settings.",
                        "type": "object",
                        "properties": {
                          "configLabels": {
                            "description": "Gateway configuration labels.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "deployment": {
                            "description": "Deployment override options.\nSince gateway deployment consists of several containers, they must be distinguished in the configuration by their names:\n- `gateway`\n- `configbump`\n- `oauth-proxy`\n- `kube-rbac-proxy`",
                            "type": "object",
                            "properties": {
                              "containers": {
                                "description": "List of containers belonging to the pod.",
                                "type": "array",
                                "items": {
                                  "description": "Container custom settings.",
                                  "type": "object",
                                  "properties": {
                                    "env": {
                                      "description": "List of environment variables to set in the container.",
                                      "type": "array",
                                      "items": {
                                        "description": "EnvVar represents an environment variable present in a Container.",
                                        "type": "object",
                                        "required": [
                                          "name"
                                        ],
                                        "properties": {
                                          "name": {
                                            "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                                            "type": "string"
                                          },
                                          "valueFrom": {
                                            "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                                            "type": "object",
                                            "properties": {
                                              "configMapKeyRef": {
                                                "description": "Selects a key of a ConfigMap.",
                                                "type": "object",
                                                "required": [
                                                  "key"
                                                ],
                                                "properties": {
                                                  "key": {
                                                    "description": "The key to select.",
                                                    "type": "string"
                                                  },
                                                  "name": {
                                                    "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                    "type": "string"
                                                  },
                                                  "optional": {
                                                    "description": "Specify whether the ConfigMap or its key must be defined",
                                                    "type": "boolean"
                                                  }
                                                },
                                                "x-kubernetes-map-type": "atomic"
                                              },
                                              "fieldRef": {
                                                "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                                "type": "object",
                                                "required": [
                                                  "fieldPath"
                                                ],
                                                "properties": {
                                                  "apiVersion": {
                                                    "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                    "type": "string"
                                                  },
                                                  "fieldPath": {
                                                    "description": "Path of the field to select in the specified API version.",
                                                    "type": "string"
                                                  }
                                                },
                                                "x-kubernetes-map-type": "atomic"
                                              },
                                              "resourceFieldRef": {
                                                "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                                "type": "object",
                                                "required": [
                                                  "resource"
                                                ],
                                                "properties": {
                                                  "containerName": {
                                                    "description": "Container name: required for volumes, optional for env vars",
                                                    "type": "string"
                                                  },
                                                  "divisor": {
                                                    "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                    "x-kubernetes-int-or-string": true
                                                  },
                                                  "resource": {
                                                    "description": "Required: resource to select",
                                                    "type": "string"
                                                  }
                                                },
                                                "x-kubernetes-map-type": "atomic"
                                              },
                                              "secretKeyRef": {
                                                "description": "Selects a key of a secret in the pod's namespace",
                                                "type": "object",
                                                "required": [
                                                  "key"
                                                ],
                                                "properties": {
                                                  "key": {
                                                    "description": "The key of the secret to select from.  Must be a valid secret key.",
                                                    "type": "string"
                                                  },
                                                  "name": {
                                                    "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                    "type": "string"
                                                  },
                                                  "optional": {
                                                    "description": "Specify whether the Secret or its key must be defined",
                                                    "type": "boolean"
                                                  }
                                                },
                                                "x-kubernetes-map-type": "atomic"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "image": {
                                      "description": "Container image. Omit it or leave it empty to use the default container image provided by the Operator.",
                                      "type": "string"
                                    },
                                    "imagePullPolicy": {
                                      "description": "Image pull policy. Default value is `Always` for `nightly`, `next` or `latest` images, and `IfNotPresent` in other cases.",
                                      "type": "string",
                                      "enum": [
                                        "Always",
                                        "IfNotPresent",
                                        "Never"
                                      ]
                                    },
                                    "name": {
                                      "description": "Container name.",
                                      "type": "string"
                                    },
                                    "resources": {
                                      "description": "Compute resources required by this container.",
                                      "type": "object",
                                      "properties": {
                                        "limits": {
                                          "description": "Describes the maximum amount of compute resources allowed.",
                                          "type": "object",
                                          "properties": {
                                            "cpu": {
                                              "description": "CPU, in cores. (500m = .5 cores)\nIf the value is not specified, then the default value is set depending on the component.\nIf value is `0`, then no value is set for the component.",
                                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                              "x-kubernetes-int-or-string": true
                                            },
                                            "memory": {
                                              "description": "Memory, in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024)\nIf the value is not specified, then the default value is set depending on the component.\nIf value is `0`, then no value is set for the component.",
                                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                              "x-kubernetes-int-or-string": true
                                            }
                                          }
                                        },
                                        "request": {
                                          "description": "Describes the minimum amount of compute resources required.",
                                          "type": "object",
                                          "properties": {
                                            "cpu": {
                                              "description": "CPU, in cores. (500m = .5 cores)\nIf the value is not specified, then the default value is set depending on the component.\nIf value is `0`, then no value is set for the component.",
                                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                              "x-kubernetes-int-or-string": true
                                            },
                                            "memory": {
                                              "description": "Memory, in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024)\nIf the value is not specified, then the default value is set depending on the component.\nIf value is `0`, then no value is set for the component.",
                                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                              "x-kubernetes-int-or-string": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "nodeSelector": {
                                "description": "The node selector limits the nodes that can run the pod.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "securityContext": {
                                "description": "Security options the pod should run with.",
                                "type": "object",
                                "properties": {
                                  "fsGroup": {
                                    "description": "A special supplemental group that applies to all containers in a pod. The default value is `1724`.",
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "runAsUser": {
                                    "description": "The UID to run the entrypoint of the container process. The default value is `1724`.",
                                    "type": "integer",
                                    "format": "int64"
                                  }
                                }
                              },
                              "tolerations": {
                                "description": "The pod tolerations of the component pod limit where the pod can run.",
                                "type": "array",
                                "items": {
                                  "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>.",
                                  "type": "object",
                                  "properties": {
                                    "effect": {
                                      "description": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                                      "type": "string"
                                    },
                                    "key": {
                                      "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.",
                                      "type": "string"
                                    },
                                    "tolerationSeconds": {
                                      "description": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.",
                                      "type": "integer",
                                      "format": "int64"
                                    },
                                    "value": {
                                      "description": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "kubeRbacProxy": {
                            "description": "Configuration for kube-rbac-proxy within the Che gateway pod.",
                            "type": "object",
                            "properties": {
                              "logLevel": {
                                "description": "The glog log level for the kube-rbac-proxy container within the gateway pod. Larger values represent a higher verbosity. The default value is `0`.",
                                "type": "integer",
                                "format": "int32",
                                "minimum": 0
                              }
                            }
                          },
                          "oAuthProxy": {
                            "description": "Configuration for oauth-proxy within the Che gateway pod.",
                            "type": "object",
                            "properties": {
                              "cookieExpireSeconds": {
                                "description": "Expire timeframe for cookie. If set to 0, cookie becomes a session-cookie which will expire when the browser is closed.",
                                "type": "integer",
                                "format": "int32",
                                "minimum": 0
                              }
                            }
                          },
                          "traefik": {
                            "description": "Configuration for Traefik within the Che gateway pod.",
                            "type": "object",
                            "properties": {
                              "logLevel": {
                                "description": "The log level for the Traefik container within the gateway pod: `DEBUG`, `INFO`, `WARN`, `ERROR`, `FATAL`, or `PANIC`. The default value is `INFO`",
                                "type": "string",
                                "enum": [
                                  "DEBUG",
                                  "INFO",
                                  "WARN",
                                  "ERROR",
                                  "FATAL",
                                  "PANIC"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "identityProviderURL": {
                        "description": "Public URL of the Identity Provider server.",
                        "type": "string"
                      },
                      "identityToken": {
                        "description": "Identity token to be passed to upstream. There are two types of tokens supported: `id_token` and `access_token`.\nDefault value is `id_token`.\nThis field is specific to Che installations made for Kubernetes only and ignored for OpenShift.",
                        "type": "string",
                        "enum": [
                          "id_token",
                          "access_token"
                        ]
                      },
                      "oAuthAccessTokenInactivityTimeoutSeconds": {
                        "description": "Inactivity timeout for tokens to set in the OpenShift `OAuthClient` resource used to set up identity federation on the OpenShift side.\n0 means tokens for this client never time out.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "oAuthAccessTokenMaxAgeSeconds": {
                        "description": "Access token max age for tokens to set in the OpenShift `OAuthClient` resource used to set up identity federation on the OpenShift side.\n0 means no expiration.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "oAuthClientName": {
                        "description": "Name of the OpenShift `OAuthClient` resource used to set up identity federation on the OpenShift side.",
                        "type": "string"
                      },
                      "oAuthScope": {
                        "description": "Access Token Scope.\nThis field is specific to Che installations made for Kubernetes only and ignored for OpenShift.",
                        "type": "string"
                      },
                      "oAuthSecret": {
                        "description": "Name of the secret set in the OpenShift `OAuthClient` resource used to set up identity federation on the OpenShift side.\nFor Kubernetes, this can either be the plain text oAuthSecret value, or the name of a kubernetes secret which contains a\nkey `oAuthSecret` and the value is the secret. NOTE: this secret must exist in the same namespace as the `CheCluster`\nresource and contain the label `app.kubernetes.io/part-of=che.eclipse.org`.",
                        "type": "string"
                      }
                    }
                  },
                  "domain": {
                    "description": "For an OpenShift cluster, the Operator uses the domain to generate a hostname for the route.\nThe generated hostname follows this pattern: che-<che-namespace>.<domain>. The <che-namespace> is the namespace where the CheCluster CRD is created.\nIn conjunction with labels, it creates a route served by a non-default Ingress controller.\nFor a Kubernetes cluster, it contains a global ingress domain. There are no default values: you must specify them.",
                    "type": "string"
                  },
                  "hostname": {
                    "description": "The public hostname of the installed Che server.",
                    "type": "string"
                  },
                  "ingressClassName": {
                    "description": "IngressClassName is the name of an IngressClass cluster resource.\nIf a class name is defined in both the `IngressClassName` field and the `kubernetes.io/ingress.class` annotation,\n`IngressClassName` field takes precedence.",
                    "type": "string"
                  },
                  "labels": {
                    "description": "Defines labels which will be set for an Ingress (a route for OpenShift platform).",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "tlsSecretName": {
                    "description": "The name of the secret used to set up Ingress TLS termination.\nIf the field is an empty string, the default cluster certificate is used.\nThe secret must have a `app.kubernetes.io/part-of=che.eclipse.org` label.",
                    "type": "string"
                  }
                }
              }
            }
          },
          "status": {
            "description": "Defines the observed state of Che installation.",
            "type": "object",
            "properties": {
              "chePhase": {
                "description": "Specifies the current phase of the Che deployment.",
                "type": "string"
              },
              "cheURL": {
                "description": "Public URL of the Che server.",
                "type": "string"
              },
              "cheVersion": {
                "description": "Currently installed Che version.",
                "type": "string"
              },
              "devfileRegistryURL": {
                "description": "Deprecated the public URL of the internal devfile registry.",
                "type": "string"
              },
              "gatewayPhase": {
                "description": "Specifies the current phase of the gateway deployment.",
                "type": "string"
              },
              "message": {
                "description": "A human readable message indicating details about why the Che deployment is in the current phase.",
                "type": "string"
              },
              "pluginRegistryURL": {
                "description": "The public URL of the internal plug-in registry.",
                "type": "string"
              },
              "reason": {
                "description": "A brief CamelCase message indicating details about why the Che deployment is in the current phase.",
                "type": "string"
              },
              "workspaceBaseDomain": {
                "description": "The resolved workspace base domain. This is either the copy of the explicitly defined property of the\nsame name in the spec or, if it is undefined in the spec and we're running on OpenShift, the automatically\nresolved basedomain for routes.",
                "type": "string"
              }
            }
          }
        },
        "x-kubernetes-group-version-kind": [
          {
            "group": "org.eclipse.che",
            "kind": "CheCluster",
            "version": "v2"
          }
        ],
        "x-kubernetes-selectable-fields": []
      }
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
      "type": "object",
      "properties": {
        "continue": {
          "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",
          "type": "string"
        },
        "remainingItemCount": {
          "description": "remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.",
          "type": "integer",
          "format": "int64"
        },
        "resourceVersion": {
          "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type": "string"
        },
        "selfLink": {
          "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
          "type": "string"
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "org.eclipse.che",
      "kind": "CheClusterList",
      "version": "v2"
    }
  ],
  "x-kubernetes-selectable-fields": [],
  "$schema": "http://json-schema.org/schema#"
}