{
  "description": "DSCInitializationList is a list of DSCInitialization",
  "type": "object",
  "required": [
    "items"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "items": {
      "description": "List of dscinitializations. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
      "type": "array",
      "items": {
        "description": "DSCInitialization is the Schema for the dscinitializations API.",
        "type": "object",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
            "type": "object",
            "properties": {
              "annotations": {
                "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "creationTimestamp": {
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                "type": "string",
                "format": "date-time"
              },
              "deletionGracePeriodSeconds": {
                "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
                "type": "integer",
                "format": "int64"
              },
              "deletionTimestamp": {
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                "type": "string",
                "format": "date-time"
              },
              "finalizers": {
                "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "x-kubernetes-list-type": "set",
                "x-kubernetes-patch-strategy": "merge"
              },
              "generateName": {
                "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                "type": "string"
              },
              "generation": {
                "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
                "type": "integer",
                "format": "int64"
              },
              "labels": {
                "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "managedFields": {
                "description": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
                "type": "array",
                "items": {
                  "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
                  "type": "object",
                  "properties": {
                    "apiVersion": {
                      "description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
                      "type": "string"
                    },
                    "fieldsType": {
                      "description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
                      "type": "string"
                    },
                    "fieldsV1": {
                      "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff",
                      "type": "object"
                    },
                    "manager": {
                      "description": "Manager is an identifier of the workflow managing these fields.",
                      "type": "string"
                    },
                    "operation": {
                      "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
                      "type": "string"
                    },
                    "subresource": {
                      "description": "Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.",
                      "type": "string"
                    },
                    "time": {
                      "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "x-kubernetes-list-type": "atomic"
              },
              "name": {
                "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
                "type": "string"
              },
              "namespace": {
                "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces",
                "type": "string"
              },
              "ownerReferences": {
                "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
                "type": "array",
                "items": {
                  "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
                  "type": "object",
                  "required": [
                    "apiVersion",
                    "kind",
                    "name",
                    "uid"
                  ],
                  "properties": {
                    "apiVersion": {
                      "description": "API version of the referent.",
                      "type": "string"
                    },
                    "blockOwnerDeletion": {
                      "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
                      "type": "boolean"
                    },
                    "controller": {
                      "description": "If true, this reference points to the managing controller.",
                      "type": "boolean"
                    },
                    "kind": {
                      "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
                      "type": "string"
                    },
                    "uid": {
                      "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
                      "type": "string"
                    }
                  },
                  "x-kubernetes-map-type": "atomic"
                },
                "x-kubernetes-list-map-keys": [
                  "uid"
                ],
                "x-kubernetes-list-type": "map",
                "x-kubernetes-patch-merge-key": "uid",
                "x-kubernetes-patch-strategy": "merge"
              },
              "resourceVersion": {
                "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                "type": "string"
              },
              "selfLink": {
                "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
                "type": "string"
              },
              "uid": {
                "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
                "type": "string"
              }
            }
          },
          "spec": {
            "description": "DSCInitializationSpec defines the desired state of DSCInitialization.",
            "type": "object",
            "properties": {
              "applicationsNamespace": {
                "description": "Namespace for applications to be installed, non-configurable, default to \"redhat-ods-applications\"",
                "type": "string",
                "maxLength": 63,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?)?$",
                "x-kubernetes-validations": [
                  {
                    "message": "ApplicationsNamespace is immutable",
                    "rule": "self == oldSelf"
                  }
                ]
              },
              "devFlags": {
                "description": "Internal development useful field to test customizations.\nThis is not recommended to be used in production environment.",
                "type": "object",
                "properties": {
                  "logLevel": {
                    "description": "Override Zap log level. Can be \"debug\", \"info\", \"error\" or a number (more verbose).",
                    "type": "string"
                  },
                  "logmode": {
                    "description": "## DEPRECATED ##: Ignored, use LogLevel instead",
                    "type": "string",
                    "enum": [
                      "devel",
                      "development",
                      "prod",
                      "production",
                      "default"
                    ]
                  },
                  "manifestsUri": {
                    "description": "## DEPRECATED ## : ManifestsUri set on DSCI is not maintained.\nCustom manifests uri for odh-manifests",
                    "type": "string"
                  }
                }
              },
              "monitoring": {
                "description": "Enable monitoring on specified namespace",
                "type": "object",
                "properties": {
                  "managementState": {
                    "description": "Set to one of the following values:\n\n- \"Managed\" : the operator is actively managing the component and trying to keep it active.\n              It will only upgrade the component if it is safe to do so\n\n- \"Removed\" : the operator is actively managing the component and will not install it,\n              or if it is installed, the operator will try to remove it",
                    "type": "string",
                    "pattern": "^(Managed|Unmanaged|Force|Removed)$",
                    "enum": [
                      "Managed",
                      "Removed"
                    ]
                  },
                  "metrics": {
                    "description": "metrics collection",
                    "type": "object",
                    "properties": {
                      "replicas": {
                        "description": "Replicas specifies the number of replicas in monitoringstack, default is 2 if not set",
                        "type": "integer",
                        "format": "int32"
                      },
                      "resources": {
                        "description": "MetricsResources defines the resource requests and limits for the monitoring service",
                        "type": "object",
                        "properties": {
                          "cpulimit": {
                            "description": "CPULimit specifies the maximum CPU allocation (e.g., \"500m\", \"2\")",
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          },
                          "cpurequest": {
                            "description": "CPURequest specifies the minimum CPU allocation (e.g., \"100m\", \"0.5\")",
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          },
                          "memorylimit": {
                            "description": "MemoryLimit specifies the maximum memory allocation (e.g., \"1Gi\", \"512Mi\")",
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          },
                          "memoryrequest": {
                            "description": "MemoryRequest specifies the minimum memory allocation (e.g., \"256Mi\", \"1Gi\")",
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          }
                        }
                      },
                      "storage": {
                        "description": "MetricsStorage defines the storage configuration for the monitoring service",
                        "type": "object",
                        "properties": {
                          "retention": {
                            "description": "Retention specifies how long metrics data should be retained (e.g., \"1d\", \"2w\")",
                            "type": "string"
                          },
                          "size": {
                            "description": "Size specifies the storage size for the MonitoringStack (e.g, \"5Gi\", \"10Mi\")",
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          }
                        }
                      }
                    },
                    "x-kubernetes-validations": [
                      {
                        "message": "Replicas can only be set to non-zero value when either Storage or Resources is configured",
                        "rule": "!(self.storage == null && self.resources == null) || !has(self.replicas) || self.replicas == 0"
                      }
                    ]
                  },
                  "namespace": {
                    "description": "monitoring spec exposed to DSCI api\nNamespace for monitoring if it is enabled",
                    "type": "string",
                    "maxLength": 63,
                    "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?)?$",
                    "x-kubernetes-validations": [
                      {
                        "message": "MonitoringNamespace is immutable",
                        "rule": "self == oldSelf"
                      }
                    ]
                  },
                  "traces": {
                    "description": "Tracing configuration for OpenTelemetry instrumentation",
                    "type": "object",
                    "required": [
                      "storage"
                    ],
                    "properties": {
                      "sampleRatio": {
                        "description": "SampleRatio determines the sampling rate for traces\nValue should be between 0.0 (no sampling) and 1.0 (sample all traces)",
                        "type": "string",
                        "pattern": "^(0(\\.[0-9]+)?|1(\\.0+)?)$"
                      },
                      "storage": {
                        "description": "TracesStorage defines the storage configuration for tracing.",
                        "type": "object",
                        "required": [
                          "backend"
                        ],
                        "properties": {
                          "backend": {
                            "description": "Backend defines the storage backend type.\nValid values are \"pv\", \"s3\", and \"gcs\".",
                            "type": "string",
                            "enum": [
                              "pv",
                              "s3",
                              "gcs"
                            ]
                          },
                          "secret": {
                            "description": "Secret specifies the secret name for storage credentials.\nThis field is required when the backend is not \"pv\".",
                            "type": "string"
                          },
                          "size": {
                            "description": "Size specifies the size of the storage.\nThis field is optional.",
                            "type": "string"
                          }
                        },
                        "x-kubernetes-validations": [
                          {
                            "message": "When backend is not 'pv', the 'secret' field must be specified and non-empty",
                            "rule": "self.backend != 'pv' ? has(self.secret) : true"
                          },
                          {
                            "message": "Size is not supported when backend is not 'pv'",
                            "rule": "self.backend != 'pv' ? !has(self.size) : true"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "serviceMesh": {
                "description": "Configures Service Mesh as networking layer for Data Science Clusters components.\nThe Service Mesh is a mandatory prerequisite for single model serving (KServe) and\nyou should review this configuration if you are planning to use KServe.\nFor other components, it enhances user experience; e.g. it provides unified\nauthentication giving a Single Sign On experience.",
                "type": "object",
                "properties": {
                  "auth": {
                    "description": "Auth holds configuration of authentication and authorization services\nused by Service Mesh in Opendatahub.",
                    "type": "object",
                    "properties": {
                      "audiences": {
                        "description": "Audiences is a list of the identifiers that the resource server presented\nwith the token identifies as. Audience-aware token authenticators will verify\nthat the token was intended for at least one of the audiences in this list.\nIf no audiences are provided, the audience will default to the audience of the\nKubernetes apiserver (kubernetes.default.svc).",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "namespace": {
                        "description": "Namespace where it is deployed. If not provided, the default is to\nuse '-auth-provider' suffix on the ApplicationsNamespace of the DSCI.",
                        "type": "string",
                        "maxLength": 63,
                        "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?)?$"
                      }
                    }
                  },
                  "controlPlane": {
                    "description": "ControlPlane holds configuration of Service Mesh used by Opendatahub.",
                    "type": "object",
                    "properties": {
                      "metricsCollection": {
                        "description": "MetricsCollection specifies if metrics from components on the Mesh namespace\nshould be collected. Setting the value to \"Istio\" will collect metrics from the\ncontrol plane and any proxies on the Mesh namespace (like gateway pods). Setting\nto \"None\" will disable metrics collection.",
                        "type": "string",
                        "enum": [
                          "Istio",
                          "None"
                        ]
                      },
                      "name": {
                        "description": "Name is a name Service Mesh Control Plane. Defaults to \"data-science-smcp\".",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace is a namespace where Service Mesh is deployed. Defaults to \"istio-system\".",
                        "type": "string",
                        "maxLength": 63,
                        "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?)?$"
                      }
                    }
                  },
                  "managementState": {
                    "type": "string",
                    "pattern": "^(Managed|Unmanaged|Force|Removed)$",
                    "enum": [
                      "Managed",
                      "Unmanaged",
                      "Removed"
                    ]
                  }
                }
              },
              "trustedCABundle": {
                "description": "When set to `Managed`, adds odh-trusted-ca-bundle Configmap to all namespaces that includes\ncluster-wide Trusted CA Bundle in .data[\"ca-bundle.crt\"].\nAdditionally, this fields allows admins to add custom CA bundles to the configmap using the .CustomCABundle field.",
                "type": "object",
                "required": [
                  "customCABundle",
                  "managementState"
                ],
                "properties": {
                  "customCABundle": {
                    "description": "A custom CA bundle that will be available for  all  components in the\nData Science Cluster(DSC). This bundle will be stored in odh-trusted-ca-bundle\nConfigMap .data.odh-ca-bundle.crt .",
                    "type": "string"
                  },
                  "managementState": {
                    "description": "managementState indicates whether and how the operator should manage customized CA bundle",
                    "type": "string",
                    "pattern": "^(Managed|Unmanaged|Force|Removed)$",
                    "enum": [
                      "Managed",
                      "Removed",
                      "Unmanaged"
                    ]
                  }
                }
              }
            }
          },
          "status": {
            "description": "DSCInitializationStatus defines the observed state of DSCInitialization.",
            "type": "object",
            "properties": {
              "conditions": {
                "description": "Conditions describes the state of the DSCInitializationStatus resource",
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "status",
                    "type"
                  ],
                  "properties": {
                    "lastHeartbeatTime": {
                      "description": "The last time we got an update on a given condition, this should not be set and is\npresent only for backward compatibility reasons",
                      "type": "string",
                      "format": "date-time"
                    },
                    "lastTransitionTime": {
                      "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.\nIf that is not known, then using the time when the API field changed is acceptable.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "message": {
                      "description": "message is a human-readable message indicating details about the transition.",
                      "type": "string"
                    },
                    "observedGeneration": {
                      "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration\nis 9, the condition is out of date with respect to the current state of the instance.",
                      "type": "integer",
                      "format": "int64",
                      "minimum": 0
                    },
                    "reason": {
                      "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nThe value should be a CamelCase string.",
                      "type": "string"
                    },
                    "severity": {
                      "description": "Severity with which to treat failures of this type of condition.\nWhen this is not specified, it defaults to Error.",
                      "type": "string"
                    },
                    "status": {
                      "description": "status of the condition, one of True, False, Unknown.",
                      "type": "string",
                      "enum": [
                        "True",
                        "False",
                        "Unknown"
                      ]
                    },
                    "type": {
                      "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                      "type": "string",
                      "maxLength": 316,
                      "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
                    }
                  }
                }
              },
              "errorMessage": {
                "type": "string"
              },
              "phase": {
                "description": "Phase describes the Phase of DSCInitializationStatus\nThis is used by OLM UI to provide status information to the user",
                "type": "string"
              },
              "relatedObjects": {
                "description": "RelatedObjects is a list of objects created and maintained by this operator.\nObject references will be added to this list after they have been created AND found in the cluster",
                "type": "array",
                "items": {
                  "description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
                  "type": "object",
                  "properties": {
                    "apiVersion": {
                      "description": "API version of the referent.",
                      "type": "string"
                    },
                    "fieldPath": {
                      "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                      "type": "string"
                    },
                    "resourceVersion": {
                      "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "type": "string"
                    },
                    "uid": {
                      "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                      "type": "string"
                    }
                  },
                  "x-kubernetes-map-type": "atomic"
                }
              },
              "release": {
                "description": "Version and release type",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "version": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-kubernetes-group-version-kind": [
          {
            "group": "dscinitialization.opendatahub.io",
            "kind": "DSCInitialization",
            "version": "v1"
          }
        ],
        "x-kubernetes-selectable-fields": []
      }
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
      "type": "object",
      "properties": {
        "continue": {
          "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",
          "type": "string"
        },
        "remainingItemCount": {
          "description": "remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.",
          "type": "integer",
          "format": "int64"
        },
        "resourceVersion": {
          "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type": "string"
        },
        "selfLink": {
          "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
          "type": "string"
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "dscinitialization.opendatahub.io",
      "kind": "DSCInitializationList",
      "version": "v1"
    }
  ],
  "x-kubernetes-selectable-fields": [],
  "$schema": "http://json-schema.org/schema#"
}