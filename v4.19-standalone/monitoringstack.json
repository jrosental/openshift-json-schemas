{
  "description": "MonitoringStack is the Schema for the monitoringstacks API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "creationTimestamp": {
          "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
          "type": "string",
          "format": "date-time"
        },
        "deletionGracePeriodSeconds": {
          "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
          "type": "integer",
          "format": "int64"
        },
        "deletionTimestamp": {
          "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
          "type": "string",
          "format": "date-time"
        },
        "finalizers": {
          "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-list-type": "set",
          "x-kubernetes-patch-strategy": "merge"
        },
        "generateName": {
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
          "type": "string"
        },
        "generation": {
          "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
          "type": "integer",
          "format": "int64"
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "managedFields": {
          "description": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
          "type": "array",
          "items": {
            "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
            "type": "object",
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
                "type": "string"
              },
              "fieldsType": {
                "description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
                "type": "string"
              },
              "fieldsV1": {
                "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff",
                "type": "object"
              },
              "manager": {
                "description": "Manager is an identifier of the workflow managing these fields.",
                "type": "string"
              },
              "operation": {
                "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
                "type": "string"
              },
              "subresource": {
                "description": "Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.",
                "type": "string"
              },
              "time": {
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "x-kubernetes-list-type": "atomic"
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces",
          "type": "string"
        },
        "ownerReferences": {
          "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
          "type": "array",
          "items": {
            "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
            "type": "object",
            "required": [
              "apiVersion",
              "kind",
              "name",
              "uid"
            ],
            "properties": {
              "apiVersion": {
                "description": "API version of the referent.",
                "type": "string"
              },
              "blockOwnerDeletion": {
                "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
                "type": "boolean"
              },
              "controller": {
                "description": "If true, this reference points to the managing controller.",
                "type": "boolean"
              },
              "kind": {
                "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "name": {
                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
                "type": "string"
              },
              "uid": {
                "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
                "type": "string"
              }
            },
            "x-kubernetes-map-type": "atomic"
          },
          "x-kubernetes-list-map-keys": [
            "uid"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "uid",
          "x-kubernetes-patch-strategy": "merge"
        },
        "resourceVersion": {
          "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type": "string"
        },
        "selfLink": {
          "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
          "type": "string"
        },
        "uid": {
          "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
          "type": "string"
        }
      }
    },
    "spec": {
      "description": "MonitoringStackSpec is the specification for desired Monitoring Stack",
      "type": "object",
      "properties": {
        "alertmanagerConfig": {
          "description": "Define Alertmanager config",
          "type": "object",
          "properties": {
            "disabled": {
              "description": "Disables the deployment of Alertmanager.",
              "type": "boolean"
            },
            "webTLSConfig": {
              "description": "Configure TLS options for the Alertmanager web server.",
              "type": "object",
              "required": [
                "certificate",
                "certificateAuthority",
                "privateKey"
              ],
              "properties": {
                "certificate": {
                  "description": "Reference to the TLS public certificate for the web server.",
                  "type": "object",
                  "required": [
                    "key",
                    "name"
                  ],
                  "properties": {
                    "key": {
                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                      "type": "string",
                      "minLength": 1
                    },
                    "name": {
                      "description": "The name of the secret in the object's namespace to select from.",
                      "type": "string",
                      "minLength": 1
                    }
                  }
                },
                "certificateAuthority": {
                  "description": "Reference to the root Certificate Authority used to verify the web server's certificate.",
                  "type": "object",
                  "required": [
                    "key",
                    "name"
                  ],
                  "properties": {
                    "key": {
                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                      "type": "string",
                      "minLength": 1
                    },
                    "name": {
                      "description": "The name of the secret in the object's namespace to select from.",
                      "type": "string",
                      "minLength": 1
                    }
                  }
                },
                "privateKey": {
                  "description": "Reference to the TLS private key for the web server.",
                  "type": "object",
                  "required": [
                    "key",
                    "name"
                  ],
                  "properties": {
                    "key": {
                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                      "type": "string",
                      "minLength": 1
                    },
                    "name": {
                      "description": "The name of the secret in the object's namespace to select from.",
                      "type": "string",
                      "minLength": 1
                    }
                  }
                }
              }
            }
          }
        },
        "logLevel": {
          "description": "Loglevel set log levels of configured components",
          "type": "string",
          "enum": [
            "debug",
            "info",
            "warn",
            "error"
          ]
        },
        "namespaceSelector": {
          "description": "Namespace selector for Monitoring Stack Resources.\nTo monitor everything, set to empty map selector. E.g. namespaceSelector: {}.\nTo monitor resources in the namespace where Monitoring Stack was created in, set to null. E.g. namespaceSelector:.",
          "type": "object",
          "properties": {
            "matchExpressions": {
              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
              "type": "array",
              "items": {
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                "type": "object",
                "required": [
                  "key",
                  "operator"
                ],
                "properties": {
                  "key": {
                    "description": "key is the label key that the selector applies to.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                    "type": "string"
                  },
                  "values": {
                    "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "atomic"
                  }
                }
              },
              "x-kubernetes-list-type": "atomic"
            },
            "matchLabels": {
              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "x-kubernetes-map-type": "atomic"
        },
        "nodeSelector": {
          "description": "Define node selector for Monitoring Stack Pods.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "prometheusConfig": {
          "description": "Define prometheus config",
          "type": "object",
          "properties": {
            "enableOtlpHttpReceiver": {
              "description": "Enable Prometheus to accept OpenTelemetry Metrics via the otlp/http protocol.\nDefaults to the value of `false`.\nThe resulting endpoint is /api/v1/otlp/v1/metrics.",
              "type": "boolean"
            },
            "enableRemoteWriteReceiver": {
              "description": "Enable Prometheus to be used as a receiver for the Prometheus remote write protocol. Defaults to the value of `false`.",
              "type": "boolean"
            },
            "externalLabels": {
              "description": "Define ExternalLabels for prometheus",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "persistentVolumeClaim": {
              "description": "Define persistent volume claim for prometheus",
              "type": "object",
              "properties": {
                "accessModes": {
                  "description": "accessModes contains the desired access modes the volume should have.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "atomic"
                },
                "dataSource": {
                  "description": "dataSource field can be used to specify either:\n* An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)\n* An existing PVC (PersistentVolumeClaim)\nIf the provisioner or an external controller can support the specified data source,\nit will create a new volume based on the contents of the specified data source.\nWhen the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,\nand dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.\nIf the namespace is specified, then dataSourceRef will not be copied to dataSource.",
                  "type": "object",
                  "required": [
                    "kind",
                    "name"
                  ],
                  "properties": {
                    "apiGroup": {
                      "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Kind is the type of resource being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of resource being referenced",
                      "type": "string"
                    }
                  },
                  "x-kubernetes-map-type": "atomic"
                },
                "dataSourceRef": {
                  "description": "dataSourceRef specifies the object from which to populate the volume with data, if a non-empty\nvolume is desired. This may be any object from a non-empty API group (non\ncore object) or a PersistentVolumeClaim object.\nWhen this field is specified, volume binding will only succeed if the type of\nthe specified object matches some installed volume populator or dynamic\nprovisioner.\nThis field will replace the functionality of the dataSource field and as such\nif both fields are non-empty, they must have the same value. For backwards\ncompatibility, when namespace isn't specified in dataSourceRef,\nboth fields (dataSource and dataSourceRef) will be set to the same\nvalue automatically if one of them is empty and the other is non-empty.\nWhen namespace is specified in dataSourceRef,\ndataSource isn't set to the same value and must be empty.\nThere are three important differences between dataSource and dataSourceRef:\n* While dataSource only allows two specific types of objects, dataSourceRef\n  allows any non-core object, as well as PersistentVolumeClaim objects.\n* While dataSource ignores disallowed values (dropping them), dataSourceRef\n  preserves all values, and generates an error if a disallowed value is\n  specified.\n* While dataSource only allows local objects, dataSourceRef allows objects\n  in any namespaces.\n(Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.\n(Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.",
                  "type": "object",
                  "required": [
                    "kind",
                    "name"
                  ],
                  "properties": {
                    "apiGroup": {
                      "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Kind is the type of resource being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of resource being referenced",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace is the namespace of resource being referenced\nNote that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.\n(Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.",
                      "type": "string"
                    }
                  }
                },
                "resources": {
                  "description": "resources represents the minimum resources the volume should have.\nIf RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements\nthat are lower than previous value but must still be higher than capacity recorded in the\nstatus field of the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": "object",
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "requests": {
                      "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": "object",
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    }
                  }
                },
                "selector": {
                  "description": "selector is a label query over volumes to consider for binding.",
                  "type": "object",
                  "properties": {
                    "matchExpressions": {
                      "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                      "type": "array",
                      "items": {
                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                        "type": "object",
                        "required": [
                          "key",
                          "operator"
                        ],
                        "properties": {
                          "key": {
                            "description": "key is the label key that the selector applies to.",
                            "type": "string"
                          },
                          "operator": {
                            "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                            "type": "string"
                          },
                          "values": {
                            "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "atomic"
                          }
                        }
                      },
                      "x-kubernetes-list-type": "atomic"
                    },
                    "matchLabels": {
                      "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "x-kubernetes-map-type": "atomic"
                },
                "storageClassName": {
                  "description": "storageClassName is the name of the StorageClass required by the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1",
                  "type": "string"
                },
                "volumeAttributesClassName": {
                  "description": "volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.\nIf specified, the CSI driver will create or update the volume with the attributes defined\nin the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,\nit can be changed after the claim is created. An empty string value means that no VolumeAttributesClass\nwill be applied to the claim but it's not allowed to reset this field to empty string once it is set.\nIf unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass\nwill be set by the persistentvolume controller if it exists.\nIf the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be\nset to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource\nexists.\nMore info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/\n(Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).",
                  "type": "string"
                },
                "volumeMode": {
                  "description": "volumeMode defines what type of volume is required by the claim.\nValue of Filesystem is implied when not included in claim spec.",
                  "type": "string"
                },
                "volumeName": {
                  "description": "volumeName is the binding reference to the PersistentVolume backing this claim.",
                  "type": "string"
                }
              }
            },
            "remoteWrite": {
              "description": "Define remote write for prometheus",
              "type": "array",
              "items": {
                "description": "RemoteWriteSpec defines the configuration to write samples from Prometheus\nto a remote endpoint.",
                "type": "object",
                "required": [
                  "url"
                ],
                "properties": {
                  "authorization": {
                    "description": "Authorization section for the URL.\n\nIt requires Prometheus >= v2.26.0.\n\nCannot be set at the same time as `sigv4`, `basicAuth`, `oauth2`, or `azureAd`.",
                    "type": "object",
                    "properties": {
                      "credentials": {
                        "description": "Selects a key of a Secret in the namespace that contains the credentials for authentication.",
                        "type": "object",
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": "string"
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": "boolean"
                          }
                        },
                        "x-kubernetes-map-type": "atomic"
                      },
                      "credentialsFile": {
                        "description": "File to read a secret from, mutually exclusive with `credentials`.",
                        "type": "string"
                      },
                      "type": {
                        "description": "Defines the authentication type. The value is case-insensitive.\n\n\"Basic\" is not a supported value.\n\nDefault: \"Bearer\"",
                        "type": "string"
                      }
                    }
                  },
                  "azureAd": {
                    "description": "AzureAD for the URL.\n\nIt requires Prometheus >= v2.45.0.\n\nCannot be set at the same time as `authorization`, `basicAuth`, `oauth2`, or `sigv4`.",
                    "type": "object",
                    "properties": {
                      "cloud": {
                        "description": "The Azure Cloud. Options are 'AzurePublic', 'AzureChina', or 'AzureGovernment'.",
                        "type": "string",
                        "enum": [
                          "AzureChina",
                          "AzureGovernment",
                          "AzurePublic"
                        ]
                      },
                      "managedIdentity": {
                        "description": "ManagedIdentity defines the Azure User-assigned Managed identity.\nCannot be set at the same time as `oauth` or `sdk`.",
                        "type": "object",
                        "required": [
                          "clientId"
                        ],
                        "properties": {
                          "clientId": {
                            "description": "The client id",
                            "type": "string"
                          }
                        }
                      },
                      "oauth": {
                        "description": "OAuth defines the oauth config that is being used to authenticate.\nCannot be set at the same time as `managedIdentity` or `sdk`.\n\nIt requires Prometheus >= v2.48.0.",
                        "type": "object",
                        "required": [
                          "clientId",
                          "clientSecret",
                          "tenantId"
                        ],
                        "properties": {
                          "clientId": {
                            "description": "`clientID` is the clientId of the Azure Active Directory application that is being used to authenticate.",
                            "type": "string",
                            "minLength": 1
                          },
                          "clientSecret": {
                            "description": "`clientSecret` specifies a key of a Secret containing the client secret of the Azure Active Directory application that is being used to authenticate.",
                            "type": "object",
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "description": "The key of the secret to select from.  Must be a valid secret key.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string"
                              },
                              "optional": {
                                "description": "Specify whether the Secret or its key must be defined",
                                "type": "boolean"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "tenantId": {
                            "description": "`tenantId` is the tenant ID of the Azure Active Directory application that is being used to authenticate.",
                            "type": "string",
                            "minLength": 1,
                            "pattern": "^[0-9a-zA-Z-.]+$"
                          }
                        }
                      },
                      "sdk": {
                        "description": "SDK defines the Azure SDK config that is being used to authenticate.\nSee https://learn.microsoft.com/en-us/azure/developer/go/azure-sdk-authentication\nCannot be set at the same time as `oauth` or `managedIdentity`.\n\nIt requires Prometheus >= 2.52.0.",
                        "type": "object",
                        "properties": {
                          "tenantId": {
                            "description": "`tenantId` is the tenant ID of the azure active directory application that is being used to authenticate.",
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z-.]+$"
                          }
                        }
                      }
                    }
                  },
                  "basicAuth": {
                    "description": "BasicAuth configuration for the URL.\n\nCannot be set at the same time as `sigv4`, `authorization`, `oauth2`, or `azureAd`.",
                    "type": "object",
                    "properties": {
                      "password": {
                        "description": "`password` specifies a key of a Secret containing the password for\nauthentication.",
                        "type": "object",
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": "string"
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": "boolean"
                          }
                        },
                        "x-kubernetes-map-type": "atomic"
                      },
                      "username": {
                        "description": "`username` specifies a key of a Secret containing the username for\nauthentication.",
                        "type": "object",
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": "string"
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": "boolean"
                          }
                        },
                        "x-kubernetes-map-type": "atomic"
                      }
                    }
                  },
                  "bearerToken": {
                    "description": "*Warning: this field shouldn't be used because the token value appears\nin clear-text. Prefer using `authorization`.*\n\nDeprecated: this will be removed in a future release.",
                    "type": "string"
                  },
                  "bearerTokenFile": {
                    "description": "File from which to read bearer token for the URL.\n\nDeprecated: this will be removed in a future release. Prefer using `authorization`.",
                    "type": "string"
                  },
                  "enableHTTP2": {
                    "description": "Whether to enable HTTP2.",
                    "type": "boolean"
                  },
                  "followRedirects": {
                    "description": "Configure whether HTTP requests follow HTTP 3xx redirects.\n\nIt requires Prometheus >= v2.26.0.",
                    "type": "boolean"
                  },
                  "headers": {
                    "description": "Custom HTTP headers to be sent along with each remote write request.\nBe aware that headers that are set by Prometheus itself can't be overwritten.\n\nIt requires Prometheus >= v2.25.0.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "metadataConfig": {
                    "description": "MetadataConfig configures the sending of series metadata to the remote storage.",
                    "type": "object",
                    "properties": {
                      "send": {
                        "description": "Defines whether metric metadata is sent to the remote storage or not.",
                        "type": "boolean"
                      },
                      "sendInterval": {
                        "description": "Defines how frequently metric metadata is sent to the remote storage.",
                        "type": "string",
                        "pattern": "^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"
                      }
                    }
                  },
                  "name": {
                    "description": "The name of the remote write queue, it must be unique if specified. The\nname is used in metrics and logging in order to differentiate queues.\n\nIt requires Prometheus >= v2.15.0.",
                    "type": "string"
                  },
                  "noProxy": {
                    "description": "`noProxy` is a comma-separated string that can contain IPs, CIDR notation, domain names\nthat should be excluded from proxying. IP and domain names can\ncontain port numbers.\n\nIt requires Prometheus >= v2.43.0 or Alertmanager >= 0.25.0.",
                    "type": "string"
                  },
                  "oauth2": {
                    "description": "OAuth2 configuration for the URL.\n\nIt requires Prometheus >= v2.27.0.\n\nCannot be set at the same time as `sigv4`, `authorization`, `basicAuth`, or `azureAd`.",
                    "type": "object",
                    "required": [
                      "clientId",
                      "clientSecret",
                      "tokenUrl"
                    ],
                    "properties": {
                      "clientId": {
                        "description": "`clientId` specifies a key of a Secret or ConfigMap containing the\nOAuth2 client's ID.",
                        "type": "object",
                        "properties": {
                          "configMap": {
                            "description": "ConfigMap containing data to use for the targets.",
                            "type": "object",
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "description": "The key to select.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string"
                              },
                              "optional": {
                                "description": "Specify whether the ConfigMap or its key must be defined",
                                "type": "boolean"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "secret": {
                            "description": "Secret containing data to use for the targets.",
                            "type": "object",
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "description": "The key of the secret to select from.  Must be a valid secret key.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string"
                              },
                              "optional": {
                                "description": "Specify whether the Secret or its key must be defined",
                                "type": "boolean"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          }
                        }
                      },
                      "clientSecret": {
                        "description": "`clientSecret` specifies a key of a Secret containing the OAuth2\nclient's secret.",
                        "type": "object",
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": "string"
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": "boolean"
                          }
                        },
                        "x-kubernetes-map-type": "atomic"
                      },
                      "endpointParams": {
                        "description": "`endpointParams` configures the HTTP parameters to append to the token\nURL.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "noProxy": {
                        "description": "`noProxy` is a comma-separated string that can contain IPs, CIDR notation, domain names\nthat should be excluded from proxying. IP and domain names can\ncontain port numbers.\n\nIt requires Prometheus >= v2.43.0 or Alertmanager >= 0.25.0.",
                        "type": "string"
                      },
                      "proxyConnectHeader": {
                        "description": "ProxyConnectHeader optionally specifies headers to send to\nproxies during CONNECT requests.\n\nIt requires Prometheus >= v2.43.0 or Alertmanager >= 0.25.0.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "array",
                          "items": {
                            "description": "SecretKeySelector selects a key of a Secret.",
                            "type": "object",
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "description": "The key of the secret to select from.  Must be a valid secret key.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string"
                              },
                              "optional": {
                                "description": "Specify whether the Secret or its key must be defined",
                                "type": "boolean"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          }
                        },
                        "x-kubernetes-map-type": "atomic"
                      },
                      "proxyFromEnvironment": {
                        "description": "Whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).\n\nIt requires Prometheus >= v2.43.0 or Alertmanager >= 0.25.0.",
                        "type": "boolean"
                      },
                      "proxyUrl": {
                        "description": "`proxyURL` defines the HTTP proxy server to use.",
                        "type": "string",
                        "pattern": "^http(s)?://.+$"
                      },
                      "scopes": {
                        "description": "`scopes` defines the OAuth2 scopes used for the token request.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "tlsConfig": {
                        "description": "TLS configuration to use when connecting to the OAuth2 server.\nIt requires Prometheus >= v2.43.0.",
                        "type": "object",
                        "properties": {
                          "ca": {
                            "description": "Certificate authority used when verifying server certificates.",
                            "type": "object",
                            "properties": {
                              "configMap": {
                                "description": "ConfigMap containing data to use for the targets.",
                                "type": "object",
                                "required": [
                                  "key"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "The key to select.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                    "type": "string"
                                  },
                                  "optional": {
                                    "description": "Specify whether the ConfigMap or its key must be defined",
                                    "type": "boolean"
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              },
                              "secret": {
                                "description": "Secret containing data to use for the targets.",
                                "type": "object",
                                "required": [
                                  "key"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "The key of the secret to select from.  Must be a valid secret key.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                    "type": "string"
                                  },
                                  "optional": {
                                    "description": "Specify whether the Secret or its key must be defined",
                                    "type": "boolean"
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              }
                            }
                          },
                          "cert": {
                            "description": "Client certificate to present when doing client-authentication.",
                            "type": "object",
                            "properties": {
                              "configMap": {
                                "description": "ConfigMap containing data to use for the targets.",
                                "type": "object",
                                "required": [
                                  "key"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "The key to select.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                    "type": "string"
                                  },
                                  "optional": {
                                    "description": "Specify whether the ConfigMap or its key must be defined",
                                    "type": "boolean"
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              },
                              "secret": {
                                "description": "Secret containing data to use for the targets.",
                                "type": "object",
                                "required": [
                                  "key"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "The key of the secret to select from.  Must be a valid secret key.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                    "type": "string"
                                  },
                                  "optional": {
                                    "description": "Specify whether the Secret or its key must be defined",
                                    "type": "boolean"
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              }
                            }
                          },
                          "insecureSkipVerify": {
                            "description": "Disable target certificate validation.",
                            "type": "boolean"
                          },
                          "keySecret": {
                            "description": "Secret containing the client key file for the targets.",
                            "type": "object",
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "description": "The key of the secret to select from.  Must be a valid secret key.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string"
                              },
                              "optional": {
                                "description": "Specify whether the Secret or its key must be defined",
                                "type": "boolean"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "maxVersion": {
                            "description": "Maximum acceptable TLS version.\n\nIt requires Prometheus >= v2.41.0.",
                            "type": "string",
                            "enum": [
                              "TLS10",
                              "TLS11",
                              "TLS12",
                              "TLS13"
                            ]
                          },
                          "minVersion": {
                            "description": "Minimum acceptable TLS version.\n\nIt requires Prometheus >= v2.35.0.",
                            "type": "string",
                            "enum": [
                              "TLS10",
                              "TLS11",
                              "TLS12",
                              "TLS13"
                            ]
                          },
                          "serverName": {
                            "description": "Used to verify the hostname for the targets.",
                            "type": "string"
                          }
                        }
                      },
                      "tokenUrl": {
                        "description": "`tokenURL` configures the URL to fetch the token from.",
                        "type": "string",
                        "minLength": 1
                      }
                    }
                  },
                  "proxyConnectHeader": {
                    "description": "ProxyConnectHeader optionally specifies headers to send to\nproxies during CONNECT requests.\n\nIt requires Prometheus >= v2.43.0 or Alertmanager >= 0.25.0.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "description": "SecretKeySelector selects a key of a Secret.",
                        "type": "object",
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": "string"
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": "boolean"
                          }
                        },
                        "x-kubernetes-map-type": "atomic"
                      }
                    },
                    "x-kubernetes-map-type": "atomic"
                  },
                  "proxyFromEnvironment": {
                    "description": "Whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).\n\nIt requires Prometheus >= v2.43.0 or Alertmanager >= 0.25.0.",
                    "type": "boolean"
                  },
                  "proxyUrl": {
                    "description": "`proxyURL` defines the HTTP proxy server to use.",
                    "type": "string",
                    "pattern": "^http(s)?://.+$"
                  },
                  "queueConfig": {
                    "description": "QueueConfig allows tuning of the remote write queue parameters.",
                    "type": "object",
                    "properties": {
                      "batchSendDeadline": {
                        "description": "BatchSendDeadline is the maximum time a sample will wait in buffer.",
                        "type": "string",
                        "pattern": "^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"
                      },
                      "capacity": {
                        "description": "Capacity is the number of samples to buffer per shard before we start\ndropping them.",
                        "type": "integer"
                      },
                      "maxBackoff": {
                        "description": "MaxBackoff is the maximum retry delay.",
                        "type": "string",
                        "pattern": "^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"
                      },
                      "maxRetries": {
                        "description": "MaxRetries is the maximum number of times to retry a batch on recoverable errors.",
                        "type": "integer"
                      },
                      "maxSamplesPerSend": {
                        "description": "MaxSamplesPerSend is the maximum number of samples per send.",
                        "type": "integer"
                      },
                      "maxShards": {
                        "description": "MaxShards is the maximum number of shards, i.e. amount of concurrency.",
                        "type": "integer"
                      },
                      "minBackoff": {
                        "description": "MinBackoff is the initial retry delay. Gets doubled for every retry.",
                        "type": "string",
                        "pattern": "^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"
                      },
                      "minShards": {
                        "description": "MinShards is the minimum number of shards, i.e. amount of concurrency.",
                        "type": "integer"
                      },
                      "retryOnRateLimit": {
                        "description": "Retry upon receiving a 429 status code from the remote-write storage.\n\nThis is an *experimental feature*, it may change in any upcoming release\nin a breaking way.",
                        "type": "boolean"
                      },
                      "sampleAgeLimit": {
                        "description": "SampleAgeLimit drops samples older than the limit.\nIt requires Prometheus >= v2.50.0.",
                        "type": "string",
                        "pattern": "^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"
                      }
                    }
                  },
                  "remoteTimeout": {
                    "description": "Timeout for requests to the remote write endpoint.",
                    "type": "string",
                    "pattern": "^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"
                  },
                  "sendExemplars": {
                    "description": "Enables sending of exemplars over remote write. Note that\nexemplar-storage itself must be enabled using the `spec.enableFeature`\noption for exemplars to be scraped in the first place.\n\nIt requires Prometheus >= v2.27.0.",
                    "type": "boolean"
                  },
                  "sendNativeHistograms": {
                    "description": "Enables sending of native histograms, also known as sparse histograms\nover remote write.\n\nIt requires Prometheus >= v2.40.0.",
                    "type": "boolean"
                  },
                  "sigv4": {
                    "description": "Sigv4 allows to configures AWS's Signature Verification 4 for the URL.\n\nIt requires Prometheus >= v2.26.0.\n\nCannot be set at the same time as `authorization`, `basicAuth`, `oauth2`, or `azureAd`.",
                    "type": "object",
                    "properties": {
                      "accessKey": {
                        "description": "AccessKey is the AWS API key. If not specified, the environment variable\n`AWS_ACCESS_KEY_ID` is used.",
                        "type": "object",
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": "string"
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": "boolean"
                          }
                        },
                        "x-kubernetes-map-type": "atomic"
                      },
                      "profile": {
                        "description": "Profile is the named AWS profile used to authenticate.",
                        "type": "string"
                      },
                      "region": {
                        "description": "Region is the AWS region. If blank, the region from the default credentials chain used.",
                        "type": "string"
                      },
                      "roleArn": {
                        "description": "RoleArn is the named AWS profile used to authenticate.",
                        "type": "string"
                      },
                      "secretKey": {
                        "description": "SecretKey is the AWS API secret. If not specified, the environment\nvariable `AWS_SECRET_ACCESS_KEY` is used.",
                        "type": "object",
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": "string"
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": "boolean"
                          }
                        },
                        "x-kubernetes-map-type": "atomic"
                      }
                    }
                  },
                  "tlsConfig": {
                    "description": "TLS Config to use for the URL.",
                    "type": "object",
                    "properties": {
                      "ca": {
                        "description": "Certificate authority used when verifying server certificates.",
                        "type": "object",
                        "properties": {
                          "configMap": {
                            "description": "ConfigMap containing data to use for the targets.",
                            "type": "object",
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "description": "The key to select.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string"
                              },
                              "optional": {
                                "description": "Specify whether the ConfigMap or its key must be defined",
                                "type": "boolean"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "secret": {
                            "description": "Secret containing data to use for the targets.",
                            "type": "object",
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "description": "The key of the secret to select from.  Must be a valid secret key.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string"
                              },
                              "optional": {
                                "description": "Specify whether the Secret or its key must be defined",
                                "type": "boolean"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          }
                        }
                      },
                      "caFile": {
                        "description": "Path to the CA cert in the Prometheus container to use for the targets.",
                        "type": "string"
                      },
                      "cert": {
                        "description": "Client certificate to present when doing client-authentication.",
                        "type": "object",
                        "properties": {
                          "configMap": {
                            "description": "ConfigMap containing data to use for the targets.",
                            "type": "object",
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "description": "The key to select.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string"
                              },
                              "optional": {
                                "description": "Specify whether the ConfigMap or its key must be defined",
                                "type": "boolean"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "secret": {
                            "description": "Secret containing data to use for the targets.",
                            "type": "object",
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "description": "The key of the secret to select from.  Must be a valid secret key.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string"
                              },
                              "optional": {
                                "description": "Specify whether the Secret or its key must be defined",
                                "type": "boolean"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          }
                        }
                      },
                      "certFile": {
                        "description": "Path to the client cert file in the Prometheus container for the targets.",
                        "type": "string"
                      },
                      "insecureSkipVerify": {
                        "description": "Disable target certificate validation.",
                        "type": "boolean"
                      },
                      "keyFile": {
                        "description": "Path to the client key file in the Prometheus container for the targets.",
                        "type": "string"
                      },
                      "keySecret": {
                        "description": "Secret containing the client key file for the targets.",
                        "type": "object",
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": "string"
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": "boolean"
                          }
                        },
                        "x-kubernetes-map-type": "atomic"
                      },
                      "maxVersion": {
                        "description": "Maximum acceptable TLS version.\n\nIt requires Prometheus >= v2.41.0.",
                        "type": "string",
                        "enum": [
                          "TLS10",
                          "TLS11",
                          "TLS12",
                          "TLS13"
                        ]
                      },
                      "minVersion": {
                        "description": "Minimum acceptable TLS version.\n\nIt requires Prometheus >= v2.35.0.",
                        "type": "string",
                        "enum": [
                          "TLS10",
                          "TLS11",
                          "TLS12",
                          "TLS13"
                        ]
                      },
                      "serverName": {
                        "description": "Used to verify the hostname for the targets.",
                        "type": "string"
                      }
                    }
                  },
                  "url": {
                    "description": "The URL of the endpoint to send samples to.",
                    "type": "string"
                  },
                  "writeRelabelConfigs": {
                    "description": "The list of remote write relabel configurations.",
                    "type": "array",
                    "items": {
                      "description": "RelabelConfig allows dynamic rewriting of the label set for targets, alerts,\nscraped samples and remote write samples.\n\nMore info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config",
                      "type": "object",
                      "properties": {
                        "action": {
                          "description": "Action to perform based on the regex matching.\n\n`Uppercase` and `Lowercase` actions require Prometheus >= v2.36.0.\n`DropEqual` and `KeepEqual` actions require Prometheus >= v2.41.0.\n\nDefault: \"Replace\"",
                          "type": "string",
                          "enum": [
                            "replace",
                            "Replace",
                            "keep",
                            "Keep",
                            "drop",
                            "Drop",
                            "hashmod",
                            "HashMod",
                            "labelmap",
                            "LabelMap",
                            "labeldrop",
                            "LabelDrop",
                            "labelkeep",
                            "LabelKeep",
                            "lowercase",
                            "Lowercase",
                            "uppercase",
                            "Uppercase",
                            "keepequal",
                            "KeepEqual",
                            "dropequal",
                            "DropEqual"
                          ]
                        },
                        "modulus": {
                          "description": "Modulus to take of the hash of the source label values.\n\nOnly applicable when the action is `HashMod`.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "regex": {
                          "description": "Regular expression against which the extracted value is matched.",
                          "type": "string"
                        },
                        "replacement": {
                          "description": "Replacement value against which a Replace action is performed if the\nregular expression matches.\n\nRegex capture groups are available.",
                          "type": "string"
                        },
                        "separator": {
                          "description": "Separator is the string between concatenated SourceLabels.",
                          "type": "string"
                        },
                        "sourceLabels": {
                          "description": "The source labels select values from existing labels. Their content is\nconcatenated using the configured Separator and matched against the\nconfigured regular expression.",
                          "type": "array",
                          "items": {
                            "description": "LabelName is a valid Prometheus label name which may only contain ASCII\nletters, numbers, as well as underscores.",
                            "type": "string",
                            "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$"
                          }
                        },
                        "targetLabel": {
                          "description": "Label to which the resulting string is written in a replacement.\n\nIt is mandatory for `Replace`, `HashMod`, `Lowercase`, `Uppercase`,\n`KeepEqual` and `DropEqual` actions.\n\nRegex capture groups are available.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "replicas": {
              "description": "Number of replicas/pods to deploy for a Prometheus deployment.",
              "type": "integer",
              "format": "int32",
              "minimum": 0
            },
            "scrapeInterval": {
              "description": "Default interval between scrapes.",
              "type": "string",
              "pattern": "^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"
            },
            "webTLSConfig": {
              "description": "Configure TLS options for the Prometheus web server.",
              "type": "object",
              "required": [
                "certificate",
                "certificateAuthority",
                "privateKey"
              ],
              "properties": {
                "certificate": {
                  "description": "Reference to the TLS public certificate for the web server.",
                  "type": "object",
                  "required": [
                    "key",
                    "name"
                  ],
                  "properties": {
                    "key": {
                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                      "type": "string",
                      "minLength": 1
                    },
                    "name": {
                      "description": "The name of the secret in the object's namespace to select from.",
                      "type": "string",
                      "minLength": 1
                    }
                  }
                },
                "certificateAuthority": {
                  "description": "Reference to the root Certificate Authority used to verify the web server's certificate.",
                  "type": "object",
                  "required": [
                    "key",
                    "name"
                  ],
                  "properties": {
                    "key": {
                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                      "type": "string",
                      "minLength": 1
                    },
                    "name": {
                      "description": "The name of the secret in the object's namespace to select from.",
                      "type": "string",
                      "minLength": 1
                    }
                  }
                },
                "privateKey": {
                  "description": "Reference to the TLS private key for the web server.",
                  "type": "object",
                  "required": [
                    "key",
                    "name"
                  ],
                  "properties": {
                    "key": {
                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                      "type": "string",
                      "minLength": 1
                    },
                    "name": {
                      "description": "The name of the secret in the object's namespace to select from.",
                      "type": "string",
                      "minLength": 1
                    }
                  }
                }
              }
            }
          }
        },
        "resourceSelector": {
          "description": "Label selector for Monitoring Stack Resources.\nTo monitor everything, set to empty map selector. E.g. resourceSelector: {}.\nTo disable service discovery, set to null. E.g. resourceSelector:.",
          "x-kubernetes-map-type": "atomic"
        },
        "resources": {
          "description": "Define resources requests and limits for Monitoring Stack Pods.",
          "type": "object",
          "properties": {
            "claims": {
              "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
              "type": "array",
              "items": {
                "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                    "type": "string"
                  },
                  "request": {
                    "description": "Request is the name chosen for a request in the referenced claim.\nIf empty, everything from the claim is made available, otherwise\nonly the result of this request.",
                    "type": "string"
                  }
                }
              },
              "x-kubernetes-list-map-keys": [
                "name"
              ],
              "x-kubernetes-list-type": "map"
            },
            "limits": {
              "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
              "type": "object",
              "additionalProperties": {
                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                "x-kubernetes-int-or-string": true
              }
            },
            "requests": {
              "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
              "type": "object",
              "additionalProperties": {
                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                "x-kubernetes-int-or-string": true
              }
            }
          }
        },
        "retention": {
          "description": "Time duration to retain data for. Default is '120h',\nand must match the regular expression `[0-9]+(ms|s|m|h|d|w|y)` (milliseconds seconds minutes hours days weeks years).",
          "type": "string",
          "pattern": "^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"
        },
        "tolerations": {
          "description": "Define tolerations for Monitoring Stack Pods.",
          "type": "array",
          "items": {
            "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>.",
            "type": "object",
            "properties": {
              "effect": {
                "description": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                "type": "string"
              },
              "key": {
                "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                "type": "string"
              },
              "operator": {
                "description": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.",
                "type": "string"
              },
              "tolerationSeconds": {
                "description": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.",
                "type": "integer",
                "format": "int64"
              },
              "value": {
                "description": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "status": {
      "description": "MonitoringStackStatus defines the observed state of MonitoringStack.\nIt should always be reconstructable from the state of the cluster and/or outside world.",
      "type": "object",
      "required": [
        "conditions"
      ],
      "properties": {
        "conditions": {
          "description": "Conditions provide status information about the MonitoringStack",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown",
                  "Degraded"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            }
          },
          "x-kubernetes-list-type": "atomic"
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "monitoring.rhobs",
      "kind": "MonitoringStack",
      "version": "v1alpha1"
    }
  ],
  "x-kubernetes-selectable-fields": [],
  "$schema": "http://json-schema.org/schema#"
}