{
  "description": "TaskList is a list of Task",
  "type": "object",
  "required": [
    "items"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "items": {
      "description": "List of tasks. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
      "type": "array",
      "items": {
        "description": "Task represents a collection of sequential steps that are run as part of a\nPipeline using a set of inputs and producing a set of outputs. Tasks execute\nwhen TaskRuns are created that provide the input parameters and resources and\noutput resources the Task requires.\n\nDeprecated: Please use v1.Task instead.",
        "type": "object",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
            "type": "object",
            "properties": {
              "annotations": {
                "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "creationTimestamp": {
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                "type": "string",
                "format": "date-time"
              },
              "deletionGracePeriodSeconds": {
                "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
                "type": "integer",
                "format": "int64"
              },
              "deletionTimestamp": {
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                "type": "string",
                "format": "date-time"
              },
              "finalizers": {
                "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "x-kubernetes-list-type": "set",
                "x-kubernetes-patch-strategy": "merge"
              },
              "generateName": {
                "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                "type": "string"
              },
              "generation": {
                "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
                "type": "integer",
                "format": "int64"
              },
              "labels": {
                "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "managedFields": {
                "description": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
                "type": "array",
                "items": {
                  "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
                  "type": "object",
                  "properties": {
                    "apiVersion": {
                      "description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
                      "type": "string"
                    },
                    "fieldsType": {
                      "description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
                      "type": "string"
                    },
                    "fieldsV1": {
                      "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff",
                      "type": "object"
                    },
                    "manager": {
                      "description": "Manager is an identifier of the workflow managing these fields.",
                      "type": "string"
                    },
                    "operation": {
                      "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
                      "type": "string"
                    },
                    "subresource": {
                      "description": "Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.",
                      "type": "string"
                    },
                    "time": {
                      "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "x-kubernetes-list-type": "atomic"
              },
              "name": {
                "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
                "type": "string"
              },
              "namespace": {
                "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces",
                "type": "string"
              },
              "ownerReferences": {
                "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
                "type": "array",
                "items": {
                  "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
                  "type": "object",
                  "required": [
                    "apiVersion",
                    "kind",
                    "name",
                    "uid"
                  ],
                  "properties": {
                    "apiVersion": {
                      "description": "API version of the referent.",
                      "type": "string"
                    },
                    "blockOwnerDeletion": {
                      "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
                      "type": "boolean"
                    },
                    "controller": {
                      "description": "If true, this reference points to the managing controller.",
                      "type": "boolean"
                    },
                    "kind": {
                      "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
                      "type": "string"
                    },
                    "uid": {
                      "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
                      "type": "string"
                    }
                  },
                  "x-kubernetes-map-type": "atomic"
                },
                "x-kubernetes-list-map-keys": [
                  "uid"
                ],
                "x-kubernetes-list-type": "map",
                "x-kubernetes-patch-merge-key": "uid",
                "x-kubernetes-patch-strategy": "merge"
              },
              "resourceVersion": {
                "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                "type": "string"
              },
              "selfLink": {
                "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
                "type": "string"
              },
              "uid": {
                "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
                "type": "string"
              }
            }
          },
          "spec": {
            "description": "Spec holds the desired state of the Task from the client",
            "type": "object",
            "properties": {
              "description": {
                "description": "Description is a user-facing description of the task that may be\nused to populate a UI.",
                "type": "string"
              },
              "displayName": {
                "description": "DisplayName is a user-facing name of the task that may be\nused to populate a UI.",
                "type": "string"
              },
              "params": {
                "description": "Params is a list of input parameters required to run the task. Params\nmust be supplied as inputs in TaskRuns unless they declare a default\nvalue.",
                "type": "array",
                "items": {
                  "description": "ParamSpec defines arbitrary parameters needed beyond typed inputs (such as\nresources). Parameter values are provided by users as inputs on a TaskRun\nor PipelineRun.",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "default": {
                      "description": "Default is the value a parameter takes if no input value is supplied. If\ndefault is set, a Task may be executed without a supplied value for the\nparameter.",
                      "x-kubernetes-preserve-unknown-fields": true
                    },
                    "description": {
                      "description": "Description is a user-facing description of the parameter that may be\nused to populate a UI.",
                      "type": "string"
                    },
                    "enum": {
                      "description": "Enum declares a set of allowed param input values for tasks/pipelines that can be validated.\nIf Enum is not set, no input validation is performed for the param.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "name": {
                      "description": "Name declares the name by which a parameter is referenced.",
                      "type": "string"
                    },
                    "properties": {
                      "description": "Properties is the JSON Schema properties to support key-value pairs parameter.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "PropertySpec defines the struct for object keys",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "ParamType indicates the type of an input parameter;\nUsed to distinguish between a single string and an array of strings.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "type": {
                      "description": "Type is the user-specified type of the parameter. The possible types\nare currently \"string\", \"array\" and \"object\", and \"string\" is the default.",
                      "type": "string"
                    }
                  }
                },
                "x-kubernetes-list-type": "atomic"
              },
              "resources": {
                "description": "Resources is a list input and output resource to run the task\nResources are represented in TaskRuns as bindings to instances of\nPipelineResources.\n\nDeprecated: Unused, preserved only for backwards compatibility",
                "type": "object",
                "properties": {
                  "inputs": {
                    "description": "Inputs holds the mapping from the PipelineResources declared in\nDeclaredPipelineResources to the input PipelineResources required by the Task.",
                    "type": "array",
                    "items": {
                      "description": "TaskResource defines an input or output Resource declared as a requirement\nby a Task. The Name field will be used to refer to these Resources within\nthe Task definition, and when provided as an Input, the Name will be the\npath to the volume mounted containing this Resource as an input (e.g.\nan input Resource named `workspace` will be mounted at `/workspace`).\n\nDeprecated: Unused, preserved only for backwards compatibility",
                      "type": "object",
                      "required": [
                        "name",
                        "type"
                      ],
                      "properties": {
                        "description": {
                          "description": "Description is a user-facing description of the declared resource that may be\nused to populate a UI.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name declares the name by which a resource is referenced in the\ndefinition. Resources may be referenced by name in the definition of a\nTask's steps.",
                          "type": "string"
                        },
                        "optional": {
                          "description": "Optional declares the resource as optional.\nBy default optional is set to false which makes a resource required.\noptional: true - the resource is considered optional\noptional: false - the resource is considered required (equivalent of not specifying it)",
                          "type": "boolean"
                        },
                        "targetPath": {
                          "description": "TargetPath is the path in workspace directory where the resource\nwill be copied.",
                          "type": "string"
                        },
                        "type": {
                          "description": "Type is the type of this resource;",
                          "type": "string"
                        }
                      }
                    },
                    "x-kubernetes-list-type": "atomic"
                  },
                  "outputs": {
                    "description": "Outputs holds the mapping from the PipelineResources declared in\nDeclaredPipelineResources to the input PipelineResources required by the Task.",
                    "type": "array",
                    "items": {
                      "description": "TaskResource defines an input or output Resource declared as a requirement\nby a Task. The Name field will be used to refer to these Resources within\nthe Task definition, and when provided as an Input, the Name will be the\npath to the volume mounted containing this Resource as an input (e.g.\nan input Resource named `workspace` will be mounted at `/workspace`).\n\nDeprecated: Unused, preserved only for backwards compatibility",
                      "type": "object",
                      "required": [
                        "name",
                        "type"
                      ],
                      "properties": {
                        "description": {
                          "description": "Description is a user-facing description of the declared resource that may be\nused to populate a UI.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name declares the name by which a resource is referenced in the\ndefinition. Resources may be referenced by name in the definition of a\nTask's steps.",
                          "type": "string"
                        },
                        "optional": {
                          "description": "Optional declares the resource as optional.\nBy default optional is set to false which makes a resource required.\noptional: true - the resource is considered optional\noptional: false - the resource is considered required (equivalent of not specifying it)",
                          "type": "boolean"
                        },
                        "targetPath": {
                          "description": "TargetPath is the path in workspace directory where the resource\nwill be copied.",
                          "type": "string"
                        },
                        "type": {
                          "description": "Type is the type of this resource;",
                          "type": "string"
                        }
                      }
                    },
                    "x-kubernetes-list-type": "atomic"
                  }
                }
              },
              "results": {
                "description": "Results are values that this Task can output",
                "type": "array",
                "items": {
                  "description": "TaskResult used to describe the results of a task",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "description": {
                      "description": "Description is a human-readable description of the result",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name the given name",
                      "type": "string"
                    },
                    "properties": {
                      "description": "Properties is the JSON Schema properties to support key-value pairs results.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "PropertySpec defines the struct for object keys",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "ParamType indicates the type of an input parameter;\nUsed to distinguish between a single string and an array of strings.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "type": {
                      "description": "Type is the user-specified type of the result. The possible type\nis currently \"string\" and will support \"array\" in following work.",
                      "type": "string"
                    },
                    "value": {
                      "description": "Value the expression used to retrieve the value of the result from an underlying Step.",
                      "x-kubernetes-preserve-unknown-fields": true
                    }
                  }
                },
                "x-kubernetes-list-type": "atomic"
              },
              "sidecars": {
                "description": "Sidecars are run alongside the Task's step containers. They begin before\nthe steps start and end after the steps complete.",
                "type": "array",
                "items": {
                  "description": "Sidecar has nearly the same data structure as Step but does not have the ability to timeout.",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "args": {
                      "description": "Arguments to the entrypoint.\nThe image's CMD is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-kubernetes-list-type": "atomic"
                    },
                    "command": {
                      "description": "Entrypoint array. Not executed within a shell.\nThe image's ENTRYPOINT is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the Sidecar's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-kubernetes-list-type": "atomic"
                    },
                    "env": {
                      "description": "List of environment variables to set in the Sidecar.\nCannot be updated.",
                      "type": "array",
                      "items": {
                        "description": "EnvVar represents an environment variable present in a Container.",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                            "type": "string"
                          },
                          "valueFrom": {
                            "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                            "type": "object",
                            "properties": {
                              "configMapKeyRef": {
                                "description": "Selects a key of a ConfigMap.",
                                "type": "object",
                                "required": [
                                  "key"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "The key to select.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                    "type": "string"
                                  },
                                  "optional": {
                                    "description": "Specify whether the ConfigMap or its key must be defined",
                                    "type": "boolean"
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              },
                              "fieldRef": {
                                "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                "type": "object",
                                "required": [
                                  "fieldPath"
                                ],
                                "properties": {
                                  "apiVersion": {
                                    "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                    "type": "string"
                                  },
                                  "fieldPath": {
                                    "description": "Path of the field to select in the specified API version.",
                                    "type": "string"
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              },
                              "resourceFieldRef": {
                                "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                "type": "object",
                                "required": [
                                  "resource"
                                ],
                                "properties": {
                                  "containerName": {
                                    "description": "Container name: required for volumes, optional for env vars",
                                    "type": "string"
                                  },
                                  "divisor": {
                                    "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                    "x-kubernetes-int-or-string": true
                                  },
                                  "resource": {
                                    "description": "Required: resource to select",
                                    "type": "string"
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              },
                              "secretKeyRef": {
                                "description": "Selects a key of a secret in the pod's namespace",
                                "type": "object",
                                "required": [
                                  "key"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "The key of the secret to select from.  Must be a valid secret key.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                    "type": "string"
                                  },
                                  "optional": {
                                    "description": "Specify whether the Secret or its key must be defined",
                                    "type": "boolean"
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              }
                            }
                          }
                        }
                      },
                      "x-kubernetes-list-type": "atomic"
                    },
                    "envFrom": {
                      "description": "List of sources to populate environment variables in the Sidecar.\nThe keys defined within a source must be a C_IDENTIFIER. All invalid keys\nwill be reported as an event when the Sidecar is starting. When a key exists in multiple\nsources, the value associated with the last source will take precedence.\nValues defined by an Env with a duplicate key will take precedence.\nCannot be updated.",
                      "type": "array",
                      "items": {
                        "description": "EnvFromSource represents the source of a set of ConfigMaps",
                        "type": "object",
                        "properties": {
                          "configMapRef": {
                            "description": "The ConfigMap to select from",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string"
                              },
                              "optional": {
                                "description": "Specify whether the ConfigMap must be defined",
                                "type": "boolean"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "prefix": {
                            "description": "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
                            "type": "string"
                          },
                          "secretRef": {
                            "description": "The Secret to select from",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string"
                              },
                              "optional": {
                                "description": "Specify whether the Secret must be defined",
                                "type": "boolean"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          }
                        }
                      },
                      "x-kubernetes-list-type": "atomic"
                    },
                    "image": {
                      "description": "Image name to be used by the Sidecar.\nMore info: https://kubernetes.io/docs/concepts/containers/images",
                      "type": "string"
                    },
                    "imagePullPolicy": {
                      "description": "Image pull policy.\nOne of Always, Never, IfNotPresent.\nDefaults to Always if :latest tag is specified, or IfNotPresent otherwise.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
                      "type": "string"
                    },
                    "lifecycle": {
                      "description": "Actions that the management system should take in response to Sidecar lifecycle events.\nCannot be updated.",
                      "type": "object",
                      "properties": {
                        "postStart": {
                          "description": "PostStart is called immediately after a container is created. If the handler fails,\nthe container is terminated and restarted according to its restart policy.\nOther management of the container blocks until the hook completes.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
                          "type": "object",
                          "properties": {
                            "exec": {
                              "description": "Exec specifies a command to execute in the container.",
                              "type": "object",
                              "properties": {
                                "command": {
                                  "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                }
                              }
                            },
                            "httpGet": {
                              "description": "HTTPGet specifies an HTTP GET request to perform.",
                              "type": "object",
                              "required": [
                                "port"
                              ],
                              "properties": {
                                "host": {
                                  "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                                  "type": "string"
                                },
                                "httpHeaders": {
                                  "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                  "type": "array",
                                  "items": {
                                    "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                    "type": "object",
                                    "required": [
                                      "name",
                                      "value"
                                    ],
                                    "properties": {
                                      "name": {
                                        "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "The header field value",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "path": {
                                  "description": "Path to access on the HTTP server.",
                                  "type": "string"
                                },
                                "port": {
                                  "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                  "x-kubernetes-int-or-string": true
                                },
                                "scheme": {
                                  "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                                  "type": "string"
                                }
                              }
                            },
                            "sleep": {
                              "description": "Sleep represents a duration that the container should sleep.",
                              "type": "object",
                              "required": [
                                "seconds"
                              ],
                              "properties": {
                                "seconds": {
                                  "description": "Seconds is the number of seconds to sleep.",
                                  "type": "integer",
                                  "format": "int64"
                                }
                              }
                            },
                            "tcpSocket": {
                              "description": "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept\nfor backward compatibility. There is no validation of this field and\nlifecycle hooks will fail at runtime when it is specified.",
                              "type": "object",
                              "required": [
                                "port"
                              ],
                              "properties": {
                                "host": {
                                  "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                  "type": "string"
                                },
                                "port": {
                                  "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                  "x-kubernetes-int-or-string": true
                                }
                              }
                            }
                          }
                        },
                        "preStop": {
                          "description": "PreStop is called immediately before a container is terminated due to an\nAPI request or management event such as liveness/startup probe failure,\npreemption, resource contention, etc. The handler is not called if the\ncontainer crashes or exits. The Pod's termination grace period countdown begins before the\nPreStop hook is executed. Regardless of the outcome of the handler, the\ncontainer will eventually terminate within the Pod's termination grace\nperiod (unless delayed by finalizers). Other management of the container blocks until the hook completes\nor until the termination grace period is reached.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
                          "type": "object",
                          "properties": {
                            "exec": {
                              "description": "Exec specifies a command to execute in the container.",
                              "type": "object",
                              "properties": {
                                "command": {
                                  "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                }
                              }
                            },
                            "httpGet": {
                              "description": "HTTPGet specifies an HTTP GET request to perform.",
                              "type": "object",
                              "required": [
                                "port"
                              ],
                              "properties": {
                                "host": {
                                  "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                                  "type": "string"
                                },
                                "httpHeaders": {
                                  "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                  "type": "array",
                                  "items": {
                                    "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                    "type": "object",
                                    "required": [
                                      "name",
                                      "value"
                                    ],
                                    "properties": {
                                      "name": {
                                        "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "The header field value",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "path": {
                                  "description": "Path to access on the HTTP server.",
                                  "type": "string"
                                },
                                "port": {
                                  "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                  "x-kubernetes-int-or-string": true
                                },
                                "scheme": {
                                  "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                                  "type": "string"
                                }
                              }
                            },
                            "sleep": {
                              "description": "Sleep represents a duration that the container should sleep.",
                              "type": "object",
                              "required": [
                                "seconds"
                              ],
                              "properties": {
                                "seconds": {
                                  "description": "Seconds is the number of seconds to sleep.",
                                  "type": "integer",
                                  "format": "int64"
                                }
                              }
                            },
                            "tcpSocket": {
                              "description": "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept\nfor backward compatibility. There is no validation of this field and\nlifecycle hooks will fail at runtime when it is specified.",
                              "type": "object",
                              "required": [
                                "port"
                              ],
                              "properties": {
                                "host": {
                                  "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                  "type": "string"
                                },
                                "port": {
                                  "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                  "x-kubernetes-int-or-string": true
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "livenessProbe": {
                      "description": "Periodic probe of Sidecar liveness.\nContainer will be restarted if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                      "type": "object",
                      "properties": {
                        "exec": {
                          "description": "Exec specifies a command to execute in the container.",
                          "type": "object",
                          "properties": {
                            "command": {
                              "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "x-kubernetes-list-type": "atomic"
                            }
                          }
                        },
                        "failureThreshold": {
                          "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "grpc": {
                          "description": "GRPC specifies a GRPC HealthCheckRequest.",
                          "type": "object",
                          "required": [
                            "port"
                          ],
                          "properties": {
                            "port": {
                              "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "service": {
                              "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.",
                              "type": "string"
                            }
                          }
                        },
                        "httpGet": {
                          "description": "HTTPGet specifies an HTTP GET request to perform.",
                          "type": "object",
                          "required": [
                            "port"
                          ],
                          "properties": {
                            "host": {
                              "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                              "type": "string"
                            },
                            "httpHeaders": {
                              "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                              "type": "array",
                              "items": {
                                "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                "type": "object",
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The header field value",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "path": {
                              "description": "Path to access on the HTTP server.",
                              "type": "string"
                            },
                            "port": {
                              "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                              "x-kubernetes-int-or-string": true
                            },
                            "scheme": {
                              "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                              "type": "string"
                            }
                          }
                        },
                        "initialDelaySeconds": {
                          "description": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "type": "integer",
                          "format": "int32"
                        },
                        "periodSeconds": {
                          "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "successThreshold": {
                          "description": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "tcpSocket": {
                          "description": "TCPSocket specifies a connection to a TCP port.",
                          "type": "object",
                          "required": [
                            "port"
                          ],
                          "properties": {
                            "host": {
                              "description": "Optional: Host name to connect to, defaults to the pod IP.",
                              "type": "string"
                            },
                            "port": {
                              "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                              "x-kubernetes-int-or-string": true
                            }
                          }
                        },
                        "terminationGracePeriodSeconds": {
                          "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "timeoutSeconds": {
                          "description": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "name": {
                      "description": "Name of the Sidecar specified as a DNS_LABEL.\nEach Sidecar in a Task must have a unique name (DNS_LABEL).\nCannot be updated.",
                      "type": "string"
                    },
                    "ports": {
                      "description": "List of ports to expose from the Sidecar. Exposing a port here gives\nthe system additional information about the network connections a\ncontainer uses, but is primarily informational. Not specifying a port here\nDOES NOT prevent that port from being exposed. Any port which is\nlistening on the default \"0.0.0.0\" address inside a container will be\naccessible from the network.\nCannot be updated.",
                      "type": "array",
                      "items": {
                        "description": "ContainerPort represents a network port in a single container.",
                        "type": "object",
                        "required": [
                          "containerPort"
                        ],
                        "properties": {
                          "containerPort": {
                            "description": "Number of port to expose on the pod's IP address.\nThis must be a valid port number, 0 < x < 65536.",
                            "type": "integer",
                            "format": "int32"
                          },
                          "hostIP": {
                            "description": "What host IP to bind the external port to.",
                            "type": "string"
                          },
                          "hostPort": {
                            "description": "Number of port to expose on the host.\nIf specified, this must be a valid port number, 0 < x < 65536.\nIf HostNetwork is specified, this must match ContainerPort.\nMost containers do not need this.",
                            "type": "integer",
                            "format": "int32"
                          },
                          "name": {
                            "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each\nnamed port in a pod must have a unique name. Name for the port that can be\nreferred to by services.",
                            "type": "string"
                          },
                          "protocol": {
                            "description": "Protocol for port. Must be UDP, TCP, or SCTP.\nDefaults to \"TCP\".",
                            "type": "string"
                          }
                        }
                      },
                      "x-kubernetes-list-map-keys": [
                        "containerPort",
                        "protocol"
                      ],
                      "x-kubernetes-list-type": "map"
                    },
                    "readinessProbe": {
                      "description": "Periodic probe of Sidecar service readiness.\nContainer will be removed from service endpoints if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                      "type": "object",
                      "properties": {
                        "exec": {
                          "description": "Exec specifies a command to execute in the container.",
                          "type": "object",
                          "properties": {
                            "command": {
                              "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "x-kubernetes-list-type": "atomic"
                            }
                          }
                        },
                        "failureThreshold": {
                          "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "grpc": {
                          "description": "GRPC specifies a GRPC HealthCheckRequest.",
                          "type": "object",
                          "required": [
                            "port"
                          ],
                          "properties": {
                            "port": {
                              "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "service": {
                              "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.",
                              "type": "string"
                            }
                          }
                        },
                        "httpGet": {
                          "description": "HTTPGet specifies an HTTP GET request to perform.",
                          "type": "object",
                          "required": [
                            "port"
                          ],
                          "properties": {
                            "host": {
                              "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                              "type": "string"
                            },
                            "httpHeaders": {
                              "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                              "type": "array",
                              "items": {
                                "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                "type": "object",
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The header field value",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "path": {
                              "description": "Path to access on the HTTP server.",
                              "type": "string"
                            },
                            "port": {
                              "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                              "x-kubernetes-int-or-string": true
                            },
                            "scheme": {
                              "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                              "type": "string"
                            }
                          }
                        },
                        "initialDelaySeconds": {
                          "description": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "type": "integer",
                          "format": "int32"
                        },
                        "periodSeconds": {
                          "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "successThreshold": {
                          "description": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "tcpSocket": {
                          "description": "TCPSocket specifies a connection to a TCP port.",
                          "type": "object",
                          "required": [
                            "port"
                          ],
                          "properties": {
                            "host": {
                              "description": "Optional: Host name to connect to, defaults to the pod IP.",
                              "type": "string"
                            },
                            "port": {
                              "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                              "x-kubernetes-int-or-string": true
                            }
                          }
                        },
                        "terminationGracePeriodSeconds": {
                          "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "timeoutSeconds": {
                          "description": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "resources": {
                      "description": "Compute Resources required by this Sidecar.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": "object",
                      "properties": {
                        "claims": {
                          "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                          "type": "array",
                          "items": {
                            "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                            "type": "object",
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                                "type": "string"
                              },
                              "request": {
                                "description": "Request is the name chosen for a request in the referenced claim.\nIf empty, everything from the claim is made available, otherwise\nonly the result of this request.",
                                "type": "string"
                              }
                            }
                          },
                          "x-kubernetes-list-map-keys": [
                            "name"
                          ],
                          "x-kubernetes-list-type": "map"
                        },
                        "limits": {
                          "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                          "type": "object",
                          "additionalProperties": {
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          }
                        },
                        "requests": {
                          "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                          "type": "object",
                          "additionalProperties": {
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          }
                        }
                      }
                    },
                    "restartPolicy": {
                      "description": "RestartPolicy refers to kubernetes RestartPolicy. It can only be set for an\ninitContainer and must have it's policy set to \"Always\". It is currently\nleft optional to help support Kubernetes versions prior to 1.29 when this feature\nwas introduced.",
                      "type": "string"
                    },
                    "script": {
                      "description": "Script is the contents of an executable file to execute.\n\nIf Script is not empty, the Step cannot have an Command or Args.",
                      "type": "string"
                    },
                    "securityContext": {
                      "description": "SecurityContext defines the security options the Sidecar should be run with.\nIf set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.\nMore info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                      "type": "object",
                      "properties": {
                        "allowPrivilegeEscalation": {
                          "description": "AllowPrivilegeEscalation controls whether a process can gain more\nprivileges than its parent process. This bool directly controls if\nthe no_new_privs flag will be set on the container process.\nAllowPrivilegeEscalation is true always when the container is:\n1) run as Privileged\n2) has CAP_SYS_ADMIN\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "boolean"
                        },
                        "appArmorProfile": {
                          "description": "appArmorProfile is the AppArmor options to use by this container. If set, this profile\noverrides the pod's appArmorProfile.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "localhostProfile": {
                              "description": "localhostProfile indicates a profile loaded on the node that should be used.\nThe profile must be preconfigured on the node to work.\nMust match the loaded name of the profile.\nMust be set if and only if type is \"Localhost\".",
                              "type": "string"
                            },
                            "type": {
                              "description": "type indicates which kind of AppArmor profile will be applied.\nValid options are:\n  Localhost - a profile pre-loaded on the node.\n  RuntimeDefault - the container runtime's default profile.\n  Unconfined - no AppArmor enforcement.",
                              "type": "string"
                            }
                          }
                        },
                        "capabilities": {
                          "description": "The capabilities to add/drop when running containers.\nDefaults to the default set of capabilities granted by the container runtime.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "object",
                          "properties": {
                            "add": {
                              "description": "Added capabilities",
                              "type": "array",
                              "items": {
                                "description": "Capability represent POSIX capabilities type",
                                "type": "string"
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "drop": {
                              "description": "Removed capabilities",
                              "type": "array",
                              "items": {
                                "description": "Capability represent POSIX capabilities type",
                                "type": "string"
                              },
                              "x-kubernetes-list-type": "atomic"
                            }
                          }
                        },
                        "privileged": {
                          "description": "Run container in privileged mode.\nProcesses in privileged containers are essentially equivalent to root on the host.\nDefaults to false.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "boolean"
                        },
                        "procMount": {
                          "description": "procMount denotes the type of proc mount to use for the containers.\nThe default value is Default which uses the container runtime defaults for\nreadonly paths and masked paths.\nThis requires the ProcMountType feature flag to be enabled.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "string"
                        },
                        "readOnlyRootFilesystem": {
                          "description": "Whether this container has a read-only root filesystem.\nDefault is false.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "boolean"
                        },
                        "runAsGroup": {
                          "description": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "runAsNonRoot": {
                          "description": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                          "type": "boolean"
                        },
                        "runAsUser": {
                          "description": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "seLinuxOptions": {
                          "description": "The SELinux context to be applied to the container.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "object",
                          "properties": {
                            "level": {
                              "description": "Level is SELinux level label that applies to the container.",
                              "type": "string"
                            },
                            "role": {
                              "description": "Role is a SELinux role label that applies to the container.",
                              "type": "string"
                            },
                            "type": {
                              "description": "Type is a SELinux type label that applies to the container.",
                              "type": "string"
                            },
                            "user": {
                              "description": "User is a SELinux user label that applies to the container.",
                              "type": "string"
                            }
                          }
                        },
                        "seccompProfile": {
                          "description": "The seccomp options to use by this container. If seccomp options are\nprovided at both the pod & container level, the container options\noverride the pod options.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "localhostProfile": {
                              "description": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.",
                              "type": "string"
                            },
                            "type": {
                              "description": "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.",
                              "type": "string"
                            }
                          }
                        },
                        "windowsOptions": {
                          "description": "The Windows specific settings applied to all containers.\nIf unspecified, the options from the PodSecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux.",
                          "type": "object",
                          "properties": {
                            "gmsaCredentialSpec": {
                              "description": "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field.",
                              "type": "string"
                            },
                            "gmsaCredentialSpecName": {
                              "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
                              "type": "string"
                            },
                            "hostProcess": {
                              "description": "HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true.",
                              "type": "boolean"
                            },
                            "runAsUserName": {
                              "description": "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "startupProbe": {
                      "description": "StartupProbe indicates that the Pod the Sidecar is running in has successfully initialized.\nIf specified, no other probes are executed until this completes successfully.\nIf this probe fails, the Pod will be restarted, just as if the livenessProbe failed.\nThis can be used to provide different probe parameters at the beginning of a Pod's lifecycle,\nwhen it might take a long time to load data or warm a cache, than during steady-state operation.\nThis cannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                      "type": "object",
                      "properties": {
                        "exec": {
                          "description": "Exec specifies a command to execute in the container.",
                          "type": "object",
                          "properties": {
                            "command": {
                              "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "x-kubernetes-list-type": "atomic"
                            }
                          }
                        },
                        "failureThreshold": {
                          "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "grpc": {
                          "description": "GRPC specifies a GRPC HealthCheckRequest.",
                          "type": "object",
                          "required": [
                            "port"
                          ],
                          "properties": {
                            "port": {
                              "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "service": {
                              "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.",
                              "type": "string"
                            }
                          }
                        },
                        "httpGet": {
                          "description": "HTTPGet specifies an HTTP GET request to perform.",
                          "type": "object",
                          "required": [
                            "port"
                          ],
                          "properties": {
                            "host": {
                              "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                              "type": "string"
                            },
                            "httpHeaders": {
                              "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                              "type": "array",
                              "items": {
                                "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                "type": "object",
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The header field value",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "path": {
                              "description": "Path to access on the HTTP server.",
                              "type": "string"
                            },
                            "port": {
                              "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                              "x-kubernetes-int-or-string": true
                            },
                            "scheme": {
                              "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                              "type": "string"
                            }
                          }
                        },
                        "initialDelaySeconds": {
                          "description": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "type": "integer",
                          "format": "int32"
                        },
                        "periodSeconds": {
                          "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "successThreshold": {
                          "description": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "tcpSocket": {
                          "description": "TCPSocket specifies a connection to a TCP port.",
                          "type": "object",
                          "required": [
                            "port"
                          ],
                          "properties": {
                            "host": {
                              "description": "Optional: Host name to connect to, defaults to the pod IP.",
                              "type": "string"
                            },
                            "port": {
                              "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                              "x-kubernetes-int-or-string": true
                            }
                          }
                        },
                        "terminationGracePeriodSeconds": {
                          "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "timeoutSeconds": {
                          "description": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "stdin": {
                      "description": "Whether this Sidecar should allocate a buffer for stdin in the container runtime. If this\nis not set, reads from stdin in the Sidecar will always result in EOF.\nDefault is false.",
                      "type": "boolean"
                    },
                    "stdinOnce": {
                      "description": "Whether the container runtime should close the stdin channel after it has been opened by\na single attach. When stdin is true the stdin stream will remain open across multiple attach\nsessions. If stdinOnce is set to true, stdin is opened on Sidecar start, is empty until the\nfirst client attaches to stdin, and then remains open and accepts data until the client disconnects,\nat which time stdin is closed and remains closed until the Sidecar is restarted. If this\nflag is false, a container processes that reads from stdin will never receive an EOF.\nDefault is false",
                      "type": "boolean"
                    },
                    "terminationMessagePath": {
                      "description": "Optional: Path at which the file to which the Sidecar's termination message\nwill be written is mounted into the Sidecar's filesystem.\nMessage written is intended to be brief final status, such as an assertion failure message.\nWill be truncated by the node if greater than 4096 bytes. The total message length across\nall containers will be limited to 12kb.\nDefaults to /dev/termination-log.\nCannot be updated.",
                      "type": "string"
                    },
                    "terminationMessagePolicy": {
                      "description": "Indicate how the termination message should be populated. File will use the contents of\nterminationMessagePath to populate the Sidecar status message on both success and failure.\nFallbackToLogsOnError will use the last chunk of Sidecar log output if the termination\nmessage file is empty and the Sidecar exited with an error.\nThe log output is limited to 2048 bytes or 80 lines, whichever is smaller.\nDefaults to File.\nCannot be updated.",
                      "type": "string"
                    },
                    "tty": {
                      "description": "Whether this Sidecar should allocate a TTY for itself, also requires 'stdin' to be true.\nDefault is false.",
                      "type": "boolean"
                    },
                    "volumeDevices": {
                      "description": "volumeDevices is the list of block devices to be used by the Sidecar.",
                      "type": "array",
                      "items": {
                        "description": "volumeDevice describes a mapping of a raw block device within a container.",
                        "type": "object",
                        "required": [
                          "devicePath",
                          "name"
                        ],
                        "properties": {
                          "devicePath": {
                            "description": "devicePath is the path inside of the container that the device will be mapped to.",
                            "type": "string"
                          },
                          "name": {
                            "description": "name must match the name of a persistentVolumeClaim in the pod",
                            "type": "string"
                          }
                        }
                      },
                      "x-kubernetes-list-type": "atomic"
                    },
                    "volumeMounts": {
                      "description": "Volumes to mount into the Sidecar's filesystem.\nCannot be updated.",
                      "type": "array",
                      "items": {
                        "description": "VolumeMount describes a mounting of a Volume within a container.",
                        "type": "object",
                        "required": [
                          "mountPath",
                          "name"
                        ],
                        "properties": {
                          "mountPath": {
                            "description": "Path within the container at which the volume should be mounted.  Must\nnot contain ':'.",
                            "type": "string"
                          },
                          "mountPropagation": {
                            "description": "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10.\nWhen RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified\n(which defaults to None).",
                            "type": "string"
                          },
                          "name": {
                            "description": "This must match the Name of a Volume.",
                            "type": "string"
                          },
                          "readOnly": {
                            "description": "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false.",
                            "type": "boolean"
                          },
                          "recursiveReadOnly": {
                            "description": "RecursiveReadOnly specifies whether read-only mounts should be handled\nrecursively.\n\nIf ReadOnly is false, this field has no meaning and must be unspecified.\n\nIf ReadOnly is true, and this field is set to Disabled, the mount is not made\nrecursively read-only.  If this field is set to IfPossible, the mount is made\nrecursively read-only, if it is supported by the container runtime.  If this\nfield is set to Enabled, the mount is made recursively read-only if it is\nsupported by the container runtime, otherwise the pod will not be started and\nan error will be generated to indicate the reason.\n\nIf this field is set to IfPossible or Enabled, MountPropagation must be set to\nNone (or be unspecified, which defaults to None).\n\nIf this field is not specified, it is treated as an equivalent of Disabled.",
                            "type": "string"
                          },
                          "subPath": {
                            "description": "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root).",
                            "type": "string"
                          },
                          "subPathExpr": {
                            "description": "Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.\nDefaults to \"\" (volume's root).\nSubPathExpr and SubPath are mutually exclusive.",
                            "type": "string"
                          }
                        }
                      },
                      "x-kubernetes-list-type": "atomic"
                    },
                    "workingDir": {
                      "description": "Sidecar's working directory.\nIf not specified, the container runtime's default will be used, which\nmight be configured in the container image.\nCannot be updated.",
                      "type": "string"
                    },
                    "workspaces": {
                      "description": "This is an alpha field. You must set the \"enable-api-fields\" feature flag to \"alpha\"\nfor this field to be supported.\n\nWorkspaces is a list of workspaces from the Task that this Sidecar wants\nexclusive access to. Adding a workspace to this list means that any\nother Step or Sidecar that does not also request this Workspace will\nnot have access to it.",
                      "type": "array",
                      "items": {
                        "description": "WorkspaceUsage is used by a Step or Sidecar to declare that it wants isolated access\nto a Workspace defined in a Task.",
                        "type": "object",
                        "required": [
                          "mountPath",
                          "name"
                        ],
                        "properties": {
                          "mountPath": {
                            "description": "MountPath is the path that the workspace should be mounted to inside the Step or Sidecar,\noverriding any MountPath specified in the Task's WorkspaceDeclaration.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name is the name of the workspace this Step or Sidecar wants access to.",
                            "type": "string"
                          }
                        }
                      },
                      "x-kubernetes-list-type": "atomic"
                    }
                  }
                },
                "x-kubernetes-list-type": "atomic"
              },
              "stepTemplate": {
                "description": "StepTemplate can be used as the basis for all step containers within the\nTask, so that the steps inherit settings on the base container.",
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "args": {
                    "description": "Arguments to the entrypoint.\nThe image's CMD is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the Step's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "atomic"
                  },
                  "command": {
                    "description": "Entrypoint array. Not executed within a shell.\nThe docker image's ENTRYPOINT is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the Step's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "atomic"
                  },
                  "env": {
                    "description": "List of environment variables to set in the container.\nCannot be updated.",
                    "type": "array",
                    "items": {
                      "description": "EnvVar represents an environment variable present in a Container.",
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                          "type": "string"
                        },
                        "value": {
                          "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                          "type": "string"
                        },
                        "valueFrom": {
                          "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                          "type": "object",
                          "properties": {
                            "configMapKeyRef": {
                              "description": "Selects a key of a ConfigMap.",
                              "type": "object",
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "key": {
                                  "description": "The key to select.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string"
                                },
                                "optional": {
                                  "description": "Specify whether the ConfigMap or its key must be defined",
                                  "type": "boolean"
                                }
                              },
                              "x-kubernetes-map-type": "atomic"
                            },
                            "fieldRef": {
                              "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                              "type": "object",
                              "required": [
                                "fieldPath"
                              ],
                              "properties": {
                                "apiVersion": {
                                  "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                  "type": "string"
                                },
                                "fieldPath": {
                                  "description": "Path of the field to select in the specified API version.",
                                  "type": "string"
                                }
                              },
                              "x-kubernetes-map-type": "atomic"
                            },
                            "resourceFieldRef": {
                              "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                              "type": "object",
                              "required": [
                                "resource"
                              ],
                              "properties": {
                                "containerName": {
                                  "description": "Container name: required for volumes, optional for env vars",
                                  "type": "string"
                                },
                                "divisor": {
                                  "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                  "x-kubernetes-int-or-string": true
                                },
                                "resource": {
                                  "description": "Required: resource to select",
                                  "type": "string"
                                }
                              },
                              "x-kubernetes-map-type": "atomic"
                            },
                            "secretKeyRef": {
                              "description": "Selects a key of a secret in the pod's namespace",
                              "type": "object",
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "key": {
                                  "description": "The key of the secret to select from.  Must be a valid secret key.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string"
                                },
                                "optional": {
                                  "description": "Specify whether the Secret or its key must be defined",
                                  "type": "boolean"
                                }
                              },
                              "x-kubernetes-map-type": "atomic"
                            }
                          }
                        }
                      }
                    },
                    "x-kubernetes-list-type": "atomic"
                  },
                  "envFrom": {
                    "description": "List of sources to populate environment variables in the Step.\nThe keys defined within a source must be a C_IDENTIFIER. All invalid keys\nwill be reported as an event when the container is starting. When a key exists in multiple\nsources, the value associated with the last source will take precedence.\nValues defined by an Env with a duplicate key will take precedence.\nCannot be updated.",
                    "type": "array",
                    "items": {
                      "description": "EnvFromSource represents the source of a set of ConfigMaps",
                      "type": "object",
                      "properties": {
                        "configMapRef": {
                          "description": "The ConfigMap to select from",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type": "string"
                            },
                            "optional": {
                              "description": "Specify whether the ConfigMap must be defined",
                              "type": "boolean"
                            }
                          },
                          "x-kubernetes-map-type": "atomic"
                        },
                        "prefix": {
                          "description": "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
                          "type": "string"
                        },
                        "secretRef": {
                          "description": "The Secret to select from",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type": "string"
                            },
                            "optional": {
                              "description": "Specify whether the Secret must be defined",
                              "type": "boolean"
                            }
                          },
                          "x-kubernetes-map-type": "atomic"
                        }
                      }
                    },
                    "x-kubernetes-list-type": "atomic"
                  },
                  "image": {
                    "description": "Default image name to use for each Step.\nMore info: https://kubernetes.io/docs/concepts/containers/images\nThis field is optional to allow higher level config management to default or override\ncontainer images in workload controllers like Deployments and StatefulSets.",
                    "type": "string"
                  },
                  "imagePullPolicy": {
                    "description": "Image pull policy.\nOne of Always, Never, IfNotPresent.\nDefaults to Always if :latest tag is specified, or IfNotPresent otherwise.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
                    "type": "string"
                  },
                  "lifecycle": {
                    "description": "Actions that the management system should take in response to container lifecycle events.\nCannot be updated.\n\nDeprecated: This field will be removed in a future release.",
                    "type": "object",
                    "properties": {
                      "postStart": {
                        "description": "PostStart is called immediately after a container is created. If the handler fails,\nthe container is terminated and restarted according to its restart policy.\nOther management of the container blocks until the hook completes.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
                        "type": "object",
                        "properties": {
                          "exec": {
                            "description": "Exec specifies a command to execute in the container.",
                            "type": "object",
                            "properties": {
                              "command": {
                                "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "atomic"
                              }
                            }
                          },
                          "httpGet": {
                            "description": "HTTPGet specifies an HTTP GET request to perform.",
                            "type": "object",
                            "required": [
                              "port"
                            ],
                            "properties": {
                              "host": {
                                "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                                "type": "string"
                              },
                              "httpHeaders": {
                                "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                "type": "array",
                                "items": {
                                  "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "value"
                                  ],
                                  "properties": {
                                    "name": {
                                      "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The header field value",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-kubernetes-list-type": "atomic"
                              },
                              "path": {
                                "description": "Path to access on the HTTP server.",
                                "type": "string"
                              },
                              "port": {
                                "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                "x-kubernetes-int-or-string": true
                              },
                              "scheme": {
                                "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                                "type": "string"
                              }
                            }
                          },
                          "sleep": {
                            "description": "Sleep represents a duration that the container should sleep.",
                            "type": "object",
                            "required": [
                              "seconds"
                            ],
                            "properties": {
                              "seconds": {
                                "description": "Seconds is the number of seconds to sleep.",
                                "type": "integer",
                                "format": "int64"
                              }
                            }
                          },
                          "tcpSocket": {
                            "description": "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept\nfor backward compatibility. There is no validation of this field and\nlifecycle hooks will fail at runtime when it is specified.",
                            "type": "object",
                            "required": [
                              "port"
                            ],
                            "properties": {
                              "host": {
                                "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                "type": "string"
                              },
                              "port": {
                                "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                "x-kubernetes-int-or-string": true
                              }
                            }
                          }
                        }
                      },
                      "preStop": {
                        "description": "PreStop is called immediately before a container is terminated due to an\nAPI request or management event such as liveness/startup probe failure,\npreemption, resource contention, etc. The handler is not called if the\ncontainer crashes or exits. The Pod's termination grace period countdown begins before the\nPreStop hook is executed. Regardless of the outcome of the handler, the\ncontainer will eventually terminate within the Pod's termination grace\nperiod (unless delayed by finalizers). Other management of the container blocks until the hook completes\nor until the termination grace period is reached.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
                        "type": "object",
                        "properties": {
                          "exec": {
                            "description": "Exec specifies a command to execute in the container.",
                            "type": "object",
                            "properties": {
                              "command": {
                                "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "atomic"
                              }
                            }
                          },
                          "httpGet": {
                            "description": "HTTPGet specifies an HTTP GET request to perform.",
                            "type": "object",
                            "required": [
                              "port"
                            ],
                            "properties": {
                              "host": {
                                "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                                "type": "string"
                              },
                              "httpHeaders": {
                                "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                "type": "array",
                                "items": {
                                  "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "value"
                                  ],
                                  "properties": {
                                    "name": {
                                      "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The header field value",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-kubernetes-list-type": "atomic"
                              },
                              "path": {
                                "description": "Path to access on the HTTP server.",
                                "type": "string"
                              },
                              "port": {
                                "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                "x-kubernetes-int-or-string": true
                              },
                              "scheme": {
                                "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                                "type": "string"
                              }
                            }
                          },
                          "sleep": {
                            "description": "Sleep represents a duration that the container should sleep.",
                            "type": "object",
                            "required": [
                              "seconds"
                            ],
                            "properties": {
                              "seconds": {
                                "description": "Seconds is the number of seconds to sleep.",
                                "type": "integer",
                                "format": "int64"
                              }
                            }
                          },
                          "tcpSocket": {
                            "description": "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept\nfor backward compatibility. There is no validation of this field and\nlifecycle hooks will fail at runtime when it is specified.",
                            "type": "object",
                            "required": [
                              "port"
                            ],
                            "properties": {
                              "host": {
                                "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                "type": "string"
                              },
                              "port": {
                                "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                "x-kubernetes-int-or-string": true
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "livenessProbe": {
                    "description": "Periodic probe of container liveness.\nContainer will be restarted if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n\nDeprecated: This field will be removed in a future release.",
                    "type": "object",
                    "properties": {
                      "exec": {
                        "description": "Exec specifies a command to execute in the container.",
                        "type": "object",
                        "properties": {
                          "command": {
                            "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "atomic"
                          }
                        }
                      },
                      "failureThreshold": {
                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "grpc": {
                        "description": "GRPC specifies a GRPC HealthCheckRequest.",
                        "type": "object",
                        "required": [
                          "port"
                        ],
                        "properties": {
                          "port": {
                            "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                            "type": "integer",
                            "format": "int32"
                          },
                          "service": {
                            "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.",
                            "type": "string"
                          }
                        }
                      },
                      "httpGet": {
                        "description": "HTTPGet specifies an HTTP GET request to perform.",
                        "type": "object",
                        "required": [
                          "port"
                        ],
                        "properties": {
                          "host": {
                            "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                            "type": "string"
                          },
                          "httpHeaders": {
                            "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                            "type": "array",
                            "items": {
                              "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                              "type": "object",
                              "required": [
                                "name",
                                "value"
                              ],
                              "properties": {
                                "name": {
                                  "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The header field value",
                                  "type": "string"
                                }
                              }
                            },
                            "x-kubernetes-list-type": "atomic"
                          },
                          "path": {
                            "description": "Path to access on the HTTP server.",
                            "type": "string"
                          },
                          "port": {
                            "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                            "x-kubernetes-int-or-string": true
                          },
                          "scheme": {
                            "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                            "type": "string"
                          }
                        }
                      },
                      "initialDelaySeconds": {
                        "description": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                        "type": "integer",
                        "format": "int32"
                      },
                      "periodSeconds": {
                        "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "successThreshold": {
                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "tcpSocket": {
                        "description": "TCPSocket specifies a connection to a TCP port.",
                        "type": "object",
                        "required": [
                          "port"
                        ],
                        "properties": {
                          "host": {
                            "description": "Optional: Host name to connect to, defaults to the pod IP.",
                            "type": "string"
                          },
                          "port": {
                            "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                            "x-kubernetes-int-or-string": true
                          }
                        }
                      },
                      "terminationGracePeriodSeconds": {
                        "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
                        "type": "integer",
                        "format": "int64"
                      },
                      "timeoutSeconds": {
                        "description": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                        "type": "integer",
                        "format": "int32"
                      }
                    }
                  },
                  "name": {
                    "description": "Default name for each Step specified as a DNS_LABEL.\nEach Step in a Task must have a unique name.\nCannot be updated.\n\nDeprecated: This field will be removed in a future release.",
                    "type": "string"
                  },
                  "ports": {
                    "description": "List of ports to expose from the Step's container. Exposing a port here gives\nthe system additional information about the network connections a\ncontainer uses, but is primarily informational. Not specifying a port here\nDOES NOT prevent that port from being exposed. Any port which is\nlistening on the default \"0.0.0.0\" address inside a container will be\naccessible from the network.\nCannot be updated.\n\nDeprecated: This field will be removed in a future release.",
                    "type": "array",
                    "items": {
                      "description": "ContainerPort represents a network port in a single container.",
                      "type": "object",
                      "required": [
                        "containerPort"
                      ],
                      "properties": {
                        "containerPort": {
                          "description": "Number of port to expose on the pod's IP address.\nThis must be a valid port number, 0 < x < 65536.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "hostIP": {
                          "description": "What host IP to bind the external port to.",
                          "type": "string"
                        },
                        "hostPort": {
                          "description": "Number of port to expose on the host.\nIf specified, this must be a valid port number, 0 < x < 65536.\nIf HostNetwork is specified, this must match ContainerPort.\nMost containers do not need this.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "name": {
                          "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each\nnamed port in a pod must have a unique name. Name for the port that can be\nreferred to by services.",
                          "type": "string"
                        },
                        "protocol": {
                          "description": "Protocol for port. Must be UDP, TCP, or SCTP.\nDefaults to \"TCP\".",
                          "type": "string"
                        }
                      }
                    },
                    "x-kubernetes-list-map-keys": [
                      "containerPort",
                      "protocol"
                    ],
                    "x-kubernetes-list-type": "map"
                  },
                  "readinessProbe": {
                    "description": "Periodic probe of container service readiness.\nContainer will be removed from service endpoints if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n\nDeprecated: This field will be removed in a future release.",
                    "type": "object",
                    "properties": {
                      "exec": {
                        "description": "Exec specifies a command to execute in the container.",
                        "type": "object",
                        "properties": {
                          "command": {
                            "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "atomic"
                          }
                        }
                      },
                      "failureThreshold": {
                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "grpc": {
                        "description": "GRPC specifies a GRPC HealthCheckRequest.",
                        "type": "object",
                        "required": [
                          "port"
                        ],
                        "properties": {
                          "port": {
                            "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                            "type": "integer",
                            "format": "int32"
                          },
                          "service": {
                            "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.",
                            "type": "string"
                          }
                        }
                      },
                      "httpGet": {
                        "description": "HTTPGet specifies an HTTP GET request to perform.",
                        "type": "object",
                        "required": [
                          "port"
                        ],
                        "properties": {
                          "host": {
                            "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                            "type": "string"
                          },
                          "httpHeaders": {
                            "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                            "type": "array",
                            "items": {
                              "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                              "type": "object",
                              "required": [
                                "name",
                                "value"
                              ],
                              "properties": {
                                "name": {
                                  "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The header field value",
                                  "type": "string"
                                }
                              }
                            },
                            "x-kubernetes-list-type": "atomic"
                          },
                          "path": {
                            "description": "Path to access on the HTTP server.",
                            "type": "string"
                          },
                          "port": {
                            "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                            "x-kubernetes-int-or-string": true
                          },
                          "scheme": {
                            "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                            "type": "string"
                          }
                        }
                      },
                      "initialDelaySeconds": {
                        "description": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                        "type": "integer",
                        "format": "int32"
                      },
                      "periodSeconds": {
                        "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "successThreshold": {
                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "tcpSocket": {
                        "description": "TCPSocket specifies a connection to a TCP port.",
                        "type": "object",
                        "required": [
                          "port"
                        ],
                        "properties": {
                          "host": {
                            "description": "Optional: Host name to connect to, defaults to the pod IP.",
                            "type": "string"
                          },
                          "port": {
                            "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                            "x-kubernetes-int-or-string": true
                          }
                        }
                      },
                      "terminationGracePeriodSeconds": {
                        "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
                        "type": "integer",
                        "format": "int64"
                      },
                      "timeoutSeconds": {
                        "description": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                        "type": "integer",
                        "format": "int32"
                      }
                    }
                  },
                  "resources": {
                    "description": "Compute Resources required by this Step.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                    "type": "object",
                    "properties": {
                      "claims": {
                        "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                        "type": "array",
                        "items": {
                          "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                              "type": "string"
                            },
                            "request": {
                              "description": "Request is the name chosen for a request in the referenced claim.\nIf empty, everything from the claim is made available, otherwise\nonly the result of this request.",
                              "type": "string"
                            }
                          }
                        },
                        "x-kubernetes-list-map-keys": [
                          "name"
                        ],
                        "x-kubernetes-list-type": "map"
                      },
                      "limits": {
                        "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                        "type": "object",
                        "additionalProperties": {
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                          "x-kubernetes-int-or-string": true
                        }
                      },
                      "requests": {
                        "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                        "type": "object",
                        "additionalProperties": {
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                          "x-kubernetes-int-or-string": true
                        }
                      }
                    }
                  },
                  "securityContext": {
                    "description": "SecurityContext defines the security options the Step should be run with.\nIf set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.\nMore info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                    "type": "object",
                    "properties": {
                      "allowPrivilegeEscalation": {
                        "description": "AllowPrivilegeEscalation controls whether a process can gain more\nprivileges than its parent process. This bool directly controls if\nthe no_new_privs flag will be set on the container process.\nAllowPrivilegeEscalation is true always when the container is:\n1) run as Privileged\n2) has CAP_SYS_ADMIN\nNote that this field cannot be set when spec.os.name is windows.",
                        "type": "boolean"
                      },
                      "appArmorProfile": {
                        "description": "appArmorProfile is the AppArmor options to use by this container. If set, this profile\noverrides the pod's appArmorProfile.\nNote that this field cannot be set when spec.os.name is windows.",
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "localhostProfile": {
                            "description": "localhostProfile indicates a profile loaded on the node that should be used.\nThe profile must be preconfigured on the node to work.\nMust match the loaded name of the profile.\nMust be set if and only if type is \"Localhost\".",
                            "type": "string"
                          },
                          "type": {
                            "description": "type indicates which kind of AppArmor profile will be applied.\nValid options are:\n  Localhost - a profile pre-loaded on the node.\n  RuntimeDefault - the container runtime's default profile.\n  Unconfined - no AppArmor enforcement.",
                            "type": "string"
                          }
                        }
                      },
                      "capabilities": {
                        "description": "The capabilities to add/drop when running containers.\nDefaults to the default set of capabilities granted by the container runtime.\nNote that this field cannot be set when spec.os.name is windows.",
                        "type": "object",
                        "properties": {
                          "add": {
                            "description": "Added capabilities",
                            "type": "array",
                            "items": {
                              "description": "Capability represent POSIX capabilities type",
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "atomic"
                          },
                          "drop": {
                            "description": "Removed capabilities",
                            "type": "array",
                            "items": {
                              "description": "Capability represent POSIX capabilities type",
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "atomic"
                          }
                        }
                      },
                      "privileged": {
                        "description": "Run container in privileged mode.\nProcesses in privileged containers are essentially equivalent to root on the host.\nDefaults to false.\nNote that this field cannot be set when spec.os.name is windows.",
                        "type": "boolean"
                      },
                      "procMount": {
                        "description": "procMount denotes the type of proc mount to use for the containers.\nThe default value is Default which uses the container runtime defaults for\nreadonly paths and masked paths.\nThis requires the ProcMountType feature flag to be enabled.\nNote that this field cannot be set when spec.os.name is windows.",
                        "type": "string"
                      },
                      "readOnlyRootFilesystem": {
                        "description": "Whether this container has a read-only root filesystem.\nDefault is false.\nNote that this field cannot be set when spec.os.name is windows.",
                        "type": "boolean"
                      },
                      "runAsGroup": {
                        "description": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                        "type": "integer",
                        "format": "int64"
                      },
                      "runAsNonRoot": {
                        "description": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                        "type": "boolean"
                      },
                      "runAsUser": {
                        "description": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                        "type": "integer",
                        "format": "int64"
                      },
                      "seLinuxOptions": {
                        "description": "The SELinux context to be applied to the container.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                        "type": "object",
                        "properties": {
                          "level": {
                            "description": "Level is SELinux level label that applies to the container.",
                            "type": "string"
                          },
                          "role": {
                            "description": "Role is a SELinux role label that applies to the container.",
                            "type": "string"
                          },
                          "type": {
                            "description": "Type is a SELinux type label that applies to the container.",
                            "type": "string"
                          },
                          "user": {
                            "description": "User is a SELinux user label that applies to the container.",
                            "type": "string"
                          }
                        }
                      },
                      "seccompProfile": {
                        "description": "The seccomp options to use by this container. If seccomp options are\nprovided at both the pod & container level, the container options\noverride the pod options.\nNote that this field cannot be set when spec.os.name is windows.",
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "localhostProfile": {
                            "description": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.",
                            "type": "string"
                          },
                          "type": {
                            "description": "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.",
                            "type": "string"
                          }
                        }
                      },
                      "windowsOptions": {
                        "description": "The Windows specific settings applied to all containers.\nIf unspecified, the options from the PodSecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux.",
                        "type": "object",
                        "properties": {
                          "gmsaCredentialSpec": {
                            "description": "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field.",
                            "type": "string"
                          },
                          "gmsaCredentialSpecName": {
                            "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
                            "type": "string"
                          },
                          "hostProcess": {
                            "description": "HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true.",
                            "type": "boolean"
                          },
                          "runAsUserName": {
                            "description": "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "startupProbe": {
                    "description": "DeprecatedStartupProbe indicates that the Pod has successfully initialized.\nIf specified, no other probes are executed until this completes successfully.\nIf this probe fails, the Pod will be restarted, just as if the livenessProbe failed.\nThis can be used to provide different probe parameters at the beginning of a Pod's lifecycle,\nwhen it might take a long time to load data or warm a cache, than during steady-state operation.\nThis cannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n\nDeprecated: This field will be removed in a future release.",
                    "type": "object",
                    "properties": {
                      "exec": {
                        "description": "Exec specifies a command to execute in the container.",
                        "type": "object",
                        "properties": {
                          "command": {
                            "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "atomic"
                          }
                        }
                      },
                      "failureThreshold": {
                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "grpc": {
                        "description": "GRPC specifies a GRPC HealthCheckRequest.",
                        "type": "object",
                        "required": [
                          "port"
                        ],
                        "properties": {
                          "port": {
                            "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                            "type": "integer",
                            "format": "int32"
                          },
                          "service": {
                            "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.",
                            "type": "string"
                          }
                        }
                      },
                      "httpGet": {
                        "description": "HTTPGet specifies an HTTP GET request to perform.",
                        "type": "object",
                        "required": [
                          "port"
                        ],
                        "properties": {
                          "host": {
                            "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                            "type": "string"
                          },
                          "httpHeaders": {
                            "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                            "type": "array",
                            "items": {
                              "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                              "type": "object",
                              "required": [
                                "name",
                                "value"
                              ],
                              "properties": {
                                "name": {
                                  "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The header field value",
                                  "type": "string"
                                }
                              }
                            },
                            "x-kubernetes-list-type": "atomic"
                          },
                          "path": {
                            "description": "Path to access on the HTTP server.",
                            "type": "string"
                          },
                          "port": {
                            "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                            "x-kubernetes-int-or-string": true
                          },
                          "scheme": {
                            "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                            "type": "string"
                          }
                        }
                      },
                      "initialDelaySeconds": {
                        "description": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                        "type": "integer",
                        "format": "int32"
                      },
                      "periodSeconds": {
                        "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "successThreshold": {
                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "tcpSocket": {
                        "description": "TCPSocket specifies a connection to a TCP port.",
                        "type": "object",
                        "required": [
                          "port"
                        ],
                        "properties": {
                          "host": {
                            "description": "Optional: Host name to connect to, defaults to the pod IP.",
                            "type": "string"
                          },
                          "port": {
                            "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                            "x-kubernetes-int-or-string": true
                          }
                        }
                      },
                      "terminationGracePeriodSeconds": {
                        "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
                        "type": "integer",
                        "format": "int64"
                      },
                      "timeoutSeconds": {
                        "description": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                        "type": "integer",
                        "format": "int32"
                      }
                    }
                  },
                  "stdin": {
                    "description": "Whether this Step should allocate a buffer for stdin in the container runtime. If this\nis not set, reads from stdin in the Step will always result in EOF.\nDefault is false.\n\nDeprecated: This field will be removed in a future release.",
                    "type": "boolean"
                  },
                  "stdinOnce": {
                    "description": "Whether the container runtime should close the stdin channel after it has been opened by\na single attach. When stdin is true the stdin stream will remain open across multiple attach\nsessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the\nfirst client attaches to stdin, and then remains open and accepts data until the client disconnects,\nat which time stdin is closed and remains closed until the container is restarted. If this\nflag is false, a container processes that reads from stdin will never receive an EOF.\nDefault is false\n\nDeprecated: This field will be removed in a future release.",
                    "type": "boolean"
                  },
                  "terminationMessagePath": {
                    "description": "Deprecated: This field will be removed in a future release and cannot be meaningfully used.",
                    "type": "string"
                  },
                  "terminationMessagePolicy": {
                    "description": "Deprecated: This field will be removed in a future release and cannot be meaningfully used.",
                    "type": "string"
                  },
                  "tty": {
                    "description": "Whether this Step should allocate a DeprecatedTTY for itself, also requires 'stdin' to be true.\nDefault is false.\n\nDeprecated: This field will be removed in a future release.",
                    "type": "boolean"
                  },
                  "volumeDevices": {
                    "description": "volumeDevices is the list of block devices to be used by the Step.",
                    "type": "array",
                    "items": {
                      "description": "volumeDevice describes a mapping of a raw block device within a container.",
                      "type": "object",
                      "required": [
                        "devicePath",
                        "name"
                      ],
                      "properties": {
                        "devicePath": {
                          "description": "devicePath is the path inside of the container that the device will be mapped to.",
                          "type": "string"
                        },
                        "name": {
                          "description": "name must match the name of a persistentVolumeClaim in the pod",
                          "type": "string"
                        }
                      }
                    },
                    "x-kubernetes-list-type": "atomic"
                  },
                  "volumeMounts": {
                    "description": "Volumes to mount into the Step's filesystem.\nCannot be updated.",
                    "type": "array",
                    "items": {
                      "description": "VolumeMount describes a mounting of a Volume within a container.",
                      "type": "object",
                      "required": [
                        "mountPath",
                        "name"
                      ],
                      "properties": {
                        "mountPath": {
                          "description": "Path within the container at which the volume should be mounted.  Must\nnot contain ':'.",
                          "type": "string"
                        },
                        "mountPropagation": {
                          "description": "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10.\nWhen RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified\n(which defaults to None).",
                          "type": "string"
                        },
                        "name": {
                          "description": "This must match the Name of a Volume.",
                          "type": "string"
                        },
                        "readOnly": {
                          "description": "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false.",
                          "type": "boolean"
                        },
                        "recursiveReadOnly": {
                          "description": "RecursiveReadOnly specifies whether read-only mounts should be handled\nrecursively.\n\nIf ReadOnly is false, this field has no meaning and must be unspecified.\n\nIf ReadOnly is true, and this field is set to Disabled, the mount is not made\nrecursively read-only.  If this field is set to IfPossible, the mount is made\nrecursively read-only, if it is supported by the container runtime.  If this\nfield is set to Enabled, the mount is made recursively read-only if it is\nsupported by the container runtime, otherwise the pod will not be started and\nan error will be generated to indicate the reason.\n\nIf this field is set to IfPossible or Enabled, MountPropagation must be set to\nNone (or be unspecified, which defaults to None).\n\nIf this field is not specified, it is treated as an equivalent of Disabled.",
                          "type": "string"
                        },
                        "subPath": {
                          "description": "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root).",
                          "type": "string"
                        },
                        "subPathExpr": {
                          "description": "Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.\nDefaults to \"\" (volume's root).\nSubPathExpr and SubPath are mutually exclusive.",
                          "type": "string"
                        }
                      }
                    },
                    "x-kubernetes-list-type": "atomic"
                  },
                  "workingDir": {
                    "description": "Step's working directory.\nIf not specified, the container runtime's default will be used, which\nmight be configured in the container image.\nCannot be updated.",
                    "type": "string"
                  }
                }
              },
              "steps": {
                "description": "Steps are the steps of the build; each step is run sequentially with the\nsource mounted into /workspace.",
                "type": "array",
                "items": {
                  "description": "Step runs a subcomponent of a Task",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "args": {
                      "description": "Arguments to the entrypoint.\nThe image's CMD is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-kubernetes-list-type": "atomic"
                    },
                    "command": {
                      "description": "Entrypoint array. Not executed within a shell.\nThe image's ENTRYPOINT is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-kubernetes-list-type": "atomic"
                    },
                    "env": {
                      "description": "List of environment variables to set in the container.\nCannot be updated.",
                      "type": "array",
                      "items": {
                        "description": "EnvVar represents an environment variable present in a Container.",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                            "type": "string"
                          },
                          "valueFrom": {
                            "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                            "type": "object",
                            "properties": {
                              "configMapKeyRef": {
                                "description": "Selects a key of a ConfigMap.",
                                "type": "object",
                                "required": [
                                  "key"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "The key to select.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                    "type": "string"
                                  },
                                  "optional": {
                                    "description": "Specify whether the ConfigMap or its key must be defined",
                                    "type": "boolean"
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              },
                              "fieldRef": {
                                "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                "type": "object",
                                "required": [
                                  "fieldPath"
                                ],
                                "properties": {
                                  "apiVersion": {
                                    "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                    "type": "string"
                                  },
                                  "fieldPath": {
                                    "description": "Path of the field to select in the specified API version.",
                                    "type": "string"
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              },
                              "resourceFieldRef": {
                                "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                "type": "object",
                                "required": [
                                  "resource"
                                ],
                                "properties": {
                                  "containerName": {
                                    "description": "Container name: required for volumes, optional for env vars",
                                    "type": "string"
                                  },
                                  "divisor": {
                                    "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                    "x-kubernetes-int-or-string": true
                                  },
                                  "resource": {
                                    "description": "Required: resource to select",
                                    "type": "string"
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              },
                              "secretKeyRef": {
                                "description": "Selects a key of a secret in the pod's namespace",
                                "type": "object",
                                "required": [
                                  "key"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "The key of the secret to select from.  Must be a valid secret key.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                    "type": "string"
                                  },
                                  "optional": {
                                    "description": "Specify whether the Secret or its key must be defined",
                                    "type": "boolean"
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              }
                            }
                          }
                        }
                      },
                      "x-kubernetes-list-type": "atomic"
                    },
                    "envFrom": {
                      "description": "List of sources to populate environment variables in the container.\nThe keys defined within a source must be a C_IDENTIFIER. All invalid keys\nwill be reported as an event when the container is starting. When a key exists in multiple\nsources, the value associated with the last source will take precedence.\nValues defined by an Env with a duplicate key will take precedence.\nCannot be updated.",
                      "type": "array",
                      "items": {
                        "description": "EnvFromSource represents the source of a set of ConfigMaps",
                        "type": "object",
                        "properties": {
                          "configMapRef": {
                            "description": "The ConfigMap to select from",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string"
                              },
                              "optional": {
                                "description": "Specify whether the ConfigMap must be defined",
                                "type": "boolean"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "prefix": {
                            "description": "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
                            "type": "string"
                          },
                          "secretRef": {
                            "description": "The Secret to select from",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string"
                              },
                              "optional": {
                                "description": "Specify whether the Secret must be defined",
                                "type": "boolean"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          }
                        }
                      },
                      "x-kubernetes-list-type": "atomic"
                    },
                    "image": {
                      "description": "Image reference name to run for this Step.\nMore info: https://kubernetes.io/docs/concepts/containers/images",
                      "type": "string"
                    },
                    "imagePullPolicy": {
                      "description": "Image pull policy.\nOne of Always, Never, IfNotPresent.\nDefaults to Always if :latest tag is specified, or IfNotPresent otherwise.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
                      "type": "string"
                    },
                    "lifecycle": {
                      "description": "Actions that the management system should take in response to container lifecycle events.\nCannot be updated.\n\nDeprecated: This field will be removed in a future release.",
                      "type": "object",
                      "properties": {
                        "postStart": {
                          "description": "PostStart is called immediately after a container is created. If the handler fails,\nthe container is terminated and restarted according to its restart policy.\nOther management of the container blocks until the hook completes.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
                          "type": "object",
                          "properties": {
                            "exec": {
                              "description": "Exec specifies a command to execute in the container.",
                              "type": "object",
                              "properties": {
                                "command": {
                                  "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                }
                              }
                            },
                            "httpGet": {
                              "description": "HTTPGet specifies an HTTP GET request to perform.",
                              "type": "object",
                              "required": [
                                "port"
                              ],
                              "properties": {
                                "host": {
                                  "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                                  "type": "string"
                                },
                                "httpHeaders": {
                                  "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                  "type": "array",
                                  "items": {
                                    "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                    "type": "object",
                                    "required": [
                                      "name",
                                      "value"
                                    ],
                                    "properties": {
                                      "name": {
                                        "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "The header field value",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "path": {
                                  "description": "Path to access on the HTTP server.",
                                  "type": "string"
                                },
                                "port": {
                                  "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                  "x-kubernetes-int-or-string": true
                                },
                                "scheme": {
                                  "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                                  "type": "string"
                                }
                              }
                            },
                            "sleep": {
                              "description": "Sleep represents a duration that the container should sleep.",
                              "type": "object",
                              "required": [
                                "seconds"
                              ],
                              "properties": {
                                "seconds": {
                                  "description": "Seconds is the number of seconds to sleep.",
                                  "type": "integer",
                                  "format": "int64"
                                }
                              }
                            },
                            "tcpSocket": {
                              "description": "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept\nfor backward compatibility. There is no validation of this field and\nlifecycle hooks will fail at runtime when it is specified.",
                              "type": "object",
                              "required": [
                                "port"
                              ],
                              "properties": {
                                "host": {
                                  "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                  "type": "string"
                                },
                                "port": {
                                  "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                  "x-kubernetes-int-or-string": true
                                }
                              }
                            }
                          }
                        },
                        "preStop": {
                          "description": "PreStop is called immediately before a container is terminated due to an\nAPI request or management event such as liveness/startup probe failure,\npreemption, resource contention, etc. The handler is not called if the\ncontainer crashes or exits. The Pod's termination grace period countdown begins before the\nPreStop hook is executed. Regardless of the outcome of the handler, the\ncontainer will eventually terminate within the Pod's termination grace\nperiod (unless delayed by finalizers). Other management of the container blocks until the hook completes\nor until the termination grace period is reached.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
                          "type": "object",
                          "properties": {
                            "exec": {
                              "description": "Exec specifies a command to execute in the container.",
                              "type": "object",
                              "properties": {
                                "command": {
                                  "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                }
                              }
                            },
                            "httpGet": {
                              "description": "HTTPGet specifies an HTTP GET request to perform.",
                              "type": "object",
                              "required": [
                                "port"
                              ],
                              "properties": {
                                "host": {
                                  "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                                  "type": "string"
                                },
                                "httpHeaders": {
                                  "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                  "type": "array",
                                  "items": {
                                    "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                    "type": "object",
                                    "required": [
                                      "name",
                                      "value"
                                    ],
                                    "properties": {
                                      "name": {
                                        "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "The header field value",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "path": {
                                  "description": "Path to access on the HTTP server.",
                                  "type": "string"
                                },
                                "port": {
                                  "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                  "x-kubernetes-int-or-string": true
                                },
                                "scheme": {
                                  "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                                  "type": "string"
                                }
                              }
                            },
                            "sleep": {
                              "description": "Sleep represents a duration that the container should sleep.",
                              "type": "object",
                              "required": [
                                "seconds"
                              ],
                              "properties": {
                                "seconds": {
                                  "description": "Seconds is the number of seconds to sleep.",
                                  "type": "integer",
                                  "format": "int64"
                                }
                              }
                            },
                            "tcpSocket": {
                              "description": "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept\nfor backward compatibility. There is no validation of this field and\nlifecycle hooks will fail at runtime when it is specified.",
                              "type": "object",
                              "required": [
                                "port"
                              ],
                              "properties": {
                                "host": {
                                  "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                  "type": "string"
                                },
                                "port": {
                                  "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                  "x-kubernetes-int-or-string": true
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "livenessProbe": {
                      "description": "Periodic probe of container liveness.\nStep will be restarted if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n\nDeprecated: This field will be removed in a future release.",
                      "type": "object",
                      "properties": {
                        "exec": {
                          "description": "Exec specifies a command to execute in the container.",
                          "type": "object",
                          "properties": {
                            "command": {
                              "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "x-kubernetes-list-type": "atomic"
                            }
                          }
                        },
                        "failureThreshold": {
                          "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "grpc": {
                          "description": "GRPC specifies a GRPC HealthCheckRequest.",
                          "type": "object",
                          "required": [
                            "port"
                          ],
                          "properties": {
                            "port": {
                              "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "service": {
                              "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.",
                              "type": "string"
                            }
                          }
                        },
                        "httpGet": {
                          "description": "HTTPGet specifies an HTTP GET request to perform.",
                          "type": "object",
                          "required": [
                            "port"
                          ],
                          "properties": {
                            "host": {
                              "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                              "type": "string"
                            },
                            "httpHeaders": {
                              "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                              "type": "array",
                              "items": {
                                "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                "type": "object",
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The header field value",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "path": {
                              "description": "Path to access on the HTTP server.",
                              "type": "string"
                            },
                            "port": {
                              "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                              "x-kubernetes-int-or-string": true
                            },
                            "scheme": {
                              "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                              "type": "string"
                            }
                          }
                        },
                        "initialDelaySeconds": {
                          "description": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "type": "integer",
                          "format": "int32"
                        },
                        "periodSeconds": {
                          "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "successThreshold": {
                          "description": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "tcpSocket": {
                          "description": "TCPSocket specifies a connection to a TCP port.",
                          "type": "object",
                          "required": [
                            "port"
                          ],
                          "properties": {
                            "host": {
                              "description": "Optional: Host name to connect to, defaults to the pod IP.",
                              "type": "string"
                            },
                            "port": {
                              "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                              "x-kubernetes-int-or-string": true
                            }
                          }
                        },
                        "terminationGracePeriodSeconds": {
                          "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "timeoutSeconds": {
                          "description": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "name": {
                      "description": "Name of the Step specified as a DNS_LABEL.\nEach Step in a Task must have a unique name.",
                      "type": "string"
                    },
                    "onError": {
                      "description": "OnError defines the exiting behavior of a container on error\ncan be set to [ continue | stopAndFail ]",
                      "type": "string"
                    },
                    "params": {
                      "description": "Params declares parameters passed to this step action.",
                      "type": "array",
                      "items": {
                        "description": "Param declares an ParamValues to use for the parameter called name.",
                        "type": "object",
                        "required": [
                          "name",
                          "value"
                        ],
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "value": {
                            "x-kubernetes-preserve-unknown-fields": true
                          }
                        }
                      },
                      "x-kubernetes-list-type": "atomic"
                    },
                    "ports": {
                      "description": "List of ports to expose from the Step's container. Exposing a port here gives\nthe system additional information about the network connections a\ncontainer uses, but is primarily informational. Not specifying a port here\nDOES NOT prevent that port from being exposed. Any port which is\nlistening on the default \"0.0.0.0\" address inside a container will be\naccessible from the network.\nCannot be updated.\n\nDeprecated: This field will be removed in a future release.",
                      "type": "array",
                      "items": {
                        "description": "ContainerPort represents a network port in a single container.",
                        "type": "object",
                        "required": [
                          "containerPort"
                        ],
                        "properties": {
                          "containerPort": {
                            "description": "Number of port to expose on the pod's IP address.\nThis must be a valid port number, 0 < x < 65536.",
                            "type": "integer",
                            "format": "int32"
                          },
                          "hostIP": {
                            "description": "What host IP to bind the external port to.",
                            "type": "string"
                          },
                          "hostPort": {
                            "description": "Number of port to expose on the host.\nIf specified, this must be a valid port number, 0 < x < 65536.\nIf HostNetwork is specified, this must match ContainerPort.\nMost containers do not need this.",
                            "type": "integer",
                            "format": "int32"
                          },
                          "name": {
                            "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each\nnamed port in a pod must have a unique name. Name for the port that can be\nreferred to by services.",
                            "type": "string"
                          },
                          "protocol": {
                            "description": "Protocol for port. Must be UDP, TCP, or SCTP.\nDefaults to \"TCP\".",
                            "type": "string"
                          }
                        }
                      },
                      "x-kubernetes-list-map-keys": [
                        "containerPort",
                        "protocol"
                      ],
                      "x-kubernetes-list-type": "map"
                    },
                    "readinessProbe": {
                      "description": "Periodic probe of container service readiness.\nStep will be removed from service endpoints if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n\nDeprecated: This field will be removed in a future release.",
                      "type": "object",
                      "properties": {
                        "exec": {
                          "description": "Exec specifies a command to execute in the container.",
                          "type": "object",
                          "properties": {
                            "command": {
                              "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "x-kubernetes-list-type": "atomic"
                            }
                          }
                        },
                        "failureThreshold": {
                          "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "grpc": {
                          "description": "GRPC specifies a GRPC HealthCheckRequest.",
                          "type": "object",
                          "required": [
                            "port"
                          ],
                          "properties": {
                            "port": {
                              "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "service": {
                              "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.",
                              "type": "string"
                            }
                          }
                        },
                        "httpGet": {
                          "description": "HTTPGet specifies an HTTP GET request to perform.",
                          "type": "object",
                          "required": [
                            "port"
                          ],
                          "properties": {
                            "host": {
                              "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                              "type": "string"
                            },
                            "httpHeaders": {
                              "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                              "type": "array",
                              "items": {
                                "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                "type": "object",
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The header field value",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "path": {
                              "description": "Path to access on the HTTP server.",
                              "type": "string"
                            },
                            "port": {
                              "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                              "x-kubernetes-int-or-string": true
                            },
                            "scheme": {
                              "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                              "type": "string"
                            }
                          }
                        },
                        "initialDelaySeconds": {
                          "description": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "type": "integer",
                          "format": "int32"
                        },
                        "periodSeconds": {
                          "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "successThreshold": {
                          "description": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "tcpSocket": {
                          "description": "TCPSocket specifies a connection to a TCP port.",
                          "type": "object",
                          "required": [
                            "port"
                          ],
                          "properties": {
                            "host": {
                              "description": "Optional: Host name to connect to, defaults to the pod IP.",
                              "type": "string"
                            },
                            "port": {
                              "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                              "x-kubernetes-int-or-string": true
                            }
                          }
                        },
                        "terminationGracePeriodSeconds": {
                          "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "timeoutSeconds": {
                          "description": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "ref": {
                      "description": "Contains the reference to an existing StepAction.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the referenced step",
                          "type": "string"
                        },
                        "params": {
                          "description": "Params contains the parameters used to identify the\nreferenced Tekton resource. Example entries might include\n\"repo\" or \"path\" but the set of params ultimately depends on\nthe chosen resolver.",
                          "type": "array",
                          "items": {
                            "description": "Param declares an ParamValues to use for the parameter called name.",
                            "type": "object",
                            "required": [
                              "name",
                              "value"
                            ],
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "value": {
                                "x-kubernetes-preserve-unknown-fields": true
                              }
                            }
                          },
                          "x-kubernetes-list-type": "atomic"
                        },
                        "resolver": {
                          "description": "Resolver is the name of the resolver that should perform\nresolution of the referenced Tekton resource, such as \"git\".",
                          "type": "string"
                        }
                      }
                    },
                    "resources": {
                      "description": "Compute Resources required by this Step.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": "object",
                      "properties": {
                        "claims": {
                          "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                          "type": "array",
                          "items": {
                            "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                            "type": "object",
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                                "type": "string"
                              },
                              "request": {
                                "description": "Request is the name chosen for a request in the referenced claim.\nIf empty, everything from the claim is made available, otherwise\nonly the result of this request.",
                                "type": "string"
                              }
                            }
                          },
                          "x-kubernetes-list-map-keys": [
                            "name"
                          ],
                          "x-kubernetes-list-type": "map"
                        },
                        "limits": {
                          "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                          "type": "object",
                          "additionalProperties": {
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          }
                        },
                        "requests": {
                          "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                          "type": "object",
                          "additionalProperties": {
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          }
                        }
                      }
                    },
                    "results": {
                      "description": "Results declares StepResults produced by the Step.\n\nIt can be used in an inlined Step when used to store Results to $(step.results.resultName.path).\nIt cannot be used when referencing StepActions using [v1beta1.Step.Ref].\nThe Results declared by the StepActions will be stored here instead.",
                      "type": "array",
                      "items": {
                        "description": "StepResult used to describe the Results of a Step.",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "description": {
                            "description": "Description is a human-readable description of the result",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name the given name",
                            "type": "string"
                          },
                          "properties": {
                            "description": "Properties is the JSON Schema properties to support key-value pairs results.",
                            "type": "object",
                            "additionalProperties": {
                              "description": "PropertySpec defines the struct for object keys",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "ParamType indicates the type of an input parameter;\nUsed to distinguish between a single string and an array of strings.",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "type": {
                            "description": "The possible types are 'string', 'array', and 'object', with 'string' as the default.",
                            "type": "string"
                          }
                        }
                      },
                      "x-kubernetes-list-type": "atomic"
                    },
                    "script": {
                      "description": "Script is the contents of an executable file to execute.\n\nIf Script is not empty, the Step cannot have an Command and the Args will be passed to the Script.",
                      "type": "string"
                    },
                    "securityContext": {
                      "description": "SecurityContext defines the security options the Step should be run with.\nIf set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.\nMore info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                      "type": "object",
                      "properties": {
                        "allowPrivilegeEscalation": {
                          "description": "AllowPrivilegeEscalation controls whether a process can gain more\nprivileges than its parent process. This bool directly controls if\nthe no_new_privs flag will be set on the container process.\nAllowPrivilegeEscalation is true always when the container is:\n1) run as Privileged\n2) has CAP_SYS_ADMIN\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "boolean"
                        },
                        "appArmorProfile": {
                          "description": "appArmorProfile is the AppArmor options to use by this container. If set, this profile\noverrides the pod's appArmorProfile.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "localhostProfile": {
                              "description": "localhostProfile indicates a profile loaded on the node that should be used.\nThe profile must be preconfigured on the node to work.\nMust match the loaded name of the profile.\nMust be set if and only if type is \"Localhost\".",
                              "type": "string"
                            },
                            "type": {
                              "description": "type indicates which kind of AppArmor profile will be applied.\nValid options are:\n  Localhost - a profile pre-loaded on the node.\n  RuntimeDefault - the container runtime's default profile.\n  Unconfined - no AppArmor enforcement.",
                              "type": "string"
                            }
                          }
                        },
                        "capabilities": {
                          "description": "The capabilities to add/drop when running containers.\nDefaults to the default set of capabilities granted by the container runtime.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "object",
                          "properties": {
                            "add": {
                              "description": "Added capabilities",
                              "type": "array",
                              "items": {
                                "description": "Capability represent POSIX capabilities type",
                                "type": "string"
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "drop": {
                              "description": "Removed capabilities",
                              "type": "array",
                              "items": {
                                "description": "Capability represent POSIX capabilities type",
                                "type": "string"
                              },
                              "x-kubernetes-list-type": "atomic"
                            }
                          }
                        },
                        "privileged": {
                          "description": "Run container in privileged mode.\nProcesses in privileged containers are essentially equivalent to root on the host.\nDefaults to false.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "boolean"
                        },
                        "procMount": {
                          "description": "procMount denotes the type of proc mount to use for the containers.\nThe default value is Default which uses the container runtime defaults for\nreadonly paths and masked paths.\nThis requires the ProcMountType feature flag to be enabled.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "string"
                        },
                        "readOnlyRootFilesystem": {
                          "description": "Whether this container has a read-only root filesystem.\nDefault is false.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "boolean"
                        },
                        "runAsGroup": {
                          "description": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "runAsNonRoot": {
                          "description": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                          "type": "boolean"
                        },
                        "runAsUser": {
                          "description": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "seLinuxOptions": {
                          "description": "The SELinux context to be applied to the container.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "object",
                          "properties": {
                            "level": {
                              "description": "Level is SELinux level label that applies to the container.",
                              "type": "string"
                            },
                            "role": {
                              "description": "Role is a SELinux role label that applies to the container.",
                              "type": "string"
                            },
                            "type": {
                              "description": "Type is a SELinux type label that applies to the container.",
                              "type": "string"
                            },
                            "user": {
                              "description": "User is a SELinux user label that applies to the container.",
                              "type": "string"
                            }
                          }
                        },
                        "seccompProfile": {
                          "description": "The seccomp options to use by this container. If seccomp options are\nprovided at both the pod & container level, the container options\noverride the pod options.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "localhostProfile": {
                              "description": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.",
                              "type": "string"
                            },
                            "type": {
                              "description": "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.",
                              "type": "string"
                            }
                          }
                        },
                        "windowsOptions": {
                          "description": "The Windows specific settings applied to all containers.\nIf unspecified, the options from the PodSecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux.",
                          "type": "object",
                          "properties": {
                            "gmsaCredentialSpec": {
                              "description": "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field.",
                              "type": "string"
                            },
                            "gmsaCredentialSpecName": {
                              "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
                              "type": "string"
                            },
                            "hostProcess": {
                              "description": "HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true.",
                              "type": "boolean"
                            },
                            "runAsUserName": {
                              "description": "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "startupProbe": {
                      "description": "DeprecatedStartupProbe indicates that the Pod this Step runs in has successfully initialized.\nIf specified, no other probes are executed until this completes successfully.\nIf this probe fails, the Pod will be restarted, just as if the livenessProbe failed.\nThis can be used to provide different probe parameters at the beginning of a Pod's lifecycle,\nwhen it might take a long time to load data or warm a cache, than during steady-state operation.\nThis cannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n\nDeprecated: This field will be removed in a future release.",
                      "type": "object",
                      "properties": {
                        "exec": {
                          "description": "Exec specifies a command to execute in the container.",
                          "type": "object",
                          "properties": {
                            "command": {
                              "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "x-kubernetes-list-type": "atomic"
                            }
                          }
                        },
                        "failureThreshold": {
                          "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "grpc": {
                          "description": "GRPC specifies a GRPC HealthCheckRequest.",
                          "type": "object",
                          "required": [
                            "port"
                          ],
                          "properties": {
                            "port": {
                              "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "service": {
                              "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.",
                              "type": "string"
                            }
                          }
                        },
                        "httpGet": {
                          "description": "HTTPGet specifies an HTTP GET request to perform.",
                          "type": "object",
                          "required": [
                            "port"
                          ],
                          "properties": {
                            "host": {
                              "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                              "type": "string"
                            },
                            "httpHeaders": {
                              "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                              "type": "array",
                              "items": {
                                "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                "type": "object",
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The header field value",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "path": {
                              "description": "Path to access on the HTTP server.",
                              "type": "string"
                            },
                            "port": {
                              "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                              "x-kubernetes-int-or-string": true
                            },
                            "scheme": {
                              "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                              "type": "string"
                            }
                          }
                        },
                        "initialDelaySeconds": {
                          "description": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "type": "integer",
                          "format": "int32"
                        },
                        "periodSeconds": {
                          "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "successThreshold": {
                          "description": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "tcpSocket": {
                          "description": "TCPSocket specifies a connection to a TCP port.",
                          "type": "object",
                          "required": [
                            "port"
                          ],
                          "properties": {
                            "host": {
                              "description": "Optional: Host name to connect to, defaults to the pod IP.",
                              "type": "string"
                            },
                            "port": {
                              "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                              "x-kubernetes-int-or-string": true
                            }
                          }
                        },
                        "terminationGracePeriodSeconds": {
                          "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "timeoutSeconds": {
                          "description": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "stderrConfig": {
                      "description": "Stores configuration for the stderr stream of the step.",
                      "type": "object",
                      "properties": {
                        "path": {
                          "description": "Path to duplicate stdout stream to on container's local filesystem.",
                          "type": "string"
                        }
                      }
                    },
                    "stdin": {
                      "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this\nis not set, reads from stdin in the container will always result in EOF.\nDefault is false.\n\nDeprecated: This field will be removed in a future release.",
                      "type": "boolean"
                    },
                    "stdinOnce": {
                      "description": "Whether the container runtime should close the stdin channel after it has been opened by\na single attach. When stdin is true the stdin stream will remain open across multiple attach\nsessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the\nfirst client attaches to stdin, and then remains open and accepts data until the client disconnects,\nat which time stdin is closed and remains closed until the container is restarted. If this\nflag is false, a container processes that reads from stdin will never receive an EOF.\nDefault is false\n\nDeprecated: This field will be removed in a future release.",
                      "type": "boolean"
                    },
                    "stdoutConfig": {
                      "description": "Stores configuration for the stdout stream of the step.",
                      "type": "object",
                      "properties": {
                        "path": {
                          "description": "Path to duplicate stdout stream to on container's local filesystem.",
                          "type": "string"
                        }
                      }
                    },
                    "terminationMessagePath": {
                      "description": "Deprecated: This field will be removed in a future release and can't be meaningfully used.",
                      "type": "string"
                    },
                    "terminationMessagePolicy": {
                      "description": "Deprecated: This field will be removed in a future release and can't be meaningfully used.",
                      "type": "string"
                    },
                    "timeout": {
                      "description": "Timeout is the time after which the step times out. Defaults to never.\nRefer to Go's ParseDuration documentation for expected format: https://golang.org/pkg/time/#ParseDuration",
                      "type": "string"
                    },
                    "tty": {
                      "description": "Whether this container should allocate a DeprecatedTTY for itself, also requires 'stdin' to be true.\nDefault is false.\n\nDeprecated: This field will be removed in a future release.",
                      "type": "boolean"
                    },
                    "volumeDevices": {
                      "description": "volumeDevices is the list of block devices to be used by the Step.",
                      "type": "array",
                      "items": {
                        "description": "volumeDevice describes a mapping of a raw block device within a container.",
                        "type": "object",
                        "required": [
                          "devicePath",
                          "name"
                        ],
                        "properties": {
                          "devicePath": {
                            "description": "devicePath is the path inside of the container that the device will be mapped to.",
                            "type": "string"
                          },
                          "name": {
                            "description": "name must match the name of a persistentVolumeClaim in the pod",
                            "type": "string"
                          }
                        }
                      },
                      "x-kubernetes-list-type": "atomic"
                    },
                    "volumeMounts": {
                      "description": "Volumes to mount into the Step's filesystem.\nCannot be updated.",
                      "type": "array",
                      "items": {
                        "description": "VolumeMount describes a mounting of a Volume within a container.",
                        "type": "object",
                        "required": [
                          "mountPath",
                          "name"
                        ],
                        "properties": {
                          "mountPath": {
                            "description": "Path within the container at which the volume should be mounted.  Must\nnot contain ':'.",
                            "type": "string"
                          },
                          "mountPropagation": {
                            "description": "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10.\nWhen RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified\n(which defaults to None).",
                            "type": "string"
                          },
                          "name": {
                            "description": "This must match the Name of a Volume.",
                            "type": "string"
                          },
                          "readOnly": {
                            "description": "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false.",
                            "type": "boolean"
                          },
                          "recursiveReadOnly": {
                            "description": "RecursiveReadOnly specifies whether read-only mounts should be handled\nrecursively.\n\nIf ReadOnly is false, this field has no meaning and must be unspecified.\n\nIf ReadOnly is true, and this field is set to Disabled, the mount is not made\nrecursively read-only.  If this field is set to IfPossible, the mount is made\nrecursively read-only, if it is supported by the container runtime.  If this\nfield is set to Enabled, the mount is made recursively read-only if it is\nsupported by the container runtime, otherwise the pod will not be started and\nan error will be generated to indicate the reason.\n\nIf this field is set to IfPossible or Enabled, MountPropagation must be set to\nNone (or be unspecified, which defaults to None).\n\nIf this field is not specified, it is treated as an equivalent of Disabled.",
                            "type": "string"
                          },
                          "subPath": {
                            "description": "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root).",
                            "type": "string"
                          },
                          "subPathExpr": {
                            "description": "Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.\nDefaults to \"\" (volume's root).\nSubPathExpr and SubPath are mutually exclusive.",
                            "type": "string"
                          }
                        }
                      },
                      "x-kubernetes-list-type": "atomic"
                    },
                    "when": {
                      "description": "WhenExpressions are used to specify whether a Task should be executed or skipped\nAll of them need to evaluate to True for a guarded Task to be executed.",
                      "type": "array",
                      "items": {
                        "description": "WhenExpression allows a PipelineTask to declare expressions to be evaluated before the Task is run\nto determine whether the Task should be executed or skipped",
                        "type": "object",
                        "properties": {
                          "cel": {
                            "description": "CEL is a string of Common Language Expression, which can be used to conditionally execute\nthe task based on the result of the expression evaluation\nMore info about CEL syntax: https://github.com/google/cel-spec/blob/master/doc/langdef.md",
                            "type": "string"
                          },
                          "input": {
                            "description": "Input is the string for guard checking which can be a static input or an output from a parent Task",
                            "type": "string"
                          },
                          "operator": {
                            "description": "Operator that represents an Input's relationship to the values",
                            "type": "string"
                          },
                          "values": {
                            "description": "Values is an array of strings, which is compared against the input, for guard checking\nIt must be non-empty",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "atomic"
                          }
                        }
                      }
                    },
                    "workingDir": {
                      "description": "Step's working directory.\nIf not specified, the container runtime's default will be used, which\nmight be configured in the container image.\nCannot be updated.",
                      "type": "string"
                    },
                    "workspaces": {
                      "description": "This is an alpha field. You must set the \"enable-api-fields\" feature flag to \"alpha\"\nfor this field to be supported.\n\nWorkspaces is a list of workspaces from the Task that this Step wants\nexclusive access to. Adding a workspace to this list means that any\nother Step or Sidecar that does not also request this Workspace will\nnot have access to it.",
                      "type": "array",
                      "items": {
                        "description": "WorkspaceUsage is used by a Step or Sidecar to declare that it wants isolated access\nto a Workspace defined in a Task.",
                        "type": "object",
                        "required": [
                          "mountPath",
                          "name"
                        ],
                        "properties": {
                          "mountPath": {
                            "description": "MountPath is the path that the workspace should be mounted to inside the Step or Sidecar,\noverriding any MountPath specified in the Task's WorkspaceDeclaration.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name is the name of the workspace this Step or Sidecar wants access to.",
                            "type": "string"
                          }
                        }
                      },
                      "x-kubernetes-list-type": "atomic"
                    }
                  }
                },
                "x-kubernetes-list-type": "atomic"
              },
              "volumes": {
                "description": "Volumes is a collection of volumes that are available to mount into the\nsteps of the build.\nSee Pod.spec.volumes (API version: v1)",
                "x-kubernetes-preserve-unknown-fields": true
              },
              "workspaces": {
                "description": "Workspaces are the volumes that this Task requires.",
                "type": "array",
                "items": {
                  "description": "WorkspaceDeclaration is a declaration of a volume that a Task requires.",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "description": {
                      "description": "Description is an optional human readable description of this volume.",
                      "type": "string"
                    },
                    "mountPath": {
                      "description": "MountPath overrides the directory that the volume will be made available at.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name by which you can bind the volume at runtime.",
                      "type": "string"
                    },
                    "optional": {
                      "description": "Optional marks a Workspace as not being required in TaskRuns. By default\nthis field is false and so declared workspaces are required.",
                      "type": "boolean"
                    },
                    "readOnly": {
                      "description": "ReadOnly dictates whether a mounted volume is writable. By default this\nfield is false and so mounted volumes are writable.",
                      "type": "boolean"
                    }
                  }
                },
                "x-kubernetes-list-type": "atomic"
              }
            }
          }
        },
        "x-kubernetes-group-version-kind": [
          {
            "group": "tekton.dev",
            "kind": "Task",
            "version": "v1beta1"
          }
        ],
        "x-kubernetes-selectable-fields": []
      }
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
      "type": "object",
      "properties": {
        "continue": {
          "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",
          "type": "string"
        },
        "remainingItemCount": {
          "description": "remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.",
          "type": "integer",
          "format": "int64"
        },
        "resourceVersion": {
          "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type": "string"
        },
        "selfLink": {
          "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
          "type": "string"
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "tekton.dev",
      "kind": "TaskList",
      "version": "v1beta1"
    }
  ],
  "x-kubernetes-selectable-fields": [],
  "$schema": "http://json-schema.org/schema#"
}