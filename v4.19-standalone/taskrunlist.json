{
  "description": "TaskRunList is a list of TaskRun",
  "type": "object",
  "required": [
    "items"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "items": {
      "description": "List of taskruns. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
      "type": "array",
      "items": {
        "description": "TaskRun represents a single execution of a Task. TaskRuns are how the steps\nspecified in a Task are executed; they specify the parameters and resources\nused to run the steps in a Task.\n\nDeprecated: Please use v1.TaskRun instead.",
        "type": "object",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
            "type": "object",
            "properties": {
              "annotations": {
                "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "creationTimestamp": {
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                "type": "string",
                "format": "date-time"
              },
              "deletionGracePeriodSeconds": {
                "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
                "type": "integer",
                "format": "int64"
              },
              "deletionTimestamp": {
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                "type": "string",
                "format": "date-time"
              },
              "finalizers": {
                "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "x-kubernetes-list-type": "set",
                "x-kubernetes-patch-strategy": "merge"
              },
              "generateName": {
                "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                "type": "string"
              },
              "generation": {
                "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
                "type": "integer",
                "format": "int64"
              },
              "labels": {
                "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "managedFields": {
                "description": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
                "type": "array",
                "items": {
                  "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
                  "type": "object",
                  "properties": {
                    "apiVersion": {
                      "description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
                      "type": "string"
                    },
                    "fieldsType": {
                      "description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
                      "type": "string"
                    },
                    "fieldsV1": {
                      "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff",
                      "type": "object"
                    },
                    "manager": {
                      "description": "Manager is an identifier of the workflow managing these fields.",
                      "type": "string"
                    },
                    "operation": {
                      "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
                      "type": "string"
                    },
                    "subresource": {
                      "description": "Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.",
                      "type": "string"
                    },
                    "time": {
                      "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "x-kubernetes-list-type": "atomic"
              },
              "name": {
                "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
                "type": "string"
              },
              "namespace": {
                "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces",
                "type": "string"
              },
              "ownerReferences": {
                "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
                "type": "array",
                "items": {
                  "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
                  "type": "object",
                  "required": [
                    "apiVersion",
                    "kind",
                    "name",
                    "uid"
                  ],
                  "properties": {
                    "apiVersion": {
                      "description": "API version of the referent.",
                      "type": "string"
                    },
                    "blockOwnerDeletion": {
                      "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
                      "type": "boolean"
                    },
                    "controller": {
                      "description": "If true, this reference points to the managing controller.",
                      "type": "boolean"
                    },
                    "kind": {
                      "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
                      "type": "string"
                    },
                    "uid": {
                      "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
                      "type": "string"
                    }
                  },
                  "x-kubernetes-map-type": "atomic"
                },
                "x-kubernetes-list-map-keys": [
                  "uid"
                ],
                "x-kubernetes-list-type": "map",
                "x-kubernetes-patch-merge-key": "uid",
                "x-kubernetes-patch-strategy": "merge"
              },
              "resourceVersion": {
                "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                "type": "string"
              },
              "selfLink": {
                "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
                "type": "string"
              },
              "uid": {
                "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
                "type": "string"
              }
            }
          },
          "spec": {
            "description": "TaskRunSpec defines the desired state of TaskRun",
            "type": "object",
            "properties": {
              "computeResources": {
                "description": "Compute resources to use for this TaskRun",
                "type": "object",
                "properties": {
                  "claims": {
                    "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                    "type": "array",
                    "items": {
                      "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                          "type": "string"
                        },
                        "request": {
                          "description": "Request is the name chosen for a request in the referenced claim.\nIf empty, everything from the claim is made available, otherwise\nonly the result of this request.",
                          "type": "string"
                        }
                      }
                    },
                    "x-kubernetes-list-map-keys": [
                      "name"
                    ],
                    "x-kubernetes-list-type": "map"
                  },
                  "limits": {
                    "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                    "type": "object",
                    "additionalProperties": {
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "x-kubernetes-int-or-string": true
                    }
                  },
                  "requests": {
                    "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                    "type": "object",
                    "additionalProperties": {
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "x-kubernetes-int-or-string": true
                    }
                  }
                }
              },
              "debug": {
                "description": "TaskRunDebug defines the breakpoint config for a particular TaskRun",
                "type": "object",
                "properties": {
                  "breakpoints": {
                    "description": "TaskBreakpoints defines the breakpoint config for a particular Task",
                    "type": "object",
                    "properties": {
                      "beforeSteps": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "atomic"
                      },
                      "onFailure": {
                        "description": "if enabled, pause TaskRun on failure of a step\nfailed step will not exit",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "params": {
                "description": "Params is a list of Param",
                "type": "array",
                "items": {
                  "description": "Param declares an ParamValues to use for the parameter called name.",
                  "type": "object",
                  "required": [
                    "name",
                    "value"
                  ],
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "x-kubernetes-preserve-unknown-fields": true
                    }
                  }
                },
                "x-kubernetes-list-type": "atomic"
              },
              "podTemplate": {
                "description": "PodTemplate holds pod specific configuration",
                "type": "object",
                "properties": {
                  "affinity": {
                    "description": "If specified, the pod's scheduling constraints.\nSee Pod.spec.affinity (API version: v1)",
                    "x-kubernetes-preserve-unknown-fields": true
                  },
                  "automountServiceAccountToken": {
                    "description": "AutomountServiceAccountToken indicates whether pods running as this\nservice account should have an API token automatically mounted.",
                    "type": "boolean"
                  },
                  "dnsConfig": {
                    "description": "Specifies the DNS parameters of a pod.\nParameters specified here will be merged to the generated DNS\nconfiguration based on DNSPolicy.",
                    "type": "object",
                    "properties": {
                      "nameservers": {
                        "description": "A list of DNS name server IP addresses.\nThis will be appended to the base nameservers generated from DNSPolicy.\nDuplicated nameservers will be removed.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "atomic"
                      },
                      "options": {
                        "description": "A list of DNS resolver options.\nThis will be merged with the base options generated from DNSPolicy.\nDuplicated entries will be removed. Resolution options given in Options\nwill override those that appear in the base DNSPolicy.",
                        "type": "array",
                        "items": {
                          "description": "PodDNSConfigOption defines DNS resolver options of a pod.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Name is this DNS resolver option's name.\nRequired.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Value is this DNS resolver option's value.",
                              "type": "string"
                            }
                          }
                        },
                        "x-kubernetes-list-type": "atomic"
                      },
                      "searches": {
                        "description": "A list of DNS search domains for host-name lookup.\nThis will be appended to the base search paths generated from DNSPolicy.\nDuplicated search paths will be removed.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "atomic"
                      }
                    }
                  },
                  "dnsPolicy": {
                    "description": "Set DNS policy for the pod. Defaults to \"ClusterFirst\". Valid values are\n'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig\nwill be merged with the policy selected with DNSPolicy.",
                    "type": "string"
                  },
                  "enableServiceLinks": {
                    "description": "EnableServiceLinks indicates whether information about services should be injected into pod's\nenvironment variables, matching the syntax of Docker links.\nOptional: Defaults to true.",
                    "type": "boolean"
                  },
                  "env": {
                    "description": "List of environment variables that can be provided to the containers belonging to the pod.",
                    "type": "array",
                    "items": {
                      "description": "EnvVar represents an environment variable present in a Container.",
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                          "type": "string"
                        },
                        "value": {
                          "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                          "type": "string"
                        },
                        "valueFrom": {
                          "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                          "type": "object",
                          "properties": {
                            "configMapKeyRef": {
                              "description": "Selects a key of a ConfigMap.",
                              "type": "object",
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "key": {
                                  "description": "The key to select.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string"
                                },
                                "optional": {
                                  "description": "Specify whether the ConfigMap or its key must be defined",
                                  "type": "boolean"
                                }
                              },
                              "x-kubernetes-map-type": "atomic"
                            },
                            "fieldRef": {
                              "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                              "type": "object",
                              "required": [
                                "fieldPath"
                              ],
                              "properties": {
                                "apiVersion": {
                                  "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                  "type": "string"
                                },
                                "fieldPath": {
                                  "description": "Path of the field to select in the specified API version.",
                                  "type": "string"
                                }
                              },
                              "x-kubernetes-map-type": "atomic"
                            },
                            "resourceFieldRef": {
                              "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                              "type": "object",
                              "required": [
                                "resource"
                              ],
                              "properties": {
                                "containerName": {
                                  "description": "Container name: required for volumes, optional for env vars",
                                  "type": "string"
                                },
                                "divisor": {
                                  "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                  "x-kubernetes-int-or-string": true
                                },
                                "resource": {
                                  "description": "Required: resource to select",
                                  "type": "string"
                                }
                              },
                              "x-kubernetes-map-type": "atomic"
                            },
                            "secretKeyRef": {
                              "description": "Selects a key of a secret in the pod's namespace",
                              "type": "object",
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "key": {
                                  "description": "The key of the secret to select from.  Must be a valid secret key.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string"
                                },
                                "optional": {
                                  "description": "Specify whether the Secret or its key must be defined",
                                  "type": "boolean"
                                }
                              },
                              "x-kubernetes-map-type": "atomic"
                            }
                          }
                        }
                      }
                    },
                    "x-kubernetes-list-type": "atomic"
                  },
                  "hostAliases": {
                    "description": "HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts\nfile if specified. This is only valid for non-hostNetwork pods.",
                    "type": "array",
                    "items": {
                      "description": "HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the\npod's hosts file.",
                      "type": "object",
                      "required": [
                        "ip"
                      ],
                      "properties": {
                        "hostnames": {
                          "description": "Hostnames for the above IP address.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "atomic"
                        },
                        "ip": {
                          "description": "IP address of the host file entry.",
                          "type": "string"
                        }
                      }
                    },
                    "x-kubernetes-list-type": "atomic"
                  },
                  "hostNetwork": {
                    "description": "HostNetwork specifies whether the pod may use the node network namespace",
                    "type": "boolean"
                  },
                  "imagePullSecrets": {
                    "description": "ImagePullSecrets gives the name of the secret used by the pod to pull the image if specified",
                    "type": "array",
                    "items": {
                      "description": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": "string"
                        }
                      },
                      "x-kubernetes-map-type": "atomic"
                    },
                    "x-kubernetes-list-type": "atomic"
                  },
                  "nodeSelector": {
                    "description": "NodeSelector is a selector which must be true for the pod to fit on a node.\nSelector which must match a node's labels for the pod to be scheduled on that node.\nMore info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "priorityClassName": {
                    "description": "If specified, indicates the pod's priority. \"system-node-critical\" and\n\"system-cluster-critical\" are two special keywords which indicate the\nhighest priorities with the former being the highest priority. Any other\nname must be defined by creating a PriorityClass object with that name.\nIf not specified, the pod priority will be default or zero if there is no\ndefault.",
                    "type": "string"
                  },
                  "runtimeClassName": {
                    "description": "RuntimeClassName refers to a RuntimeClass object in the node.k8s.io\ngroup, which should be used to run this pod. If no RuntimeClass resource\nmatches the named class, the pod will not be run. If unset or empty, the\n\"legacy\" RuntimeClass will be used, which is an implicit class with an\nempty definition that uses the default runtime handler.\nMore info: https://git.k8s.io/enhancements/keps/sig-node/runtime-class.md\nThis is a beta feature as of Kubernetes v1.14.",
                    "type": "string"
                  },
                  "schedulerName": {
                    "description": "SchedulerName specifies the scheduler to be used to dispatch the Pod",
                    "type": "string"
                  },
                  "securityContext": {
                    "description": "SecurityContext holds pod-level security attributes and common container settings.\nOptional: Defaults to empty.  See type description for default values of each field.\nSee Pod.spec.securityContext (API version: v1)",
                    "x-kubernetes-preserve-unknown-fields": true
                  },
                  "tolerations": {
                    "description": "If specified, the pod's tolerations.",
                    "type": "array",
                    "items": {
                      "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>.",
                      "type": "object",
                      "properties": {
                        "effect": {
                          "description": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                          "type": "string"
                        },
                        "key": {
                          "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                          "type": "string"
                        },
                        "operator": {
                          "description": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.",
                          "type": "string"
                        },
                        "tolerationSeconds": {
                          "description": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "value": {
                          "description": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.",
                          "type": "string"
                        }
                      }
                    },
                    "x-kubernetes-list-type": "atomic"
                  },
                  "topologySpreadConstraints": {
                    "description": "TopologySpreadConstraints controls how Pods are spread across your cluster among\nfailure-domains such as regions, zones, nodes, and other user-defined topology domains.",
                    "type": "array",
                    "items": {
                      "description": "TopologySpreadConstraint specifies how to spread matching pods among the given topology.",
                      "type": "object",
                      "required": [
                        "maxSkew",
                        "topologyKey",
                        "whenUnsatisfiable"
                      ],
                      "properties": {
                        "labelSelector": {
                          "description": "LabelSelector is used to find matching pods.\nPods that match this label selector are counted to determine the number of pods\nin their corresponding topology domain.",
                          "type": "object",
                          "properties": {
                            "matchExpressions": {
                              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                              "type": "array",
                              "items": {
                                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                "type": "object",
                                "required": [
                                  "key",
                                  "operator"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "key is the label key that the selector applies to.",
                                    "type": "string"
                                  },
                                  "operator": {
                                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                    "type": "string"
                                  },
                                  "values": {
                                    "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  }
                                }
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "matchLabels": {
                              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          },
                          "x-kubernetes-map-type": "atomic"
                        },
                        "matchLabelKeys": {
                          "description": "MatchLabelKeys is a set of pod label keys to select the pods over which\nspreading will be calculated. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are ANDed with labelSelector\nto select the group of existing pods over which spreading will be calculated\nfor the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nMatchLabelKeys cannot be set when LabelSelector isn't set.\nKeys that don't exist in the incoming pod labels will\nbe ignored. A null or empty list means only match against labelSelector.\n\nThis is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "atomic"
                        },
                        "maxSkew": {
                          "description": "MaxSkew describes the degree to which pods may be unevenly distributed.\nWhen `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference\nbetween the number of matching pods in the target topology and the global minimum.\nThe global minimum is the minimum number of matching pods in an eligible domain\nor zero if the number of eligible domains is less than MinDomains.\nFor example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same\nlabelSelector spread as 2/2/1:\nIn this case, the global minimum is 1.\n| zone1 | zone2 | zone3 |\n|  P P  |  P P  |   P   |\n- if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2;\nscheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2)\nviolate MaxSkew(1).\n- if MaxSkew is 2, incoming pod can be scheduled onto any zone.\nWhen `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence\nto topologies that satisfy it.\nIt's a required field. Default value is 1 and 0 is not allowed.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "minDomains": {
                          "description": "MinDomains indicates a minimum number of eligible domains.\nWhen the number of eligible domains with matching topology keys is less than minDomains,\nPod Topology Spread treats \"global minimum\" as 0, and then the calculation of Skew is performed.\nAnd when the number of eligible domains with matching topology keys equals or greater than minDomains,\nthis value has no effect on scheduling.\nAs a result, when the number of eligible domains is less than minDomains,\nscheduler won't schedule more than maxSkew Pods to those domains.\nIf value is nil, the constraint behaves as if MinDomains is equal to 1.\nValid values are integers greater than 0.\nWhen value is not nil, WhenUnsatisfiable must be DoNotSchedule.\n\nFor example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same\nlabelSelector spread as 2/2/2:\n| zone1 | zone2 | zone3 |\n|  P P  |  P P  |  P P  |\nThe number of domains is less than 5(MinDomains), so \"global minimum\" is treated as 0.\nIn this situation, new pod with the same labelSelector cannot be scheduled,\nbecause computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,\nit will violate MaxSkew.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "nodeAffinityPolicy": {
                          "description": "NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector\nwhen calculating pod topology spread skew. Options are:\n- Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations.\n- Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.\n\nIf this value is nil, the behavior is equivalent to the Honor policy.\nThis is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.",
                          "type": "string"
                        },
                        "nodeTaintsPolicy": {
                          "description": "NodeTaintsPolicy indicates how we will treat node taints when calculating\npod topology spread skew. Options are:\n- Honor: nodes without taints, along with tainted nodes for which the incoming pod\nhas a toleration, are included.\n- Ignore: node taints are ignored. All nodes are included.\n\nIf this value is nil, the behavior is equivalent to the Ignore policy.\nThis is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.",
                          "type": "string"
                        },
                        "topologyKey": {
                          "description": "TopologyKey is the key of node labels. Nodes that have a label with this key\nand identical values are considered to be in the same topology.\nWe consider each <key, value> as a \"bucket\", and try to put balanced number\nof pods into each bucket.\nWe define a domain as a particular instance of a topology.\nAlso, we define an eligible domain as a domain whose nodes meet the requirements of\nnodeAffinityPolicy and nodeTaintsPolicy.\ne.g. If TopologyKey is \"kubernetes.io/hostname\", each Node is a domain of that topology.\nAnd, if TopologyKey is \"topology.kubernetes.io/zone\", each zone is a domain of that topology.\nIt's a required field.",
                          "type": "string"
                        },
                        "whenUnsatisfiable": {
                          "description": "WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy\nthe spread constraint.\n- DoNotSchedule (default) tells the scheduler not to schedule it.\n- ScheduleAnyway tells the scheduler to schedule the pod in any location,\n  but giving higher precedence to topologies that would help reduce the\n  skew.\nA constraint is considered \"Unsatisfiable\" for an incoming pod\nif and only if every possible node assignment for that pod would violate\n\"MaxSkew\" on some topology.\nFor example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same\nlabelSelector spread as 3/1/1:\n| zone1 | zone2 | zone3 |\n| P P P |   P   |   P   |\nIf WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled\nto zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies\nMaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler\nwon't make it *more* imbalanced.\nIt's a required field.",
                          "type": "string"
                        }
                      }
                    },
                    "x-kubernetes-list-type": "atomic"
                  },
                  "volumes": {
                    "description": "List of volumes that can be mounted by containers belonging to the pod.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes\nSee Pod.spec.volumes (API version: v1)",
                    "x-kubernetes-preserve-unknown-fields": true
                  }
                }
              },
              "resources": {
                "description": "Deprecated: Unused, preserved only for backwards compatibility",
                "type": "object",
                "properties": {
                  "inputs": {
                    "description": "Inputs holds the inputs resources this task was invoked with",
                    "type": "array",
                    "items": {
                      "description": "TaskResourceBinding points to the PipelineResource that\nwill be used for the Task input or output called Name.\n\nDeprecated: Unused, preserved only for backwards compatibility",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name is the name of the PipelineResource in the Pipeline's declaration",
                          "type": "string"
                        },
                        "paths": {
                          "description": "Paths will probably be removed in #1284, and then PipelineResourceBinding can be used instead.\nThe optional Path field corresponds to a path on disk at which the Resource can be found\n(used when providing the resource via mounted volume, overriding the default logic to fetch the Resource).",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "atomic"
                        },
                        "resourceRef": {
                          "description": "ResourceRef is a reference to the instance of the actual PipelineResource\nthat should be used",
                          "type": "object",
                          "properties": {
                            "apiVersion": {
                              "description": "API version of the referent",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                              "type": "string"
                            }
                          }
                        },
                        "resourceSpec": {
                          "description": "ResourceSpec is specification of a resource that should be created and\nconsumed by the task",
                          "type": "object",
                          "required": [
                            "params",
                            "type"
                          ],
                          "properties": {
                            "description": {
                              "description": "Description is a user-facing description of the resource that may be\nused to populate a UI.",
                              "type": "string"
                            },
                            "params": {
                              "type": "array",
                              "items": {
                                "description": "ResourceParam declares a string value to use for the parameter called Name, and is used in\nthe specific context of PipelineResources.\n\nDeprecated: Unused, preserved only for backwards compatibility",
                                "type": "object",
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                }
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "secrets": {
                              "description": "Secrets to fetch to populate some of resource fields",
                              "type": "array",
                              "items": {
                                "description": "SecretParam indicates which secret can be used to populate a field of the resource\n\nDeprecated: Unused, preserved only for backwards compatibility",
                                "type": "object",
                                "required": [
                                  "fieldName",
                                  "secretKey",
                                  "secretName"
                                ],
                                "properties": {
                                  "fieldName": {
                                    "type": "string"
                                  },
                                  "secretKey": {
                                    "type": "string"
                                  },
                                  "secretName": {
                                    "type": "string"
                                  }
                                }
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "type": {
                              "description": "PipelineResourceType represents the type of endpoint the pipelineResource is, so that the\ncontroller will know this pipelineResource shouldx be fetched and optionally what\nadditional metatdata should be provided for it.\n\nDeprecated: Unused, preserved only for backwards compatibility",
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "x-kubernetes-list-type": "atomic"
                  },
                  "outputs": {
                    "description": "Outputs holds the inputs resources this task was invoked with",
                    "type": "array",
                    "items": {
                      "description": "TaskResourceBinding points to the PipelineResource that\nwill be used for the Task input or output called Name.\n\nDeprecated: Unused, preserved only for backwards compatibility",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name is the name of the PipelineResource in the Pipeline's declaration",
                          "type": "string"
                        },
                        "paths": {
                          "description": "Paths will probably be removed in #1284, and then PipelineResourceBinding can be used instead.\nThe optional Path field corresponds to a path on disk at which the Resource can be found\n(used when providing the resource via mounted volume, overriding the default logic to fetch the Resource).",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "atomic"
                        },
                        "resourceRef": {
                          "description": "ResourceRef is a reference to the instance of the actual PipelineResource\nthat should be used",
                          "type": "object",
                          "properties": {
                            "apiVersion": {
                              "description": "API version of the referent",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                              "type": "string"
                            }
                          }
                        },
                        "resourceSpec": {
                          "description": "ResourceSpec is specification of a resource that should be created and\nconsumed by the task",
                          "type": "object",
                          "required": [
                            "params",
                            "type"
                          ],
                          "properties": {
                            "description": {
                              "description": "Description is a user-facing description of the resource that may be\nused to populate a UI.",
                              "type": "string"
                            },
                            "params": {
                              "type": "array",
                              "items": {
                                "description": "ResourceParam declares a string value to use for the parameter called Name, and is used in\nthe specific context of PipelineResources.\n\nDeprecated: Unused, preserved only for backwards compatibility",
                                "type": "object",
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                }
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "secrets": {
                              "description": "Secrets to fetch to populate some of resource fields",
                              "type": "array",
                              "items": {
                                "description": "SecretParam indicates which secret can be used to populate a field of the resource\n\nDeprecated: Unused, preserved only for backwards compatibility",
                                "type": "object",
                                "required": [
                                  "fieldName",
                                  "secretKey",
                                  "secretName"
                                ],
                                "properties": {
                                  "fieldName": {
                                    "type": "string"
                                  },
                                  "secretKey": {
                                    "type": "string"
                                  },
                                  "secretName": {
                                    "type": "string"
                                  }
                                }
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "type": {
                              "description": "PipelineResourceType represents the type of endpoint the pipelineResource is, so that the\ncontroller will know this pipelineResource shouldx be fetched and optionally what\nadditional metatdata should be provided for it.\n\nDeprecated: Unused, preserved only for backwards compatibility",
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "x-kubernetes-list-type": "atomic"
                  }
                }
              },
              "retries": {
                "description": "Retries represents how many times this TaskRun should be retried in the event of Task failure.",
                "type": "integer"
              },
              "serviceAccountName": {
                "type": "string"
              },
              "sidecarOverrides": {
                "description": "Overrides to apply to Sidecars in this TaskRun.\nIf a field is specified in both a Sidecar and a SidecarOverride,\nthe value from the SidecarOverride will be used.\nThis field is only supported when the alpha feature gate is enabled.",
                "type": "array",
                "items": {
                  "description": "TaskRunSidecarOverride is used to override the values of a Sidecar in the corresponding Task.",
                  "type": "object",
                  "required": [
                    "name",
                    "resources"
                  ],
                  "properties": {
                    "name": {
                      "description": "The name of the Sidecar to override.",
                      "type": "string"
                    },
                    "resources": {
                      "description": "The resource requirements to apply to the Sidecar.",
                      "type": "object",
                      "properties": {
                        "claims": {
                          "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                          "type": "array",
                          "items": {
                            "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                            "type": "object",
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                                "type": "string"
                              },
                              "request": {
                                "description": "Request is the name chosen for a request in the referenced claim.\nIf empty, everything from the claim is made available, otherwise\nonly the result of this request.",
                                "type": "string"
                              }
                            }
                          },
                          "x-kubernetes-list-map-keys": [
                            "name"
                          ],
                          "x-kubernetes-list-type": "map"
                        },
                        "limits": {
                          "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                          "type": "object",
                          "additionalProperties": {
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          }
                        },
                        "requests": {
                          "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                          "type": "object",
                          "additionalProperties": {
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          }
                        }
                      }
                    }
                  }
                },
                "x-kubernetes-list-type": "atomic"
              },
              "status": {
                "description": "Used for cancelling a TaskRun (and maybe more later on)",
                "type": "string"
              },
              "statusMessage": {
                "description": "Status message for cancellation.",
                "type": "string"
              },
              "stepOverrides": {
                "description": "Overrides to apply to Steps in this TaskRun.\nIf a field is specified in both a Step and a StepOverride,\nthe value from the StepOverride will be used.\nThis field is only supported when the alpha feature gate is enabled.",
                "type": "array",
                "items": {
                  "description": "TaskRunStepOverride is used to override the values of a Step in the corresponding Task.",
                  "type": "object",
                  "required": [
                    "name",
                    "resources"
                  ],
                  "properties": {
                    "name": {
                      "description": "The name of the Step to override.",
                      "type": "string"
                    },
                    "resources": {
                      "description": "The resource requirements to apply to the Step.",
                      "type": "object",
                      "properties": {
                        "claims": {
                          "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                          "type": "array",
                          "items": {
                            "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                            "type": "object",
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                                "type": "string"
                              },
                              "request": {
                                "description": "Request is the name chosen for a request in the referenced claim.\nIf empty, everything from the claim is made available, otherwise\nonly the result of this request.",
                                "type": "string"
                              }
                            }
                          },
                          "x-kubernetes-list-map-keys": [
                            "name"
                          ],
                          "x-kubernetes-list-type": "map"
                        },
                        "limits": {
                          "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                          "type": "object",
                          "additionalProperties": {
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          }
                        },
                        "requests": {
                          "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                          "type": "object",
                          "additionalProperties": {
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          }
                        }
                      }
                    }
                  }
                },
                "x-kubernetes-list-type": "atomic"
              },
              "taskRef": {
                "description": "no more than one of the TaskRef and TaskSpec may be specified.",
                "type": "object",
                "properties": {
                  "apiVersion": {
                    "description": "API version of the referent\nNote: A Task with non-empty APIVersion and Kind is considered a Custom Task",
                    "type": "string"
                  },
                  "bundle": {
                    "description": "Bundle url reference to a Tekton Bundle.\n\nDeprecated: Please use ResolverRef with the bundles resolver instead.\nThe field is staying there for go client backward compatibility, but is not used/allowed anymore.",
                    "type": "string"
                  },
                  "kind": {
                    "description": "TaskKind indicates the Kind of the Task:\n1. Namespaced Task when Kind is set to \"Task\". If Kind is \"\", it defaults to \"Task\".\n2. Custom Task when Kind is non-empty and APIVersion is non-empty",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                    "type": "string"
                  },
                  "params": {
                    "description": "Params contains the parameters used to identify the\nreferenced Tekton resource. Example entries might include\n\"repo\" or \"path\" but the set of params ultimately depends on\nthe chosen resolver.",
                    "type": "array",
                    "items": {
                      "description": "Param declares an ParamValues to use for the parameter called name.",
                      "type": "object",
                      "required": [
                        "name",
                        "value"
                      ],
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "value": {
                          "x-kubernetes-preserve-unknown-fields": true
                        }
                      }
                    },
                    "x-kubernetes-list-type": "atomic"
                  },
                  "resolver": {
                    "description": "Resolver is the name of the resolver that should perform\nresolution of the referenced Tekton resource, such as \"git\".",
                    "type": "string"
                  }
                }
              },
              "taskSpec": {
                "description": "Specifying TaskSpec can be disabled by setting\n`disable-inline-spec` feature flag.\nSee Task.spec (API version: tekton.dev/v1beta1)",
                "x-kubernetes-preserve-unknown-fields": true
              },
              "timeout": {
                "description": "Time after which one retry attempt times out. Defaults to 1 hour.\nRefer Go's ParseDuration documentation for expected format: https://golang.org/pkg/time/#ParseDuration",
                "type": "string"
              },
              "workspaces": {
                "description": "Workspaces is a list of WorkspaceBindings from volumes to workspaces.",
                "type": "array",
                "items": {
                  "description": "WorkspaceBinding maps a Task's declared workspace to a Volume.",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "configMap": {
                      "description": "ConfigMap represents a configMap that should populate this workspace.",
                      "type": "object",
                      "properties": {
                        "defaultMode": {
                          "description": "defaultMode is optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDefaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "items": {
                          "description": "items if unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.",
                          "type": "array",
                          "items": {
                            "description": "Maps a string key to a path within a volume.",
                            "type": "object",
                            "required": [
                              "key",
                              "path"
                            ],
                            "properties": {
                              "key": {
                                "description": "key is the key to project.",
                                "type": "string"
                              },
                              "mode": {
                                "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                "type": "integer",
                                "format": "int32"
                              },
                              "path": {
                                "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                                "type": "string"
                              }
                            }
                          },
                          "x-kubernetes-list-type": "atomic"
                        },
                        "name": {
                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": "string"
                        },
                        "optional": {
                          "description": "optional specify whether the ConfigMap or its keys must be defined",
                          "type": "boolean"
                        }
                      },
                      "x-kubernetes-map-type": "atomic"
                    },
                    "csi": {
                      "description": "CSI (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers.",
                      "type": "object",
                      "required": [
                        "driver"
                      ],
                      "properties": {
                        "driver": {
                          "description": "driver is the name of the CSI driver that handles this volume.\nConsult with your admin for the correct name as registered in the cluster.",
                          "type": "string"
                        },
                        "fsType": {
                          "description": "fsType to mount. Ex. \"ext4\", \"xfs\", \"ntfs\".\nIf not provided, the empty value is passed to the associated CSI driver\nwhich will determine the default filesystem to apply.",
                          "type": "string"
                        },
                        "nodePublishSecretRef": {
                          "description": "nodePublishSecretRef is a reference to the secret object containing\nsensitive information to pass to the CSI driver to complete the CSI\nNodePublishVolume and NodeUnpublishVolume calls.\nThis field is optional, and  may be empty if no secret is required. If the\nsecret object contains more than one secret, all secret references are passed.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type": "string"
                            }
                          },
                          "x-kubernetes-map-type": "atomic"
                        },
                        "readOnly": {
                          "description": "readOnly specifies a read-only configuration for the volume.\nDefaults to false (read/write).",
                          "type": "boolean"
                        },
                        "volumeAttributes": {
                          "description": "volumeAttributes stores driver-specific properties that are passed to the CSI\ndriver. Consult your driver's documentation for supported values.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "emptyDir": {
                      "description": "EmptyDir represents a temporary directory that shares a Task's lifetime.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir\nEither this OR PersistentVolumeClaim can be used.",
                      "type": "object",
                      "properties": {
                        "medium": {
                          "description": "medium represents what type of storage medium should back this directory.\nThe default is \"\" which means to use the node's default medium.\nMust be an empty string (default) or Memory.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                          "type": "string"
                        },
                        "sizeLimit": {
                          "description": "sizeLimit is the total amount of local storage required for this EmptyDir volume.\nThe size limit is also applicable for memory medium.\nThe maximum usage on memory medium EmptyDir would be the minimum value between\nthe SizeLimit specified here and the sum of memory limits of all containers in a pod.\nThe default is nil which means that the limit is undefined.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                          "x-kubernetes-int-or-string": true
                        }
                      }
                    },
                    "name": {
                      "description": "Name is the name of the workspace populated by the volume.",
                      "type": "string"
                    },
                    "persistentVolumeClaim": {
                      "description": "PersistentVolumeClaimVolumeSource represents a reference to a\nPersistentVolumeClaim in the same namespace. Either this OR EmptyDir can be used.",
                      "type": "object",
                      "required": [
                        "claimName"
                      ],
                      "properties": {
                        "claimName": {
                          "description": "claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                          "type": "string"
                        },
                        "readOnly": {
                          "description": "readOnly Will force the ReadOnly setting in VolumeMounts.\nDefault false.",
                          "type": "boolean"
                        }
                      }
                    },
                    "projected": {
                      "description": "Projected represents a projected volume that should populate this workspace.",
                      "type": "object",
                      "properties": {
                        "defaultMode": {
                          "description": "defaultMode are the mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "sources": {
                          "description": "sources is the list of volume projections. Each entry in this list\nhandles one source.",
                          "type": "array",
                          "items": {
                            "description": "Projection that may be projected along with other supported volume types.\nExactly one of these fields must be set.",
                            "type": "object",
                            "properties": {
                              "clusterTrustBundle": {
                                "description": "ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field\nof ClusterTrustBundle objects in an auto-updating file.\n\nAlpha, gated by the ClusterTrustBundleProjection feature gate.\n\nClusterTrustBundle objects can either be selected by name, or by the\ncombination of signer name and a label selector.\n\nKubelet performs aggressive normalization of the PEM contents written\ninto the pod filesystem.  Esoteric PEM features such as inter-block\ncomments and block headers are stripped.  Certificates are deduplicated.\nThe ordering of certificates within the file is arbitrary, and Kubelet\nmay change the order over time.",
                                "type": "object",
                                "required": [
                                  "path"
                                ],
                                "properties": {
                                  "labelSelector": {
                                    "description": "Select all ClusterTrustBundles that match this label selector.  Only has\neffect if signerName is set.  Mutually-exclusive with name.  If unset,\ninterpreted as \"match nothing\".  If set but empty, interpreted as \"match\neverything\".",
                                    "type": "object",
                                    "properties": {
                                      "matchExpressions": {
                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                        "type": "array",
                                        "items": {
                                          "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                          "type": "object",
                                          "required": [
                                            "key",
                                            "operator"
                                          ],
                                          "properties": {
                                            "key": {
                                              "description": "key is the label key that the selector applies to.",
                                              "type": "string"
                                            },
                                            "operator": {
                                              "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                              "type": "string"
                                            },
                                            "values": {
                                              "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              },
                                              "x-kubernetes-list-type": "atomic"
                                            }
                                          }
                                        },
                                        "x-kubernetes-list-type": "atomic"
                                      },
                                      "matchLabels": {
                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "x-kubernetes-map-type": "atomic"
                                  },
                                  "name": {
                                    "description": "Select a single ClusterTrustBundle by object name.  Mutually-exclusive\nwith signerName and labelSelector.",
                                    "type": "string"
                                  },
                                  "optional": {
                                    "description": "If true, don't block pod startup if the referenced ClusterTrustBundle(s)\naren't available.  If using name, then the named ClusterTrustBundle is\nallowed not to exist.  If using signerName, then the combination of\nsignerName and labelSelector is allowed to match zero\nClusterTrustBundles.",
                                    "type": "boolean"
                                  },
                                  "path": {
                                    "description": "Relative path from the volume root to write the bundle.",
                                    "type": "string"
                                  },
                                  "signerName": {
                                    "description": "Select all ClusterTrustBundles that match this signer name.\nMutually-exclusive with name.  The contents of all selected\nClusterTrustBundles will be unified and deduplicated.",
                                    "type": "string"
                                  }
                                }
                              },
                              "configMap": {
                                "description": "configMap information about the configMap data to project",
                                "type": "object",
                                "properties": {
                                  "items": {
                                    "description": "items if unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.",
                                    "type": "array",
                                    "items": {
                                      "description": "Maps a string key to a path within a volume.",
                                      "type": "object",
                                      "required": [
                                        "key",
                                        "path"
                                      ],
                                      "properties": {
                                        "key": {
                                          "description": "key is the key to project.",
                                          "type": "string"
                                        },
                                        "mode": {
                                          "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                          "type": "integer",
                                          "format": "int32"
                                        },
                                        "path": {
                                          "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "name": {
                                    "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                    "type": "string"
                                  },
                                  "optional": {
                                    "description": "optional specify whether the ConfigMap or its keys must be defined",
                                    "type": "boolean"
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              },
                              "downwardAPI": {
                                "description": "downwardAPI information about the downwardAPI data to project",
                                "type": "object",
                                "properties": {
                                  "items": {
                                    "description": "Items is a list of DownwardAPIVolume file",
                                    "type": "array",
                                    "items": {
                                      "description": "DownwardAPIVolumeFile represents information to create the file containing the pod field",
                                      "type": "object",
                                      "required": [
                                        "path"
                                      ],
                                      "properties": {
                                        "fieldRef": {
                                          "description": "Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.",
                                          "type": "object",
                                          "required": [
                                            "fieldPath"
                                          ],
                                          "properties": {
                                            "apiVersion": {
                                              "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                              "type": "string"
                                            },
                                            "fieldPath": {
                                              "description": "Path of the field to select in the specified API version.",
                                              "type": "string"
                                            }
                                          },
                                          "x-kubernetes-map-type": "atomic"
                                        },
                                        "mode": {
                                          "description": "Optional: mode bits used to set permissions on this file, must be an octal value\nbetween 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                          "type": "integer",
                                          "format": "int32"
                                        },
                                        "path": {
                                          "description": "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
                                          "type": "string"
                                        },
                                        "resourceFieldRef": {
                                          "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
                                          "type": "object",
                                          "required": [
                                            "resource"
                                          ],
                                          "properties": {
                                            "containerName": {
                                              "description": "Container name: required for volumes, optional for env vars",
                                              "type": "string"
                                            },
                                            "divisor": {
                                              "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                              "x-kubernetes-int-or-string": true
                                            },
                                            "resource": {
                                              "description": "Required: resource to select",
                                              "type": "string"
                                            }
                                          },
                                          "x-kubernetes-map-type": "atomic"
                                        }
                                      }
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  }
                                }
                              },
                              "secret": {
                                "description": "secret information about the secret data to project",
                                "type": "object",
                                "properties": {
                                  "items": {
                                    "description": "items if unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.",
                                    "type": "array",
                                    "items": {
                                      "description": "Maps a string key to a path within a volume.",
                                      "type": "object",
                                      "required": [
                                        "key",
                                        "path"
                                      ],
                                      "properties": {
                                        "key": {
                                          "description": "key is the key to project.",
                                          "type": "string"
                                        },
                                        "mode": {
                                          "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                          "type": "integer",
                                          "format": "int32"
                                        },
                                        "path": {
                                          "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "name": {
                                    "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                    "type": "string"
                                  },
                                  "optional": {
                                    "description": "optional field specify whether the Secret or its key must be defined",
                                    "type": "boolean"
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              },
                              "serviceAccountToken": {
                                "description": "serviceAccountToken is information about the serviceAccountToken data to project",
                                "type": "object",
                                "required": [
                                  "path"
                                ],
                                "properties": {
                                  "audience": {
                                    "description": "audience is the intended audience of the token. A recipient of a token\nmust identify itself with an identifier specified in the audience of the\ntoken, and otherwise should reject the token. The audience defaults to the\nidentifier of the apiserver.",
                                    "type": "string"
                                  },
                                  "expirationSeconds": {
                                    "description": "expirationSeconds is the requested duration of validity of the service\naccount token. As the token approaches expiration, the kubelet volume\nplugin will proactively rotate the service account token. The kubelet will\nstart trying to rotate the token if the token is older than 80 percent of\nits time to live or if the token is older than 24 hours.Defaults to 1 hour\nand must be at least 10 minutes.",
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "path": {
                                    "description": "path is the path relative to the mount point of the file to project the\ntoken into.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "x-kubernetes-list-type": "atomic"
                        }
                      }
                    },
                    "secret": {
                      "description": "Secret represents a secret that should populate this workspace.",
                      "type": "object",
                      "properties": {
                        "defaultMode": {
                          "description": "defaultMode is Optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values\nfor mode bits. Defaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "items": {
                          "description": "items If unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.",
                          "type": "array",
                          "items": {
                            "description": "Maps a string key to a path within a volume.",
                            "type": "object",
                            "required": [
                              "key",
                              "path"
                            ],
                            "properties": {
                              "key": {
                                "description": "key is the key to project.",
                                "type": "string"
                              },
                              "mode": {
                                "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                "type": "integer",
                                "format": "int32"
                              },
                              "path": {
                                "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                                "type": "string"
                              }
                            }
                          },
                          "x-kubernetes-list-type": "atomic"
                        },
                        "optional": {
                          "description": "optional field specify whether the Secret or its keys must be defined",
                          "type": "boolean"
                        },
                        "secretName": {
                          "description": "secretName is the name of the secret in the pod's namespace to use.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
                          "type": "string"
                        }
                      }
                    },
                    "subPath": {
                      "description": "SubPath is optionally a directory on the volume which should be used\nfor this binding (i.e. the volume will be mounted at this sub directory).",
                      "type": "string"
                    },
                    "volumeClaimTemplate": {
                      "description": "VolumeClaimTemplate is a template for a claim that will be created in the same namespace.\nThe PipelineRun controller is responsible for creating a unique claim for each instance of PipelineRun.\nSee PersistentVolumeClaim (API version: v1)",
                      "x-kubernetes-preserve-unknown-fields": true
                    }
                  }
                },
                "x-kubernetes-list-type": "atomic"
              }
            }
          },
          "status": {
            "description": "TaskRunStatus defines the observed state of TaskRun",
            "type": "object",
            "required": [
              "podName"
            ],
            "properties": {
              "annotations": {
                "description": "Annotations is additional Status fields for the Resource to save some\nadditional State as well as convey more information to the user. This is\nroughly akin to Annotations on any k8s resource, just the reconciler conveying\nricher information outwards.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "cloudEvents": {
                "description": "CloudEvents describe the state of each cloud event requested via a\nCloudEventResource.\n\nDeprecated: Removed in v0.44.0.",
                "type": "array",
                "items": {
                  "description": "CloudEventDelivery is the target of a cloud event along with the state of\ndelivery.",
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "CloudEventDeliveryState reports the state of a cloud event to be sent.",
                      "type": "object",
                      "required": [
                        "message",
                        "retryCount"
                      ],
                      "properties": {
                        "condition": {
                          "description": "Current status",
                          "type": "string"
                        },
                        "message": {
                          "description": "Error is the text of error (if any)",
                          "type": "string"
                        },
                        "retryCount": {
                          "description": "RetryCount is the number of attempts of sending the cloud event",
                          "type": "integer",
                          "format": "int32"
                        },
                        "sentAt": {
                          "description": "SentAt is the time at which the last attempt to send the event was made",
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    },
                    "target": {
                      "description": "Target points to an addressable",
                      "type": "string"
                    }
                  }
                },
                "x-kubernetes-list-type": "atomic"
              },
              "completionTime": {
                "description": "CompletionTime is the time the build completed.",
                "type": "string",
                "format": "date-time"
              },
              "conditions": {
                "description": "Conditions the latest available observations of a resource's current state.",
                "type": "array",
                "items": {
                  "description": "Condition defines a readiness condition for a Knative resource.\nSee: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties",
                  "type": "object",
                  "required": [
                    "status",
                    "type"
                  ],
                  "properties": {
                    "lastTransitionTime": {
                      "description": "LastTransitionTime is the last time the condition transitioned from one status to another.\nWe use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic\ndifferences (all other things held constant).",
                      "type": "string"
                    },
                    "message": {
                      "description": "A human readable message indicating details about the transition.",
                      "type": "string"
                    },
                    "reason": {
                      "description": "The reason for the condition's last transition.",
                      "type": "string"
                    },
                    "severity": {
                      "description": "Severity with which to treat failures of this type of condition.\nWhen this is not specified, it defaults to Error.",
                      "type": "string"
                    },
                    "status": {
                      "description": "Status of the condition, one of True, False, Unknown.",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of condition.",
                      "type": "string"
                    }
                  }
                }
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the 'Generation' of the Service that\nwas last processed by the controller.",
                "type": "integer",
                "format": "int64"
              },
              "podName": {
                "description": "PodName is the name of the pod responsible for executing this task's steps.",
                "type": "string"
              },
              "provenance": {
                "description": "Provenance contains some key authenticated metadata about how a software artifact was built (what sources, what inputs/outputs, etc.).",
                "type": "object",
                "properties": {
                  "configSource": {
                    "description": "Deprecated: Use RefSource instead",
                    "type": "object",
                    "properties": {
                      "digest": {
                        "description": "Digest is a collection of cryptographic digests for the contents of the artifact specified by URI.\nExample: {\"sha1\": \"f99d13e554ffcb696dee719fa85b695cb5b0f428\"}",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "entryPoint": {
                        "description": "EntryPoint identifies the entry point into the build. This is often a path to a\nbuild definition file and/or a target label within that file.\nExample: \"task/git-clone/0.8/git-clone.yaml\"",
                        "type": "string"
                      },
                      "uri": {
                        "description": "URI indicates the identity of the source of the build definition.\nExample: \"https://github.com/tektoncd/catalog\"",
                        "type": "string"
                      }
                    }
                  },
                  "featureFlags": {
                    "description": "FeatureFlags identifies the feature flags that were used during the task/pipeline run",
                    "type": "object",
                    "properties": {
                      "awaitSidecarReadiness": {
                        "type": "boolean"
                      },
                      "coschedule": {
                        "type": "string"
                      },
                      "disableCredsInit": {
                        "type": "boolean"
                      },
                      "disableInlineSpec": {
                        "type": "string"
                      },
                      "enableAPIFields": {
                        "type": "string"
                      },
                      "enableArtifacts": {
                        "type": "boolean"
                      },
                      "enableCELInWhenExpression": {
                        "type": "boolean"
                      },
                      "enableConciseResolverSyntax": {
                        "type": "boolean"
                      },
                      "enableKeepPodOnCancel": {
                        "type": "boolean"
                      },
                      "enableKubernetesSidecar": {
                        "type": "boolean"
                      },
                      "enableParamEnum": {
                        "type": "boolean"
                      },
                      "enableProvenanceInStatus": {
                        "type": "boolean"
                      },
                      "enableStepActions": {
                        "description": "EnableStepActions is a no-op flag since StepActions are stable",
                        "type": "boolean"
                      },
                      "enforceNonfalsifiability": {
                        "type": "string"
                      },
                      "maxResultSize": {
                        "type": "integer"
                      },
                      "requireGitSSHSecretKnownHosts": {
                        "type": "boolean"
                      },
                      "resultExtractionMethod": {
                        "type": "string"
                      },
                      "runningInEnvWithInjectedSidecars": {
                        "type": "boolean"
                      },
                      "sendCloudEventsForRuns": {
                        "type": "boolean"
                      },
                      "setSecurityContext": {
                        "type": "boolean"
                      },
                      "setSecurityContextReadOnlyRootFilesystem": {
                        "type": "boolean"
                      },
                      "verificationNoMatchPolicy": {
                        "description": "VerificationNoMatchPolicy is the feature flag for \"trusted-resources-verification-no-match-policy\"\nVerificationNoMatchPolicy can be set to \"ignore\", \"warn\" and \"fail\" values.\nignore: skip trusted resources verification when no matching verification policies found\nwarn: skip trusted resources verification when no matching verification policies found and log a warning\nfail: fail the taskrun or pipelines run if no matching verification policies found",
                        "type": "string"
                      }
                    }
                  },
                  "refSource": {
                    "description": "RefSource identifies the source where a remote task/pipeline came from.",
                    "type": "object",
                    "properties": {
                      "digest": {
                        "description": "Digest is a collection of cryptographic digests for the contents of the artifact specified by URI.\nExample: {\"sha1\": \"f99d13e554ffcb696dee719fa85b695cb5b0f428\"}",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "entryPoint": {
                        "description": "EntryPoint identifies the entry point into the build. This is often a path to a\nbuild definition file and/or a target label within that file.\nExample: \"task/git-clone/0.8/git-clone.yaml\"",
                        "type": "string"
                      },
                      "uri": {
                        "description": "URI indicates the identity of the source of the build definition.\nExample: \"https://github.com/tektoncd/catalog\"",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "resourcesResult": {
                "description": "Results from Resources built during the TaskRun.\nThis is tomb-stoned along with the removal of pipelineResources\nDeprecated: this field is not populated and is preserved only for backwards compatibility",
                "type": "array",
                "items": {
                  "description": "RunResult is used to write key/value pairs to TaskRun pod termination messages.\nThe key/value pairs may come from the entrypoint binary, or represent a TaskRunResult.\nIf they represent a TaskRunResult, the key is the name of the result and the value is the\nJSON-serialized value of the result.",
                  "type": "object",
                  "required": [
                    "key",
                    "value"
                  ],
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "resourceName": {
                      "description": "ResourceName may be used in tests, but it is not populated in termination messages.\nIt is preserved here for backwards compatibility and will not be ported to v1.",
                      "type": "string"
                    },
                    "type": {
                      "description": "ResultType used to find out whether a RunResult is from a task result or not\nNote that ResultsType is another type which is used to define the data type\n(e.g. string, array, etc) we used for Results",
                      "type": "integer"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "x-kubernetes-list-type": "atomic"
              },
              "retriesStatus": {
                "description": "RetriesStatus contains the history of TaskRunStatus in case of a retry in order to keep record of failures.\nAll TaskRunStatus stored in RetriesStatus will have no date within the RetriesStatus as is redundant.\nSee TaskRun.status (API version: tekton.dev/v1beta1)",
                "x-kubernetes-preserve-unknown-fields": true
              },
              "sidecars": {
                "description": "The list has one entry per sidecar in the manifest. Each entry is\nrepresents the imageid of the corresponding sidecar.",
                "type": "array",
                "items": {
                  "description": "SidecarState reports the results of running a sidecar in a Task.",
                  "type": "object",
                  "properties": {
                    "container": {
                      "type": "string"
                    },
                    "imageID": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "running": {
                      "description": "Details about a running container",
                      "type": "object",
                      "properties": {
                        "startedAt": {
                          "description": "Time at which the container was last (re-)started",
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    },
                    "terminated": {
                      "description": "Details about a terminated container",
                      "type": "object",
                      "required": [
                        "exitCode"
                      ],
                      "properties": {
                        "containerID": {
                          "description": "Container's ID in the format '<type>://<container_id>'",
                          "type": "string"
                        },
                        "exitCode": {
                          "description": "Exit status from the last termination of the container",
                          "type": "integer",
                          "format": "int32"
                        },
                        "finishedAt": {
                          "description": "Time at which the container last terminated",
                          "type": "string",
                          "format": "date-time"
                        },
                        "message": {
                          "description": "Message regarding the last termination of the container",
                          "type": "string"
                        },
                        "reason": {
                          "description": "(brief) reason from the last termination of the container",
                          "type": "string"
                        },
                        "signal": {
                          "description": "Signal from the last termination of the container",
                          "type": "integer",
                          "format": "int32"
                        },
                        "startedAt": {
                          "description": "Time at which previous execution of the container started",
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    },
                    "waiting": {
                      "description": "Details about a waiting container",
                      "type": "object",
                      "properties": {
                        "message": {
                          "description": "Message regarding why the container is not yet running.",
                          "type": "string"
                        },
                        "reason": {
                          "description": "(brief) reason the container is not yet running.",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "x-kubernetes-list-type": "atomic"
              },
              "spanContext": {
                "description": "SpanContext contains tracing span context fields",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "startTime": {
                "description": "StartTime is the time the build is actually started.",
                "type": "string",
                "format": "date-time"
              },
              "steps": {
                "description": "Steps describes the state of each build step container.",
                "type": "array",
                "items": {
                  "description": "StepState reports the results of running a step in a Task.",
                  "type": "object",
                  "properties": {
                    "container": {
                      "type": "string"
                    },
                    "imageID": {
                      "type": "string"
                    },
                    "inputs": {
                      "type": "array",
                      "items": {
                        "description": "Artifact represents an artifact within a system, potentially containing multiple values\nassociated with it.",
                        "type": "object",
                        "properties": {
                          "buildOutput": {
                            "description": "Indicate if the artifact is a build output or a by-product",
                            "type": "boolean"
                          },
                          "name": {
                            "description": "The artifact's identifying category name",
                            "type": "string"
                          },
                          "values": {
                            "description": "A collection of values related to the artifact",
                            "type": "array",
                            "items": {
                              "description": "ArtifactValue represents a specific value or data element within an Artifact.",
                              "type": "object",
                              "properties": {
                                "digest": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "uri": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "name": {
                      "type": "string"
                    },
                    "outputs": {
                      "type": "array",
                      "items": {
                        "description": "Artifact represents an artifact within a system, potentially containing multiple values\nassociated with it.",
                        "type": "object",
                        "properties": {
                          "buildOutput": {
                            "description": "Indicate if the artifact is a build output or a by-product",
                            "type": "boolean"
                          },
                          "name": {
                            "description": "The artifact's identifying category name",
                            "type": "string"
                          },
                          "values": {
                            "description": "A collection of values related to the artifact",
                            "type": "array",
                            "items": {
                              "description": "ArtifactValue represents a specific value or data element within an Artifact.",
                              "type": "object",
                              "properties": {
                                "digest": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "uri": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "provenance": {
                      "description": "Provenance contains metadata about resources used in the TaskRun/PipelineRun\nsuch as the source from where a remote build definition was fetched.\nThis field aims to carry minimum amoumt of metadata in *Run status so that\nTekton Chains can capture them in the provenance.",
                      "type": "object",
                      "properties": {
                        "configSource": {
                          "description": "Deprecated: Use RefSource instead",
                          "type": "object",
                          "properties": {
                            "digest": {
                              "description": "Digest is a collection of cryptographic digests for the contents of the artifact specified by URI.\nExample: {\"sha1\": \"f99d13e554ffcb696dee719fa85b695cb5b0f428\"}",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "entryPoint": {
                              "description": "EntryPoint identifies the entry point into the build. This is often a path to a\nbuild definition file and/or a target label within that file.\nExample: \"task/git-clone/0.8/git-clone.yaml\"",
                              "type": "string"
                            },
                            "uri": {
                              "description": "URI indicates the identity of the source of the build definition.\nExample: \"https://github.com/tektoncd/catalog\"",
                              "type": "string"
                            }
                          }
                        },
                        "featureFlags": {
                          "description": "FeatureFlags identifies the feature flags that were used during the task/pipeline run",
                          "type": "object",
                          "properties": {
                            "awaitSidecarReadiness": {
                              "type": "boolean"
                            },
                            "coschedule": {
                              "type": "string"
                            },
                            "disableCredsInit": {
                              "type": "boolean"
                            },
                            "disableInlineSpec": {
                              "type": "string"
                            },
                            "enableAPIFields": {
                              "type": "string"
                            },
                            "enableArtifacts": {
                              "type": "boolean"
                            },
                            "enableCELInWhenExpression": {
                              "type": "boolean"
                            },
                            "enableConciseResolverSyntax": {
                              "type": "boolean"
                            },
                            "enableKeepPodOnCancel": {
                              "type": "boolean"
                            },
                            "enableKubernetesSidecar": {
                              "type": "boolean"
                            },
                            "enableParamEnum": {
                              "type": "boolean"
                            },
                            "enableProvenanceInStatus": {
                              "type": "boolean"
                            },
                            "enableStepActions": {
                              "description": "EnableStepActions is a no-op flag since StepActions are stable",
                              "type": "boolean"
                            },
                            "enforceNonfalsifiability": {
                              "type": "string"
                            },
                            "maxResultSize": {
                              "type": "integer"
                            },
                            "requireGitSSHSecretKnownHosts": {
                              "type": "boolean"
                            },
                            "resultExtractionMethod": {
                              "type": "string"
                            },
                            "runningInEnvWithInjectedSidecars": {
                              "type": "boolean"
                            },
                            "sendCloudEventsForRuns": {
                              "type": "boolean"
                            },
                            "setSecurityContext": {
                              "type": "boolean"
                            },
                            "setSecurityContextReadOnlyRootFilesystem": {
                              "type": "boolean"
                            },
                            "verificationNoMatchPolicy": {
                              "description": "VerificationNoMatchPolicy is the feature flag for \"trusted-resources-verification-no-match-policy\"\nVerificationNoMatchPolicy can be set to \"ignore\", \"warn\" and \"fail\" values.\nignore: skip trusted resources verification when no matching verification policies found\nwarn: skip trusted resources verification when no matching verification policies found and log a warning\nfail: fail the taskrun or pipelines run if no matching verification policies found",
                              "type": "string"
                            }
                          }
                        },
                        "refSource": {
                          "description": "RefSource identifies the source where a remote task/pipeline came from.",
                          "type": "object",
                          "properties": {
                            "digest": {
                              "description": "Digest is a collection of cryptographic digests for the contents of the artifact specified by URI.\nExample: {\"sha1\": \"f99d13e554ffcb696dee719fa85b695cb5b0f428\"}",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "entryPoint": {
                              "description": "EntryPoint identifies the entry point into the build. This is often a path to a\nbuild definition file and/or a target label within that file.\nExample: \"task/git-clone/0.8/git-clone.yaml\"",
                              "type": "string"
                            },
                            "uri": {
                              "description": "URI indicates the identity of the source of the build definition.\nExample: \"https://github.com/tektoncd/catalog\"",
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "description": "TaskRunResult used to describe the results of a task",
                        "type": "object",
                        "required": [
                          "name",
                          "value"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name the given name",
                            "type": "string"
                          },
                          "type": {
                            "description": "Type is the user-specified type of the result. The possible type\nis currently \"string\" and will support \"array\" in following work.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Value the given value of the result",
                            "x-kubernetes-preserve-unknown-fields": true
                          }
                        }
                      }
                    },
                    "running": {
                      "description": "Details about a running container",
                      "type": "object",
                      "properties": {
                        "startedAt": {
                          "description": "Time at which the container was last (re-)started",
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    },
                    "terminated": {
                      "description": "Details about a terminated container",
                      "type": "object",
                      "required": [
                        "exitCode"
                      ],
                      "properties": {
                        "containerID": {
                          "description": "Container's ID in the format '<type>://<container_id>'",
                          "type": "string"
                        },
                        "exitCode": {
                          "description": "Exit status from the last termination of the container",
                          "type": "integer",
                          "format": "int32"
                        },
                        "finishedAt": {
                          "description": "Time at which the container last terminated",
                          "type": "string",
                          "format": "date-time"
                        },
                        "message": {
                          "description": "Message regarding the last termination of the container",
                          "type": "string"
                        },
                        "reason": {
                          "description": "(brief) reason from the last termination of the container",
                          "type": "string"
                        },
                        "signal": {
                          "description": "Signal from the last termination of the container",
                          "type": "integer",
                          "format": "int32"
                        },
                        "startedAt": {
                          "description": "Time at which previous execution of the container started",
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    },
                    "waiting": {
                      "description": "Details about a waiting container",
                      "type": "object",
                      "properties": {
                        "message": {
                          "description": "Message regarding why the container is not yet running.",
                          "type": "string"
                        },
                        "reason": {
                          "description": "(brief) reason the container is not yet running.",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "x-kubernetes-list-type": "atomic"
              },
              "taskResults": {
                "description": "TaskRunResults are the list of results written out by the task's containers",
                "type": "array",
                "items": {
                  "description": "TaskRunResult used to describe the results of a task",
                  "type": "object",
                  "required": [
                    "name",
                    "value"
                  ],
                  "properties": {
                    "name": {
                      "description": "Name the given name",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type is the user-specified type of the result. The possible type\nis currently \"string\" and will support \"array\" in following work.",
                      "type": "string"
                    },
                    "value": {
                      "description": "Value the given value of the result",
                      "x-kubernetes-preserve-unknown-fields": true
                    }
                  }
                },
                "x-kubernetes-list-type": "atomic"
              },
              "taskSpec": {
                "description": "TaskSpec contains the Spec from the dereferenced Task definition used to instantiate this TaskRun.\nSee Task.spec (API version tekton.dev/v1beta1)",
                "x-kubernetes-preserve-unknown-fields": true
              }
            }
          }
        },
        "x-kubernetes-group-version-kind": [
          {
            "group": "tekton.dev",
            "kind": "TaskRun",
            "version": "v1beta1"
          }
        ],
        "x-kubernetes-selectable-fields": []
      }
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
      "type": "object",
      "properties": {
        "continue": {
          "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",
          "type": "string"
        },
        "remainingItemCount": {
          "description": "remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.",
          "type": "integer",
          "format": "int64"
        },
        "resourceVersion": {
          "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type": "string"
        },
        "selfLink": {
          "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
          "type": "string"
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "tekton.dev",
      "kind": "TaskRunList",
      "version": "v1beta1"
    }
  ],
  "x-kubernetes-selectable-fields": [],
  "$schema": "http://json-schema.org/schema#"
}