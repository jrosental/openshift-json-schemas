{
  "description": "MachineConfigPool describes a pool of MachineConfigs.\n\nCompatibility level 1: Stable within a major release for a minimum of 12 months or 3 minor releases (whichever is longer).",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "machineconfiguration.openshift.io/v1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "MachineConfigPool"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "spec contains the desired machine config pool configuration.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "configuration": {
          "description": "The targeted MachineConfig object for the machine config pool.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "apiVersion": {
              "description": "API version of the referent.",
              "type": [
                "string",
                "null"
              ]
            },
            "fieldPath": {
              "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.",
              "type": [
                "string",
                "null"
              ]
            },
            "kind": {
              "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
              "type": [
                "string",
                "null"
              ]
            },
            "name": {
              "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": [
                "string",
                "null"
              ]
            },
            "namespace": {
              "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
              "type": [
                "string",
                "null"
              ]
            },
            "resourceVersion": {
              "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
              "type": [
                "string",
                "null"
              ]
            },
            "source": {
              "description": "source is the list of MachineConfig objects that were used to generate the single MachineConfig object specified in `content`.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "apiVersion": {
                    "description": "API version of the referent.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "fieldPath": {
                    "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "kind": {
                    "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "name": {
                    "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "namespace": {
                    "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "resourceVersion": {
                    "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "uid": {
                    "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "x-kubernetes-map-type": "atomic"
              },
              "x-kubernetes-list-type": "atomic"
            },
            "uid": {
              "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "x-kubernetes-map-type": "atomic"
        },
        "machineConfigSelector": {
          "description": "machineConfigSelector specifies a label selector for MachineConfigs.\nRefer https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/ on how label and selectors work.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "matchExpressions": {
              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "key",
                  "operator"
                ],
                "properties": {
                  "key": {
                    "description": "key is the label key that the selector applies to.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                    "type": "string"
                  },
                  "values": {
                    "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "x-kubernetes-list-type": "atomic"
                  }
                }
              },
              "x-kubernetes-list-type": "atomic"
            },
            "matchLabels": {
              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          "x-kubernetes-map-type": "atomic"
        },
        "maxUnavailable": {
          "description": "maxUnavailable defines either an integer number or percentage\nof nodes in the pool that can go Unavailable during an update.\nThis includes nodes Unavailable for any reason, including user\ninitiated cordons, failing nodes, etc. The default value is 1.\n\nA value larger than 1 will mean multiple nodes going unavailable during\nthe update, which may affect your workload stress on the remaining nodes.\nYou cannot set this value to 0 to stop updates (it will default back to 1);\nto stop updates, use the 'paused' property instead. Drain will respect\nPod Disruption Budgets (PDBs) such as etcd quorum guards, even if\nmaxUnavailable is greater than one.",
          "x-kubernetes-int-or-string": true
        },
        "nodeSelector": {
          "description": "nodeSelector specifies a label selector for Machines",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "matchExpressions": {
              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "key",
                  "operator"
                ],
                "properties": {
                  "key": {
                    "description": "key is the label key that the selector applies to.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                    "type": "string"
                  },
                  "values": {
                    "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "x-kubernetes-list-type": "atomic"
                  }
                }
              },
              "x-kubernetes-list-type": "atomic"
            },
            "matchLabels": {
              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          "x-kubernetes-map-type": "atomic"
        },
        "paused": {
          "description": "paused specifies whether or not changes to this machine config pool should be stopped.\nThis includes generating new desiredMachineConfig and update of machines.",
          "type": [
            "boolean",
            "null"
          ]
        },
        "pinnedImageSets": {
          "description": "pinnedImageSets specifies a sequence of PinnedImageSetRef objects for the\npool. Nodes within this pool will preload and pin images defined in the\nPinnedImageSet. Before pulling images the MachineConfigDaemon will ensure\nthe total uncompressed size of all the images does not exceed available\nresources. If the total size of the images exceeds the available\nresources the controller will report a Degraded status to the\nMachineConfigPool and not attempt to pull any images. Also to help ensure\nthe kubelet can mitigate storage risk, the pinned_image configuration and\nsubsequent service reload will happen only after all of the images have\nbeen pulled for each set. Images from multiple PinnedImageSets are loaded\nand pinned sequentially as listed. Duplicate and existing images will be\nskipped.\n\nAny failure to prefetch or pin images will result in a Degraded pool.\nResolving these failures is the responsibility of the user. The admin\nshould be proactive in ensuring adequate storage and proper image\nauthentication exists in advance.",
          "type": [
            "array",
            "null"
          ],
          "maxItems": 100,
          "items": {
            "type": [
              "object",
              "null"
            ],
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "description": "name is a reference to the name of a PinnedImageSet.  Must adhere to\nRFC-1123 (https://tools.ietf.org/html/rfc1123).\nMade up of one of more period-separated (.) segments, where each segment\nconsists of alphanumeric characters and hyphens (-), must begin and end\nwith an alphanumeric character, and is at most 63 characters in length.\nThe total length of the name must not exceed 253 characters.",
                "type": "string",
                "maxLength": 253,
                "minLength": 1,
                "pattern": "^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])(\\.([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9]))*$"
              }
            }
          },
          "x-kubernetes-list-map-keys": [
            "name"
          ],
          "x-kubernetes-list-type": "map"
        }
      }
    },
    "status": {
      "description": "status contains observed information about the machine config pool.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "certExpirys": {
          "description": "certExpirys keeps track of important certificate expiration data",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "ceryExpiry contains the bundle name and the expiry date",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "bundle",
              "subject"
            ],
            "properties": {
              "bundle": {
                "description": "bundle is the name of the bundle in which the subject certificate resides",
                "type": "string"
              },
              "expiry": {
                "description": "expiry is the date after which the certificate will no longer be valid",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "subject": {
                "description": "subject is the subject of the certificate",
                "type": "string"
              }
            }
          },
          "x-kubernetes-list-type": "atomic"
        },
        "conditions": {
          "description": "conditions represents the latest available observations of current state.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "MachineConfigPoolCondition contains condition information for an MachineConfigPool.",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the timestamp corresponding to the last status\nchange of this condition.",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable description of the details of the last\ntransition, complementing reason.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "reason": {
                "description": "reason is a brief machine readable explanation for the condition's last\ntransition.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "status": {
                "description": "status of the condition, one of ('True', 'False', 'Unknown').",
                "type": [
                  "string",
                  "null"
                ]
              },
              "type": {
                "description": "type of the condition, currently ('Done', 'Updating', 'Failed').",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          "x-kubernetes-list-type": "atomic"
        },
        "configuration": {
          "description": "configuration represents the current MachineConfig object for the machine config pool.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "apiVersion": {
              "description": "API version of the referent.",
              "type": [
                "string",
                "null"
              ]
            },
            "fieldPath": {
              "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.",
              "type": [
                "string",
                "null"
              ]
            },
            "kind": {
              "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
              "type": [
                "string",
                "null"
              ]
            },
            "name": {
              "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": [
                "string",
                "null"
              ]
            },
            "namespace": {
              "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
              "type": [
                "string",
                "null"
              ]
            },
            "resourceVersion": {
              "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
              "type": [
                "string",
                "null"
              ]
            },
            "source": {
              "description": "source is the list of MachineConfig objects that were used to generate the single MachineConfig object specified in `content`.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "apiVersion": {
                    "description": "API version of the referent.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "fieldPath": {
                    "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "kind": {
                    "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "name": {
                    "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "namespace": {
                    "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "resourceVersion": {
                    "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "uid": {
                    "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "x-kubernetes-map-type": "atomic"
              },
              "x-kubernetes-list-type": "atomic"
            },
            "uid": {
              "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "x-kubernetes-map-type": "atomic"
        },
        "degradedMachineCount": {
          "description": "degradedMachineCount represents the total number of machines marked degraded (or unreconcilable).\nA node is marked degraded if applying a configuration failed..",
          "type": [
            "integer",
            "null"
          ],
          "format": "int32"
        },
        "machineCount": {
          "description": "machineCount represents the total number of machines in the machine config pool.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int32"
        },
        "observedGeneration": {
          "description": "observedGeneration represents the generation observed by the controller.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "poolSynchronizersStatus": {
          "description": "poolSynchronizersStatus is the status of the machines managed by the pool synchronizers.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "object",
              "null"
            ],
            "required": [
              "availableMachineCount",
              "machineCount",
              "poolSynchronizerType",
              "readyMachineCount",
              "unavailableMachineCount",
              "updatedMachineCount"
            ],
            "properties": {
              "availableMachineCount": {
                "description": "availableMachineCount is the number of machines managed by the node synchronizer which are available.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "machineCount": {
                "description": "machineCount is the number of machines that are managed by the node synchronizer.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "observedGeneration": {
                "description": "observedGeneration is the last generation change that has been applied.",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64",
                "minimum": 0,
                "x-kubernetes-validations": [
                  {
                    "message": "observedGeneration must not move backwards except to zero",
                    "rule": "self >= oldSelf || (self == 0 && oldSelf > 0)"
                  }
                ]
              },
              "poolSynchronizerType": {
                "description": "poolSynchronizerType describes the type of the pool synchronizer.",
                "type": "string",
                "maxLength": 256,
                "enum": [
                  "PinnedImageSets"
                ]
              },
              "readyMachineCount": {
                "description": "readyMachineCount is the number of machines managed by the node synchronizer that are in a ready state.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "unavailableMachineCount": {
                "description": "unavailableMachineCount is the number of machines managed by the node synchronizer but are unavailable.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "updatedMachineCount": {
                "description": "updatedMachineCount is the number of machines that have been updated by the node synchronizer.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              }
            },
            "x-kubernetes-validations": [
              {
                "message": "machineCount must be greater than or equal to updatedMachineCount",
                "rule": "self.machineCount >= self.updatedMachineCount"
              },
              {
                "message": "machineCount must be greater than or equal to availableMachineCount",
                "rule": "self.machineCount >= self.availableMachineCount"
              },
              {
                "message": "machineCount must be greater than or equal to unavailableMachineCount",
                "rule": "self.machineCount >= self.unavailableMachineCount"
              },
              {
                "message": "machineCount must be greater than or equal to readyMachineCount",
                "rule": "self.machineCount >= self.readyMachineCount"
              },
              {
                "message": "availableMachineCount must be greater than or equal to readyMachineCount",
                "rule": "self.availableMachineCount >= self.readyMachineCount"
              }
            ]
          },
          "x-kubernetes-list-map-keys": [
            "poolSynchronizerType"
          ],
          "x-kubernetes-list-type": "map"
        },
        "readyMachineCount": {
          "description": "readyMachineCount represents the total number of ready machines targeted by the pool.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int32"
        },
        "unavailableMachineCount": {
          "description": "unavailableMachineCount represents the total number of unavailable (non-ready) machines targeted by the pool.\nA node is marked unavailable if it is in updating state or NodeReady condition is false.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int32"
        },
        "updatedMachineCount": {
          "description": "updatedMachineCount represents the total number of machines targeted by the pool that have the CurrentMachineConfig as their config.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int32"
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "machineconfiguration.openshift.io",
      "kind": "MachineConfigPool",
      "version": "v1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}