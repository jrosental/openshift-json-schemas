{
  "description": "ClusterVersionList is a list of ClusterVersion",
  "type": "object",
  "required": [
    "items"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ]
    },
    "items": {
      "description": "List of clusterversions. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "description": "ClusterVersion is the configuration for the ClusterVersionOperator. This is where\nparameters related to automatic updates can be set.\n\nCompatibility level 1: Stable within a major release for a minimum of 12 months or 3 minor releases (whichever is longer).",
        "type": [
          "object",
          "null"
        ],
        "required": [
          "spec"
        ],
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": [
              "string",
              "null"
            ]
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "ClusterVersion"
            ]
          },
          "metadata": {
            "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "annotations": {
                "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations",
                "type": [
                  "object",
                  "null"
                ],
                "additionalProperties": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "creationTimestamp": {
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "deletionGracePeriodSeconds": {
                "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "deletionTimestamp": {
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "finalizers": {
                "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "x-kubernetes-list-type": "set",
                "x-kubernetes-patch-strategy": "merge"
              },
              "generateName": {
                "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                "type": [
                  "string",
                  "null"
                ]
              },
              "generation": {
                "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "labels": {
                "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels",
                "type": [
                  "object",
                  "null"
                ],
                "additionalProperties": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "managedFields": {
                "description": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "apiVersion": {
                      "description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "fieldsType": {
                      "description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "fieldsV1": {
                      "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff",
                      "type": [
                        "object",
                        "null"
                      ]
                    },
                    "manager": {
                      "description": "Manager is an identifier of the workflow managing these fields.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "operation": {
                      "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "subresource": {
                      "description": "Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "time": {
                      "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "format": "date-time"
                    }
                  },
                  "additionalProperties": false
                },
                "x-kubernetes-list-type": "atomic"
              },
              "name": {
                "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
                "type": [
                  "string",
                  "null"
                ]
              },
              "namespace": {
                "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces",
                "type": [
                  "string",
                  "null"
                ]
              },
              "ownerReferences": {
                "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "apiVersion",
                    "kind",
                    "name",
                    "uid"
                  ],
                  "properties": {
                    "apiVersion": {
                      "description": "API version of the referent.",
                      "type": "string"
                    },
                    "blockOwnerDeletion": {
                      "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "controller": {
                      "description": "If true, this reference points to the managing controller.",
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "kind": {
                      "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
                      "type": "string"
                    },
                    "uid": {
                      "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
                      "type": "string"
                    }
                  },
                  "x-kubernetes-map-type": "atomic",
                  "additionalProperties": false
                },
                "x-kubernetes-list-map-keys": [
                  "uid"
                ],
                "x-kubernetes-list-type": "map",
                "x-kubernetes-patch-merge-key": "uid",
                "x-kubernetes-patch-strategy": "merge"
              },
              "resourceVersion": {
                "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                "type": [
                  "string",
                  "null"
                ]
              },
              "selfLink": {
                "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "uid": {
                "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "additionalProperties": false
          },
          "spec": {
            "description": "spec is the desired state of the cluster version - the operator will work\nto ensure that the desired version is applied to the cluster.",
            "type": "object",
            "required": [
              "clusterID"
            ],
            "properties": {
              "capabilities": {
                "description": "capabilities configures the installation of optional, core\ncluster components.  A null value here is identical to an\nempty object; see the child properties for default semantics.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "additionalEnabledCapabilities": {
                    "description": "additionalEnabledCapabilities extends the set of managed\ncapabilities beyond the baseline defined in\nbaselineCapabilitySet.  The default is an empty set.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "description": "ClusterVersionCapability enumerates optional, core cluster components.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "enum": [
                        "openshift-samples",
                        "baremetal",
                        "marketplace",
                        "Console",
                        "Insights",
                        "Storage",
                        "CSISnapshot",
                        "NodeTuning",
                        "MachineAPI",
                        "Build",
                        "DeploymentConfig",
                        "ImageRegistry",
                        "OperatorLifecycleManager",
                        "CloudCredential",
                        "Ingress",
                        "CloudControllerManager",
                        "OperatorLifecycleManagerV1"
                      ]
                    },
                    "x-kubernetes-list-type": "atomic"
                  },
                  "baselineCapabilitySet": {
                    "description": "baselineCapabilitySet selects an initial set of\noptional capabilities to enable, which can be extended via\nadditionalEnabledCapabilities.  If unset, the cluster will\nchoose a default, and the default may change over time.\nThe current default is vCurrent.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "enum": [
                      "None",
                      "v4.11",
                      "v4.12",
                      "v4.13",
                      "v4.14",
                      "v4.15",
                      "v4.16",
                      "v4.17",
                      "v4.18",
                      "vCurrent"
                    ]
                  }
                },
                "additionalProperties": false
              },
              "channel": {
                "description": "channel is an identifier for explicitly requesting that a non-default\nset of updates be applied to this cluster. The default channel will be\ncontain stable updates that are appropriate for production clusters.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "clusterID": {
                "description": "clusterID uniquely identifies this cluster. This is expected to be\nan RFC4122 UUID value (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx in\nhexadecimal values). This is a required field.",
                "type": "string"
              },
              "desiredUpdate": {
                "description": "desiredUpdate is an optional field that indicates the desired value of\nthe cluster version. Setting this value will trigger an upgrade (if\nthe current version does not match the desired version). The set of\nrecommended update values is listed as part of available updates in\nstatus, and setting values outside that range may cause the upgrade\nto fail.\n\nSome of the fields are inter-related with restrictions and meanings described here.\n1. image is specified, version is specified, architecture is specified. API validation error.\n2. image is specified, version is specified, architecture is not specified. You should not do this. version is silently ignored and image is used.\n3. image is specified, version is not specified, architecture is specified. API validation error.\n4. image is specified, version is not specified, architecture is not specified. image is used.\n5. image is not specified, version is specified, architecture is specified. version and desired architecture are used to select an image.\n6. image is not specified, version is specified, architecture is not specified. version and current architecture are used to select an image.\n7. image is not specified, version is not specified, architecture is specified. API validation error.\n8. image is not specified, version is not specified, architecture is not specified. API validation error.\n\nIf an upgrade fails the operator will halt and report status\nabout the failing component. Setting the desired update value back to\nthe previous version will cause a rollback to be attempted. Not all\nrollbacks will succeed.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "architecture": {
                    "description": "architecture is an optional field that indicates the desired\nvalue of the cluster architecture. In this context cluster\narchitecture means either a single architecture or a multi\narchitecture. architecture can only be set to Multi thereby\nonly allowing updates from single to multi architecture. If\narchitecture is set, image cannot be set and version must be\nset.\nValid values are 'Multi' and empty.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "enum": [
                      "Multi",
                      ""
                    ]
                  },
                  "force": {
                    "description": "force allows an administrator to update to an image that has failed\nverification or upgradeable checks. This option should only\nbe used when the authenticity of the provided image has been verified out\nof band because the provided image will run with full administrative access\nto the cluster. Do not use this flag with images that comes from unknown\nor potentially malicious sources.",
                    "type": [
                      "boolean",
                      "null"
                    ]
                  },
                  "image": {
                    "description": "image is a container image location that contains the update.\nimage should be used when the desired version does not exist in availableUpdates or history.\nWhen image is set, version is ignored. When image is set, version should be empty.\nWhen image is set, architecture cannot be specified.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "version": {
                    "description": "version is a semantic version identifying the update version.\nversion is ignored if image is specified and required if\narchitecture is specified.",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "x-kubernetes-validations": [
                  {
                    "message": "cannot set both Architecture and Image",
                    "rule": "has(self.architecture) && has(self.image) ? (self.architecture == \"\" || self.image == \"\") : true"
                  },
                  {
                    "message": "Version must be set if Architecture is set",
                    "rule": "has(self.architecture) && self.architecture != \"\" ? self.version != \"\" : true"
                  }
                ],
                "additionalProperties": false
              },
              "overrides": {
                "description": "overrides is list of overides for components that are managed by\ncluster version operator. Marking a component unmanaged will prevent\nthe operator from creating or updating the object.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "description": "ComponentOverride allows overriding cluster version operator's behavior\nfor a component.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "group",
                    "kind",
                    "name",
                    "namespace",
                    "unmanaged"
                  ],
                  "properties": {
                    "group": {
                      "description": "group identifies the API group that the kind is in.",
                      "type": "string"
                    },
                    "kind": {
                      "description": "kind indentifies which object to override.",
                      "type": "string"
                    },
                    "name": {
                      "description": "name is the component's name.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "namespace is the component's namespace. If the resource is cluster\nscoped, the namespace should be empty.",
                      "type": "string"
                    },
                    "unmanaged": {
                      "description": "unmanaged controls if cluster version operator should stop managing the\nresources in this cluster.\nDefault: false",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "x-kubernetes-list-map-keys": [
                  "kind",
                  "group",
                  "namespace",
                  "name"
                ],
                "x-kubernetes-list-type": "map"
              },
              "upstream": {
                "description": "upstream may be used to specify the preferred update server. By default\nit will use the appropriate update server for the cluster and region.",
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "additionalProperties": false
          },
          "status": {
            "description": "status contains information about the available updates and any in-progress\nupdates.",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "desired",
              "observedGeneration",
              "versionHash"
            ],
            "properties": {
              "availableUpdates": {
                "description": "availableUpdates contains updates recommended for this\ncluster. Updates which appear in conditionalUpdates but not in\navailableUpdates may expose this cluster to known issues. This list\nmay be empty if no updates are recommended, if the update service\nis unavailable, or if an invalid channel has been specified.",
                "x-kubernetes-list-type": "atomic"
              },
              "capabilities": {
                "description": "capabilities describes the state of optional, core cluster components.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "enabledCapabilities": {
                    "description": "enabledCapabilities lists all the capabilities that are currently managed.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "description": "ClusterVersionCapability enumerates optional, core cluster components.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "enum": [
                        "openshift-samples",
                        "baremetal",
                        "marketplace",
                        "Console",
                        "Insights",
                        "Storage",
                        "CSISnapshot",
                        "NodeTuning",
                        "MachineAPI",
                        "Build",
                        "DeploymentConfig",
                        "ImageRegistry",
                        "OperatorLifecycleManager",
                        "CloudCredential",
                        "Ingress",
                        "CloudControllerManager",
                        "OperatorLifecycleManagerV1"
                      ]
                    },
                    "x-kubernetes-list-type": "atomic"
                  },
                  "knownCapabilities": {
                    "description": "knownCapabilities lists all the capabilities known to the current cluster.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "description": "ClusterVersionCapability enumerates optional, core cluster components.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "enum": [
                        "openshift-samples",
                        "baremetal",
                        "marketplace",
                        "Console",
                        "Insights",
                        "Storage",
                        "CSISnapshot",
                        "NodeTuning",
                        "MachineAPI",
                        "Build",
                        "DeploymentConfig",
                        "ImageRegistry",
                        "OperatorLifecycleManager",
                        "CloudCredential",
                        "Ingress",
                        "CloudControllerManager",
                        "OperatorLifecycleManagerV1"
                      ]
                    },
                    "x-kubernetes-list-type": "atomic"
                  }
                },
                "additionalProperties": false
              },
              "conditionalUpdates": {
                "description": "conditionalUpdates contains the list of updates that may be\nrecommended for this cluster if it meets specific required\nconditions. Consumers interested in the set of updates that are\nactually recommended for this cluster should use\navailableUpdates. This list may be empty if no updates are\nrecommended, if the update service is unavailable, or if an empty\nor invalid channel has been specified.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "description": "ConditionalUpdate represents an update which is recommended to some\nclusters on the version the current cluster is reconciling, but which\nmay not be recommended for the current cluster.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "release",
                    "risks"
                  ],
                  "properties": {
                    "conditions": {
                      "description": "conditions represents the observations of the conditional update's\ncurrent status. Known types are:\n* Recommended, for whether the update is recommended for the current cluster.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "description": "Condition contains details for one aspect of the current state of this API Resource.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "lastTransitionTime",
                          "message",
                          "reason",
                          "status",
                          "type"
                        ],
                        "properties": {
                          "lastTransitionTime": {
                            "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                            "type": "string",
                            "format": "date-time"
                          },
                          "message": {
                            "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                            "type": "string",
                            "maxLength": 32768
                          },
                          "observedGeneration": {
                            "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int64",
                            "minimum": 0
                          },
                          "reason": {
                            "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                            "type": "string",
                            "maxLength": 1024,
                            "minLength": 1,
                            "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
                          },
                          "status": {
                            "description": "status of the condition, one of True, False, Unknown.",
                            "type": "string",
                            "enum": [
                              "True",
                              "False",
                              "Unknown"
                            ]
                          },
                          "type": {
                            "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                            "type": "string",
                            "maxLength": 316,
                            "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
                          }
                        },
                        "additionalProperties": false
                      },
                      "x-kubernetes-list-map-keys": [
                        "type"
                      ],
                      "x-kubernetes-list-type": "map"
                    },
                    "release": {
                      "description": "release is the target of the update.",
                      "type": "object",
                      "required": [
                        "image",
                        "version"
                      ],
                      "properties": {
                        "channels": {
                          "description": "channels is the set of Cincinnati channels to which the release\ncurrently belongs.",
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "x-kubernetes-list-type": "set"
                        },
                        "image": {
                          "description": "image is a container image location that contains the update. When this\nfield is part of spec, image is optional if version is specified and the\navailableUpdates field contains a matching version.",
                          "type": "string"
                        },
                        "url": {
                          "description": "url contains information about this release. This URL is set by\nthe 'url' metadata property on a release or the metadata returned by\nthe update API and should be displayed as a link in user\ninterfaces. The URL field may not be set for test or nightly\nreleases.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "version": {
                          "description": "version is a semantic version identifying the update version. When this\nfield is part of spec, version is optional if image is specified.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "risks": {
                      "description": "risks represents the range of issues associated with\nupdating to the target release. The cluster-version\noperator will evaluate all entries, and only recommend the\nupdate if there is at least one entry and all entries\nrecommend the update.",
                      "type": "array",
                      "minItems": 1,
                      "items": {
                        "description": "ConditionalUpdateRisk represents a reason and cluster-state\nfor not recommending a conditional update.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "matchingRules",
                          "message",
                          "name",
                          "url"
                        ],
                        "properties": {
                          "matchingRules": {
                            "description": "matchingRules is a slice of conditions for deciding which\nclusters match the risk and which do not. The slice is\nordered by decreasing precedence. The cluster-version\noperator will walk the slice in order, and stop after the\nfirst it can successfully evaluate. If no condition can be\nsuccessfully evaluated, the update will not be recommended.",
                            "type": "array",
                            "minItems": 1,
                            "items": {
                              "description": "ClusterCondition is a union of typed cluster conditions.  The 'type'\nproperty determines which of the type-specific properties are relevant.\nWhen evaluated on a cluster, the condition may match, not match, or\nfail to evaluate.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "required": [
                                "type"
                              ],
                              "properties": {
                                "promql": {
                                  "description": "promql represents a cluster condition based on PromQL.",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "promql"
                                  ],
                                  "properties": {
                                    "promql": {
                                      "description": "promql is a PromQL query classifying clusters. This query\nquery should return a 1 in the match case and a 0 in the\ndoes-not-match case. Queries which return no time\nseries, or which return values besides 0 or 1, are\nevaluation failures.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "type": {
                                  "description": "type represents the cluster-condition type. This defines\nthe members and semantics of any additional properties.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "PromQL"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            },
                            "x-kubernetes-list-type": "atomic"
                          },
                          "message": {
                            "description": "message provides additional information about the risk of\nupdating, in the event that matchingRules match the cluster\nstate. This is only to be consumed by humans. It may\ncontain Line Feed characters (U+000A), which should be\nrendered as new lines.",
                            "type": "string",
                            "minLength": 1
                          },
                          "name": {
                            "description": "name is the CamelCase reason for not recommending a\nconditional update, in the event that matchingRules match the\ncluster state.",
                            "type": "string",
                            "minLength": 1
                          },
                          "url": {
                            "description": "url contains information about this risk.",
                            "type": "string",
                            "format": "uri",
                            "minLength": 1
                          }
                        },
                        "additionalProperties": false
                      },
                      "x-kubernetes-list-map-keys": [
                        "name"
                      ],
                      "x-kubernetes-list-type": "map"
                    }
                  },
                  "additionalProperties": false
                },
                "x-kubernetes-list-type": "atomic"
              },
              "conditions": {
                "description": "conditions provides information about the cluster version. The condition\n\"Available\" is set to true if the desiredUpdate has been reached. The\ncondition \"Progressing\" is set to true if an update is being applied.\nThe condition \"Degraded\" is set to true if an update is currently blocked\nby a temporary or permanent error. Conditions are only valid for the\ncurrent desiredUpdate when metadata.generation is equal to\nstatus.generation.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "description": "ClusterOperatorStatusCondition represents the state of the operator's\nmanaged and monitored components.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "lastTransitionTime",
                    "status",
                    "type"
                  ],
                  "properties": {
                    "lastTransitionTime": {
                      "description": "lastTransitionTime is the time of the last update to the current status property.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "message": {
                      "description": "message provides additional information about the current condition.\nThis is only to be consumed by humans.  It may contain Line Feed\ncharacters (U+000A), which should be rendered as new lines.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "reason": {
                      "description": "reason is the CamelCase reason for the condition's current status.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "status": {
                      "description": "status of the condition, one of True, False, Unknown.",
                      "type": "string"
                    },
                    "type": {
                      "description": "type specifies the aspect reported by this condition.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "x-kubernetes-list-map-keys": [
                  "type"
                ],
                "x-kubernetes-list-type": "map"
              },
              "desired": {
                "description": "desired is the version that the cluster is reconciling towards.\nIf the cluster is not yet fully initialized desired will be set\nwith the information available, which may be an image or a tag.",
                "type": "object",
                "required": [
                  "image",
                  "version"
                ],
                "properties": {
                  "channels": {
                    "description": "channels is the set of Cincinnati channels to which the release\ncurrently belongs.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "image": {
                    "description": "image is a container image location that contains the update. When this\nfield is part of spec, image is optional if version is specified and the\navailableUpdates field contains a matching version.",
                    "type": "string"
                  },
                  "url": {
                    "description": "url contains information about this release. This URL is set by\nthe 'url' metadata property on a release or the metadata returned by\nthe update API and should be displayed as a link in user\ninterfaces. The URL field may not be set for test or nightly\nreleases.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "version": {
                    "description": "version is a semantic version identifying the update version. When this\nfield is part of spec, version is optional if image is specified.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "history": {
                "description": "history contains a list of the most recent versions applied to the cluster.\nThis value may be empty during cluster startup, and then will be updated\nwhen a new update is being applied. The newest update is first in the\nlist and it is ordered by recency. Updates in the history have state\nCompleted if the rollout completed - if an update was failing or halfway\napplied the state will be Partial. Only a limited amount of update history\nis preserved.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "description": "UpdateHistory is a single attempted update to the cluster.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "image",
                    "startedTime",
                    "state",
                    "verified"
                  ],
                  "properties": {
                    "acceptedRisks": {
                      "description": "acceptedRisks records risks which were accepted to initiate the update.\nFor example, it may menition an Upgradeable=False or missing signature\nthat was overriden via desiredUpdate.force, or an update that was\ninitiated despite not being in the availableUpdates set of recommended\nupdate targets.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "completionTime": {
                      "description": "completionTime, if set, is when the update was fully applied. The update\nthat is currently being applied will have a null completion time.\nCompletion time will always be set for entries that are not the current\nupdate (usually to the started time of the next update).",
                      "format": "date-time"
                    },
                    "image": {
                      "description": "image is a container image location that contains the update. This value\nis always populated.",
                      "type": "string"
                    },
                    "startedTime": {
                      "description": "startedTime is the time at which the update was started.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "state": {
                      "description": "state reflects whether the update was fully applied. The Partial state\nindicates the update is not fully applied, while the Completed state\nindicates the update was successfully rolled out at least once (all\nparts of the update successfully applied).",
                      "type": "string"
                    },
                    "verified": {
                      "description": "verified indicates whether the provided update was properly verified\nbefore it was installed. If this is false the cluster may not be trusted.\nVerified does not cover upgradeable checks that depend on the cluster\nstate at the time when the update target was accepted.",
                      "type": "boolean"
                    },
                    "version": {
                      "description": "version is a semantic version identifying the update version. If the\nrequested image does not define a version, or if a failure occurs\nretrieving the image, this value may be empty.",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                "x-kubernetes-list-type": "atomic"
              },
              "observedGeneration": {
                "description": "observedGeneration reports which version of the spec is being synced.\nIf this value is not equal to metadata.generation, then the desired\nand conditions fields may represent a previous version.",
                "type": "integer",
                "format": "int64"
              },
              "versionHash": {
                "description": "versionHash is a fingerprint of the content that the cluster will be\nupdated with. It is used by the operator to avoid unnecessary work\nand is for internal use only.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "x-kubernetes-group-version-kind": [
          {
            "group": "config.openshift.io",
            "kind": "ClusterVersion",
            "version": "v1"
          }
        ],
        "x-kubernetes-validations": [
          {
            "message": "the `marketplace` capability requires the `OperatorLifecycleManager` capability, which is neither explicitly or implicitly enabled in this cluster, please enable the `OperatorLifecycleManager` capability",
            "rule": "has(self.spec.capabilities) && has(self.spec.capabilities.additionalEnabledCapabilities) && self.spec.capabilities.baselineCapabilitySet == 'None' && 'marketplace' in self.spec.capabilities.additionalEnabledCapabilities ? 'OperatorLifecycleManager' in self.spec.capabilities.additionalEnabledCapabilities || (has(self.status) && has(self.status.capabilities) && has(self.status.capabilities.enabledCapabilities) && 'OperatorLifecycleManager' in self.status.capabilities.enabledCapabilities) : true"
          }
        ],
        "additionalProperties": false
      }
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "ClusterVersionList"
      ]
    },
    "metadata": {
      "description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "continue": {
          "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",
          "type": [
            "string",
            "null"
          ]
        },
        "remainingItemCount": {
          "description": "remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "resourceVersion": {
          "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type": [
            "string",
            "null"
          ]
        },
        "selfLink": {
          "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "config.openshift.io",
      "kind": "ClusterVersionList",
      "version": "v1"
    }
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}