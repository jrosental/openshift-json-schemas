{
  "description": "The `ServiceMonitor` custom resource definition (CRD) defines how `Prometheus` and `PrometheusAgent` can scrape metrics from a group of services.\nAmong other things, it allows to specify:\n* The services to scrape via label selectors.\n* The container ports to scrape.\n* Authentication credentials to use.\n* Target and metric relabeling.\n\n`Prometheus` and `PrometheusAgent` objects select `ServiceMonitor` objects using label and namespace selectors.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "ServiceMonitor"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "Specification of desired Service selection for target discovery by\nPrometheus.",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "endpoints",
        "selector"
      ],
      "properties": {
        "attachMetadata": {
          "description": "`attachMetadata` defines additional metadata which is added to the\ndiscovered targets.\n\nIt requires Prometheus >= v2.37.0.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "node": {
              "description": "When set to true, Prometheus attaches node metadata to the discovered\ntargets.\n\nThe Prometheus service account must have the `list` and `watch`\npermissions on the `Nodes` objects.",
              "type": [
                "boolean",
                "null"
              ]
            }
          }
        },
        "bodySizeLimit": {
          "description": "When defined, bodySizeLimit specifies a job level limit on the size\nof uncompressed response body that will be accepted by Prometheus.\n\nIt requires Prometheus >= v2.28.0.",
          "type": [
            "string",
            "null"
          ],
          "pattern": "(^0|([0-9]*[.])?[0-9]+((K|M|G|T|E|P)i?)?B)$"
        },
        "convertClassicHistogramsToNHCB": {
          "description": "Whether to convert all scraped classic histograms into a native histogram with custom buckets.\nIt requires Prometheus >= v3.0.0.",
          "type": [
            "boolean",
            "null"
          ]
        },
        "endpoints": {
          "description": "List of endpoints part of this ServiceMonitor.\nDefines how to scrape metrics from Kubernetes [Endpoints](https://kubernetes.io/docs/concepts/services-networking/service/#endpoints) objects.\nIn most cases, an Endpoints object is backed by a Kubernetes [Service](https://kubernetes.io/docs/concepts/services-networking/service/) object with the same name and labels.",
          "type": "array",
          "items": {
            "description": "Endpoint defines an endpoint serving Prometheus metrics to be scraped by\nPrometheus.",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "authorization": {
                "description": "`authorization` configures the Authorization header credentials to use when\nscraping the target.\n\nCannot be set at the same time as `basicAuth`, or `oauth2`.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "credentials": {
                    "description": "Selects a key of a Secret in the namespace that contains the credentials for authentication.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "key"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "optional": {
                        "description": "Specify whether the Secret or its key must be defined",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      }
                    },
                    "x-kubernetes-map-type": "atomic"
                  },
                  "type": {
                    "description": "Defines the authentication type. The value is case-insensitive.\n\n\"Basic\" is not a supported value.\n\nDefault: \"Bearer\"",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              },
              "basicAuth": {
                "description": "`basicAuth` configures the Basic Authentication credentials to use when\nscraping the target.\n\nCannot be set at the same time as `authorization`, or `oauth2`.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "password": {
                    "description": "`password` specifies a key of a Secret containing the password for\nauthentication.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "key"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "optional": {
                        "description": "Specify whether the Secret or its key must be defined",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      }
                    },
                    "x-kubernetes-map-type": "atomic"
                  },
                  "username": {
                    "description": "`username` specifies a key of a Secret containing the username for\nauthentication.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "key"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "optional": {
                        "description": "Specify whether the Secret or its key must be defined",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      }
                    },
                    "x-kubernetes-map-type": "atomic"
                  }
                }
              },
              "bearerTokenFile": {
                "description": "File to read bearer token for scraping the target.\n\nDeprecated: use `authorization` instead.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "bearerTokenSecret": {
                "description": "`bearerTokenSecret` specifies a key of a Secret containing the bearer\ntoken for scraping targets. The secret needs to be in the same namespace\nas the ServiceMonitor object and readable by the Prometheus Operator.\n\nDeprecated: use `authorization` instead.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "key"
                ],
                "properties": {
                  "key": {
                    "description": "The key of the secret to select from.  Must be a valid secret key.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "optional": {
                    "description": "Specify whether the Secret or its key must be defined",
                    "type": [
                      "boolean",
                      "null"
                    ]
                  }
                },
                "x-kubernetes-map-type": "atomic"
              },
              "enableHttp2": {
                "description": "`enableHttp2` can be used to disable HTTP2 when scraping the target.",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "filterRunning": {
                "description": "When true, the pods which are not running (e.g. either in Failed or\nSucceeded state) are dropped during the target discovery.\n\nIf unset, the filtering is enabled.\n\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#pod-phase",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "followRedirects": {
                "description": "`followRedirects` defines whether the scrape requests should follow HTTP\n3xx redirects.",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "honorLabels": {
                "description": "When true, `honorLabels` preserves the metric's labels when they collide\nwith the target's labels.",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "honorTimestamps": {
                "description": "`honorTimestamps` controls whether Prometheus preserves the timestamps\nwhen exposed by the target.",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "interval": {
                "description": "Interval at which Prometheus scrapes the metrics from the target.\n\nIf empty, Prometheus uses the global scrape interval.",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"
              },
              "metricRelabelings": {
                "description": "`metricRelabelings` configures the relabeling rules to apply to the\nsamples before ingestion.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "description": "RelabelConfig allows dynamic rewriting of the label set for targets, alerts,\nscraped samples and remote write samples.\n\nMore info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "action": {
                      "description": "Action to perform based on the regex matching.\n\n`Uppercase` and `Lowercase` actions require Prometheus >= v2.36.0.\n`DropEqual` and `KeepEqual` actions require Prometheus >= v2.41.0.\n\nDefault: \"Replace\"",
                      "type": [
                        "string",
                        "null"
                      ],
                      "enum": [
                        "replace",
                        "Replace",
                        "keep",
                        "Keep",
                        "drop",
                        "Drop",
                        "hashmod",
                        "HashMod",
                        "labelmap",
                        "LabelMap",
                        "labeldrop",
                        "LabelDrop",
                        "labelkeep",
                        "LabelKeep",
                        "lowercase",
                        "Lowercase",
                        "uppercase",
                        "Uppercase",
                        "keepequal",
                        "KeepEqual",
                        "dropequal",
                        "DropEqual"
                      ]
                    },
                    "modulus": {
                      "description": "Modulus to take of the hash of the source label values.\n\nOnly applicable when the action is `HashMod`.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "format": "int64"
                    },
                    "regex": {
                      "description": "Regular expression against which the extracted value is matched.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "replacement": {
                      "description": "Replacement value against which a Replace action is performed if the\nregular expression matches.\n\nRegex capture groups are available.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "separator": {
                      "description": "Separator is the string between concatenated SourceLabels.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "sourceLabels": {
                      "description": "The source labels select values from existing labels. Their content is\nconcatenated using the configured Separator and matched against the\nconfigured regular expression.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "description": "LabelName is a valid Prometheus label name which may only contain ASCII\nletters, numbers, as well as underscores.",
                        "type": [
                          "string",
                          "null"
                        ],
                        "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$"
                      }
                    },
                    "targetLabel": {
                      "description": "Label to which the resulting string is written in a replacement.\n\nIt is mandatory for `Replace`, `HashMod`, `Lowercase`, `Uppercase`,\n`KeepEqual` and `DropEqual` actions.\n\nRegex capture groups are available.",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                }
              },
              "noProxy": {
                "description": "`noProxy` is a comma-separated string that can contain IPs, CIDR notation, domain names\nthat should be excluded from proxying. IP and domain names can\ncontain port numbers.\n\nIt requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "oauth2": {
                "description": "`oauth2` configures the OAuth2 settings to use when scraping the target.\n\nIt requires Prometheus >= 2.27.0.\n\nCannot be set at the same time as `authorization`, or `basicAuth`.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "clientId",
                  "clientSecret",
                  "tokenUrl"
                ],
                "properties": {
                  "clientId": {
                    "description": "`clientId` specifies a key of a Secret or ConfigMap containing the\nOAuth2 client's ID.",
                    "type": "object",
                    "properties": {
                      "configMap": {
                        "description": "ConfigMap containing data to use for the targets.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "optional": {
                            "description": "Specify whether the ConfigMap or its key must be defined",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        },
                        "x-kubernetes-map-type": "atomic"
                      },
                      "secret": {
                        "description": "Secret containing data to use for the targets.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        },
                        "x-kubernetes-map-type": "atomic"
                      }
                    }
                  },
                  "clientSecret": {
                    "description": "`clientSecret` specifies a key of a Secret containing the OAuth2\nclient's secret.",
                    "type": "object",
                    "required": [
                      "key"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "optional": {
                        "description": "Specify whether the Secret or its key must be defined",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      }
                    },
                    "x-kubernetes-map-type": "atomic"
                  },
                  "endpointParams": {
                    "description": "`endpointParams` configures the HTTP parameters to append to the token\nURL.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "noProxy": {
                    "description": "`noProxy` is a comma-separated string that can contain IPs, CIDR notation, domain names\nthat should be excluded from proxying. IP and domain names can\ncontain port numbers.\n\nIt requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "proxyConnectHeader": {
                    "description": "ProxyConnectHeader optionally specifies headers to send to\nproxies during CONNECT requests.\n\nIt requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "description": "SecretKeySelector selects a key of a Secret.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        },
                        "x-kubernetes-map-type": "atomic"
                      }
                    },
                    "x-kubernetes-map-type": "atomic"
                  },
                  "proxyFromEnvironment": {
                    "description": "Whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).\n\nIt requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.",
                    "type": [
                      "boolean",
                      "null"
                    ]
                  },
                  "proxyUrl": {
                    "description": "`proxyURL` defines the HTTP proxy server to use.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "pattern": "^(http|https|socks5)://.+$"
                  },
                  "scopes": {
                    "description": "`scopes` defines the OAuth2 scopes used for the token request.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "tlsConfig": {
                    "description": "TLS configuration to use when connecting to the OAuth2 server.\nIt requires Prometheus >= v2.43.0.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "ca": {
                        "description": "Certificate authority used when verifying server certificates.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "configMap": {
                            "description": "ConfigMap containing data to use for the targets.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "description": "The key to select.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "optional": {
                                "description": "Specify whether the ConfigMap or its key must be defined",
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "secret": {
                            "description": "Secret containing data to use for the targets.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "description": "The key of the secret to select from.  Must be a valid secret key.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "optional": {
                                "description": "Specify whether the Secret or its key must be defined",
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          }
                        }
                      },
                      "cert": {
                        "description": "Client certificate to present when doing client-authentication.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "configMap": {
                            "description": "ConfigMap containing data to use for the targets.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "description": "The key to select.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "optional": {
                                "description": "Specify whether the ConfigMap or its key must be defined",
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "secret": {
                            "description": "Secret containing data to use for the targets.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "description": "The key of the secret to select from.  Must be a valid secret key.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "optional": {
                                "description": "Specify whether the Secret or its key must be defined",
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          }
                        }
                      },
                      "insecureSkipVerify": {
                        "description": "Disable target certificate validation.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "keySecret": {
                        "description": "Secret containing the client key file for the targets.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        },
                        "x-kubernetes-map-type": "atomic"
                      },
                      "maxVersion": {
                        "description": "Maximum acceptable TLS version.\n\nIt requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.",
                        "type": [
                          "string",
                          "null"
                        ],
                        "enum": [
                          "TLS10",
                          "TLS11",
                          "TLS12",
                          "TLS13"
                        ]
                      },
                      "minVersion": {
                        "description": "Minimum acceptable TLS version.\n\nIt requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.",
                        "type": [
                          "string",
                          "null"
                        ],
                        "enum": [
                          "TLS10",
                          "TLS11",
                          "TLS12",
                          "TLS13"
                        ]
                      },
                      "serverName": {
                        "description": "Used to verify the hostname for the targets.",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  },
                  "tokenUrl": {
                    "description": "`tokenURL` configures the URL to fetch the token from.",
                    "type": "string",
                    "minLength": 1
                  }
                }
              },
              "params": {
                "description": "params define optional HTTP URL parameters.",
                "type": [
                  "object",
                  "null"
                ],
                "additionalProperties": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              },
              "path": {
                "description": "HTTP path from which to scrape for metrics.\n\nIf empty, Prometheus uses the default value (e.g. `/metrics`).",
                "type": [
                  "string",
                  "null"
                ]
              },
              "port": {
                "description": "Name of the Service port which this endpoint refers to.\n\nIt takes precedence over `targetPort`.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "proxyConnectHeader": {
                "description": "ProxyConnectHeader optionally specifies headers to send to\nproxies during CONNECT requests.\n\nIt requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.",
                "type": [
                  "object",
                  "null"
                ],
                "additionalProperties": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "description": "SecretKeySelector selects a key of a Secret.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "key"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "optional": {
                        "description": "Specify whether the Secret or its key must be defined",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      }
                    },
                    "x-kubernetes-map-type": "atomic"
                  }
                },
                "x-kubernetes-map-type": "atomic"
              },
              "proxyFromEnvironment": {
                "description": "Whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).\n\nIt requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "proxyUrl": {
                "description": "`proxyURL` defines the HTTP proxy server to use.",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^(http|https|socks5)://.+$"
              },
              "relabelings": {
                "description": "`relabelings` configures the relabeling rules to apply the target's\nmetadata labels.\n\nThe Operator automatically adds relabelings for a few standard Kubernetes fields.\n\nThe original scrape job's name is available via the `__tmp_prometheus_job_name` label.\n\nMore info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "description": "RelabelConfig allows dynamic rewriting of the label set for targets, alerts,\nscraped samples and remote write samples.\n\nMore info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "action": {
                      "description": "Action to perform based on the regex matching.\n\n`Uppercase` and `Lowercase` actions require Prometheus >= v2.36.0.\n`DropEqual` and `KeepEqual` actions require Prometheus >= v2.41.0.\n\nDefault: \"Replace\"",
                      "type": [
                        "string",
                        "null"
                      ],
                      "enum": [
                        "replace",
                        "Replace",
                        "keep",
                        "Keep",
                        "drop",
                        "Drop",
                        "hashmod",
                        "HashMod",
                        "labelmap",
                        "LabelMap",
                        "labeldrop",
                        "LabelDrop",
                        "labelkeep",
                        "LabelKeep",
                        "lowercase",
                        "Lowercase",
                        "uppercase",
                        "Uppercase",
                        "keepequal",
                        "KeepEqual",
                        "dropequal",
                        "DropEqual"
                      ]
                    },
                    "modulus": {
                      "description": "Modulus to take of the hash of the source label values.\n\nOnly applicable when the action is `HashMod`.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "format": "int64"
                    },
                    "regex": {
                      "description": "Regular expression against which the extracted value is matched.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "replacement": {
                      "description": "Replacement value against which a Replace action is performed if the\nregular expression matches.\n\nRegex capture groups are available.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "separator": {
                      "description": "Separator is the string between concatenated SourceLabels.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "sourceLabels": {
                      "description": "The source labels select values from existing labels. Their content is\nconcatenated using the configured Separator and matched against the\nconfigured regular expression.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "description": "LabelName is a valid Prometheus label name which may only contain ASCII\nletters, numbers, as well as underscores.",
                        "type": [
                          "string",
                          "null"
                        ],
                        "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$"
                      }
                    },
                    "targetLabel": {
                      "description": "Label to which the resulting string is written in a replacement.\n\nIt is mandatory for `Replace`, `HashMod`, `Lowercase`, `Uppercase`,\n`KeepEqual` and `DropEqual` actions.\n\nRegex capture groups are available.",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                }
              },
              "scheme": {
                "description": "HTTP scheme to use for scraping.\n\n`http` and `https` are the expected values unless you rewrite the\n`__scheme__` label via relabeling.\n\nIf empty, Prometheus uses the default value `http`.",
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "http",
                  "https"
                ]
              },
              "scrapeTimeout": {
                "description": "Timeout after which Prometheus considers the scrape to be failed.\n\nIf empty, Prometheus uses the global scrape timeout unless it is less\nthan the target's scrape interval value in which the latter is used.\nThe value cannot be greater than the scrape interval otherwise the operator will reject the resource.",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"
              },
              "targetPort": {
                "description": "Name or number of the target port of the `Pod` object behind the\nService. The port must be specified with the container's port property.",
                "x-kubernetes-int-or-string": true
              },
              "tlsConfig": {
                "description": "TLS configuration to use when scraping the target.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "ca": {
                    "description": "Certificate authority used when verifying server certificates.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "configMap": {
                        "description": "ConfigMap containing data to use for the targets.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "optional": {
                            "description": "Specify whether the ConfigMap or its key must be defined",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        },
                        "x-kubernetes-map-type": "atomic"
                      },
                      "secret": {
                        "description": "Secret containing data to use for the targets.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        },
                        "x-kubernetes-map-type": "atomic"
                      }
                    }
                  },
                  "caFile": {
                    "description": "Path to the CA cert in the Prometheus container to use for the targets.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "cert": {
                    "description": "Client certificate to present when doing client-authentication.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "configMap": {
                        "description": "ConfigMap containing data to use for the targets.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "optional": {
                            "description": "Specify whether the ConfigMap or its key must be defined",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        },
                        "x-kubernetes-map-type": "atomic"
                      },
                      "secret": {
                        "description": "Secret containing data to use for the targets.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        },
                        "x-kubernetes-map-type": "atomic"
                      }
                    }
                  },
                  "certFile": {
                    "description": "Path to the client cert file in the Prometheus container for the targets.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "insecureSkipVerify": {
                    "description": "Disable target certificate validation.",
                    "type": [
                      "boolean",
                      "null"
                    ]
                  },
                  "keyFile": {
                    "description": "Path to the client key file in the Prometheus container for the targets.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "keySecret": {
                    "description": "Secret containing the client key file for the targets.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "key"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "optional": {
                        "description": "Specify whether the Secret or its key must be defined",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      }
                    },
                    "x-kubernetes-map-type": "atomic"
                  },
                  "maxVersion": {
                    "description": "Maximum acceptable TLS version.\n\nIt requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "enum": [
                      "TLS10",
                      "TLS11",
                      "TLS12",
                      "TLS13"
                    ]
                  },
                  "minVersion": {
                    "description": "Minimum acceptable TLS version.\n\nIt requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "enum": [
                      "TLS10",
                      "TLS11",
                      "TLS12",
                      "TLS13"
                    ]
                  },
                  "serverName": {
                    "description": "Used to verify the hostname for the targets.",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              },
              "trackTimestampsStaleness": {
                "description": "`trackTimestampsStaleness` defines whether Prometheus tracks staleness of\nthe metrics that have an explicit timestamp present in scraped data.\nHas no effect if `honorTimestamps` is false.\n\nIt requires Prometheus >= v2.48.0.",
                "type": [
                  "boolean",
                  "null"
                ]
              }
            }
          }
        },
        "fallbackScrapeProtocol": {
          "description": "The protocol to use if a scrape returns blank, unparseable, or otherwise invalid Content-Type.\n\nIt requires Prometheus >= v3.0.0.",
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "PrometheusProto",
            "OpenMetricsText0.0.1",
            "OpenMetricsText1.0.0",
            "PrometheusText0.0.4",
            "PrometheusText1.0.0"
          ]
        },
        "jobLabel": {
          "description": "`jobLabel` selects the label from the associated Kubernetes `Service`\nobject which will be used as the `job` label for all metrics.\n\nFor example if `jobLabel` is set to `foo` and the Kubernetes `Service`\nobject is labeled with `foo: bar`, then Prometheus adds the `job=\"bar\"`\nlabel to all ingested metrics.\n\nIf the value of this field is empty or if the label doesn't exist for\nthe given Service, the `job` label of the metrics defaults to the name\nof the associated Kubernetes `Service`.",
          "type": [
            "string",
            "null"
          ]
        },
        "keepDroppedTargets": {
          "description": "Per-scrape limit on the number of targets dropped by relabeling\nthat will be kept in memory. 0 means no limit.\n\nIt requires Prometheus >= v2.47.0.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "labelLimit": {
          "description": "Per-scrape limit on number of labels that will be accepted for a sample.\n\nIt requires Prometheus >= v2.27.0.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "labelNameLengthLimit": {
          "description": "Per-scrape limit on length of labels name that will be accepted for a sample.\n\nIt requires Prometheus >= v2.27.0.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "labelValueLengthLimit": {
          "description": "Per-scrape limit on length of labels value that will be accepted for a sample.\n\nIt requires Prometheus >= v2.27.0.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "namespaceSelector": {
          "description": "`namespaceSelector` defines in which namespace(s) Prometheus should discover the services.\nBy default, the services are discovered in the same namespace as the `ServiceMonitor` object but it is possible to select pods across different/all namespaces.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "any": {
              "description": "Boolean describing whether all namespaces are selected in contrast to a\nlist restricting them.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "matchNames": {
              "description": "List of namespace names to select from.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        },
        "nativeHistogramBucketLimit": {
          "description": "If there are more than this many buckets in a native histogram,\nbuckets will be merged to stay within the limit.\nIt requires Prometheus >= v2.45.0.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "nativeHistogramMinBucketFactor": {
          "description": "If the growth factor of one bucket to the next is smaller than this,\nbuckets will be merged to increase the factor sufficiently.\nIt requires Prometheus >= v2.50.0.",
          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
          "x-kubernetes-int-or-string": true
        },
        "podTargetLabels": {
          "description": "`podTargetLabels` defines the labels which are transferred from the\nassociated Kubernetes `Pod` object onto the ingested metrics.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "sampleLimit": {
          "description": "`sampleLimit` defines a per-scrape limit on the number of scraped samples\nthat will be accepted.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "scrapeClass": {
          "description": "The scrape class to apply.",
          "type": [
            "string",
            "null"
          ],
          "minLength": 1
        },
        "scrapeClassicHistograms": {
          "description": "Whether to scrape a classic histogram that is also exposed as a native histogram.\nIt requires Prometheus >= v2.45.0.\n\nNotice: `scrapeClassicHistograms` corresponds to the `always_scrape_classic_histograms` field in the Prometheus configuration.",
          "type": [
            "boolean",
            "null"
          ]
        },
        "scrapeProtocols": {
          "description": "`scrapeProtocols` defines the protocols to negotiate during a scrape. It tells clients the\nprotocols supported by Prometheus in order of preference (from most to least preferred).\n\nIf unset, Prometheus uses its default value.\n\nIt requires Prometheus >= v2.49.0.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "ScrapeProtocol represents a protocol used by Prometheus for scraping metrics.\nSupported values are:\n* `OpenMetricsText0.0.1`\n* `OpenMetricsText1.0.0`\n* `PrometheusProto`\n* `PrometheusText0.0.4`\n* `PrometheusText1.0.0`",
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "PrometheusProto",
              "OpenMetricsText0.0.1",
              "OpenMetricsText1.0.0",
              "PrometheusText0.0.4",
              "PrometheusText1.0.0"
            ]
          },
          "x-kubernetes-list-type": "set"
        },
        "selector": {
          "description": "Label selector to select the Kubernetes `Endpoints` objects to scrape metrics from.",
          "type": "object",
          "properties": {
            "matchExpressions": {
              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "key",
                  "operator"
                ],
                "properties": {
                  "key": {
                    "description": "key is the label key that the selector applies to.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                    "type": "string"
                  },
                  "values": {
                    "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "x-kubernetes-list-type": "atomic"
                  }
                }
              },
              "x-kubernetes-list-type": "atomic"
            },
            "matchLabels": {
              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          "x-kubernetes-map-type": "atomic"
        },
        "selectorMechanism": {
          "description": "Mechanism used to select the endpoints to scrape.\nBy default, the selection process relies on relabel configurations to filter the discovered targets.\nAlternatively, you can opt in for role selectors, which may offer better efficiency in large clusters.\nWhich strategy is best for your use case needs to be carefully evaluated.\n\nIt requires Prometheus >= v2.17.0.",
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "RelabelConfig",
            "RoleSelector"
          ]
        },
        "targetLabels": {
          "description": "`targetLabels` defines the labels which are transferred from the\nassociated Kubernetes `Service` object onto the ingested metrics.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "targetLimit": {
          "description": "`targetLimit` defines a limit on the number of scraped targets that will\nbe accepted.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        }
      }
    },
    "status": {
      "description": "This Status subresource is under active development and is updated only when the\n\"StatusForConfigurationResources\" feature gate is enabled.\n\nMost recent observed status of the ServiceMonitor. Read-only.\nMore info:\nhttps://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "bindings": {
          "description": "The list of workload resources (Prometheus or PrometheusAgent) which select the configuration resource.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "WorkloadBinding is a link between a configuration resource and a workload resource.",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "group",
              "name",
              "namespace",
              "resource"
            ],
            "properties": {
              "conditions": {
                "description": "The current state of the configuration resource when bound to the referenced Prometheus object.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "description": "ConfigResourceCondition describes the status of configuration resources linked to Prometheus, PrometheusAgent, Alertmanager, or ThanosRuler.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "lastTransitionTime",
                    "status",
                    "type"
                  ],
                  "properties": {
                    "lastTransitionTime": {
                      "description": "LastTransitionTime is the time of the last update to the current status property.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "message": {
                      "description": "Human-readable message indicating details for the condition's last transition.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "observedGeneration": {
                      "description": "ObservedGeneration represents the .metadata.generation that the\ncondition was set based upon. For instance, if `.metadata.generation` is\ncurrently 12, but the `.status.conditions[].observedGeneration` is 9, the\ncondition is out of date with respect to the current state of the object.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "format": "int64"
                    },
                    "reason": {
                      "description": "Reason for the condition's last transition.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "status": {
                      "description": "Status of the condition.",
                      "type": "string",
                      "minLength": 1
                    },
                    "type": {
                      "description": "Type of the condition being reported.\nCurrently, only \"Accepted\" is supported.",
                      "type": "string",
                      "minLength": 1,
                      "enum": [
                        "Accepted"
                      ]
                    }
                  }
                },
                "x-kubernetes-list-map-keys": [
                  "type"
                ],
                "x-kubernetes-list-type": "map"
              },
              "group": {
                "description": "The group of the referenced resource.",
                "type": "string",
                "enum": [
                  "monitoring.coreos.com"
                ]
              },
              "name": {
                "description": "The name of the referenced object.",
                "type": "string",
                "minLength": 1
              },
              "namespace": {
                "description": "The namespace of the referenced object.",
                "type": "string",
                "minLength": 1
              },
              "resource": {
                "description": "The type of resource being referenced (e.g. Prometheus or PrometheusAgent).",
                "type": "string",
                "enum": [
                  "prometheuses",
                  "prometheusagents"
                ]
              }
            }
          }
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "monitoring.coreos.com",
      "kind": "ServiceMonitor",
      "version": "v1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}