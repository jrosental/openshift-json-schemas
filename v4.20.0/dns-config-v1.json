{
  "description": "DNS holds cluster-wide information about DNS. The canonical name is `cluster`\n\nCompatibility level 1: Stable within a major release for a minimum of 12 months or 3 minor releases (whichever is longer).",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "config.openshift.io/v1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "DNS"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "https://raw.githubusercontent.com/melmorabity/openshift-json-schemas/main/v4.20/_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "spec holds user settable values for configuration",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "baseDomain": {
          "description": "baseDomain is the base domain of the cluster. All managed DNS records will\nbe sub-domains of this base.\n\nFor example, given the base domain `openshift.example.com`, an API server\nDNS record may be created for `cluster-api.openshift.example.com`.\n\nOnce set, this field cannot be changed.",
          "type": [
            "string",
            "null"
          ]
        },
        "platform": {
          "description": "platform holds configuration specific to the underlying\ninfrastructure provider for DNS.\nWhen omitted, this means the user has no opinion and the platform is left\nto choose reasonable defaults. These defaults are subject to change over time.",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "type"
          ],
          "properties": {
            "aws": {
              "description": "aws contains DNS configuration specific to the Amazon Web Services cloud provider.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "privateZoneIAMRole": {
                  "description": "privateZoneIAMRole contains the ARN of an IAM role that should be assumed when performing\noperations on the cluster's private hosted zone specified in the cluster DNS config.\nWhen left empty, no role should be assumed.",
                  "type": [
                    "string",
                    "null"
                  ],
                  "pattern": "^arn:(aws|aws-cn|aws-us-gov):iam::[0-9]{12}:role\\/.*$"
                }
              }
            },
            "type": {
              "description": "type is the underlying infrastructure provider for the cluster.\nAllowed values: \"\", \"AWS\".\n\nIndividual components may not support all platforms,\nand must handle unrecognized platforms with best-effort defaults.",
              "type": "string",
              "enum": [
                "",
                "AWS",
                "Azure",
                "BareMetal",
                "GCP",
                "Libvirt",
                "OpenStack",
                "None",
                "VSphere",
                "oVirt",
                "IBMCloud",
                "KubeVirt",
                "EquinixMetal",
                "PowerVS",
                "AlibabaCloud",
                "Nutanix",
                "External"
              ],
              "x-kubernetes-validations": [
                {
                  "message": "allowed values are '' and 'AWS'",
                  "rule": "self in ['','AWS']"
                }
              ]
            }
          },
          "x-kubernetes-validations": [
            {
              "message": "aws configuration is required when platform is AWS, and forbidden otherwise",
              "rule": "has(self.type) && self.type == 'AWS' ?  has(self.aws) : !has(self.aws)"
            }
          ]
        },
        "privateZone": {
          "description": "privateZone is the location where all the DNS records that are only available internally\nto the cluster exist.\n\nIf this field is nil, no private records should be created.\n\nOnce set, this field cannot be changed.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "id": {
              "description": "id is the identifier that can be used to find the DNS hosted zone.\n\non AWS zone can be fetched using `ID` as id in [1]\non Azure zone can be fetched using `ID` as a pre-determined name in [2],\non GCP zone can be fetched using `ID` as a pre-determined name in [3].\n\n[1]: https://docs.aws.amazon.com/cli/latest/reference/route53/get-hosted-zone.html#options\n[2]: https://docs.microsoft.com/en-us/cli/azure/network/dns/zone?view=azure-cli-latest#az-network-dns-zone-show\n[3]: https://cloud.google.com/dns/docs/reference/v1/managedZones/get",
              "type": [
                "string",
                "null"
              ]
            },
            "tags": {
              "description": "tags can be used to query the DNS hosted zone.\n\non AWS, resourcegroupstaggingapi [1] can be used to fetch a zone using `Tags` as tag-filters,\n\n[1]: https://docs.aws.amazon.com/cli/latest/reference/resourcegroupstaggingapi/get-resources.html#options",
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        },
        "publicZone": {
          "description": "publicZone is the location where all the DNS records that are publicly accessible to\nthe internet exist.\n\nIf this field is nil, no public records should be created.\n\nOnce set, this field cannot be changed.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "id": {
              "description": "id is the identifier that can be used to find the DNS hosted zone.\n\non AWS zone can be fetched using `ID` as id in [1]\non Azure zone can be fetched using `ID` as a pre-determined name in [2],\non GCP zone can be fetched using `ID` as a pre-determined name in [3].\n\n[1]: https://docs.aws.amazon.com/cli/latest/reference/route53/get-hosted-zone.html#options\n[2]: https://docs.microsoft.com/en-us/cli/azure/network/dns/zone?view=azure-cli-latest#az-network-dns-zone-show\n[3]: https://cloud.google.com/dns/docs/reference/v1/managedZones/get",
              "type": [
                "string",
                "null"
              ]
            },
            "tags": {
              "description": "tags can be used to query the DNS hosted zone.\n\non AWS, resourcegroupstaggingapi [1] can be used to fetch a zone using `Tags` as tag-filters,\n\n[1]: https://docs.aws.amazon.com/cli/latest/reference/resourcegroupstaggingapi/get-resources.html#options",
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        }
      }
    },
    "status": {
      "description": "status holds observed values from the cluster. They may not be overridden.",
      "type": [
        "object",
        "null"
      ]
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "config.openshift.io",
      "kind": "DNS",
      "version": "v1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}